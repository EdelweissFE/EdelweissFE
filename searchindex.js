Search.setIndex({"docnames": ["contributors", "documentation/analyticalfields", "documentation/constraints", "documentation/dofmanager", "documentation/elements", "documentation/exceptions", "documentation/fieldoutputmanager", "documentation/fields", "documentation/generators", "documentation/index", "documentation/jobs", "documentation/journal", "documentation/keywords", "documentation/linsolvers", "documentation/materials", "documentation/mesh", "documentation/models", "documentation/output", "documentation/parallelization", "documentation/phenomena", "documentation/plotter", "documentation/points", "documentation/sections", "documentation/sets", "documentation/solvers", "documentation/stepactions", "documentation/steps", "documentation/syntax", "documentation/utils", "documentation/variables", "features", "index", "installation", "prerequisites", "publications"], "filenames": ["contributors.rst", "documentation/analyticalfields.rst", "documentation/constraints.rst", "documentation/dofmanager.rst", "documentation/elements.rst", "documentation/exceptions.rst", "documentation/fieldoutputmanager.rst", "documentation/fields.rst", "documentation/generators.rst", "documentation/index.rst", "documentation/jobs.rst", "documentation/journal.rst", "documentation/keywords.rst", "documentation/linsolvers.rst", "documentation/materials.rst", "documentation/mesh.rst", "documentation/models.rst", "documentation/output.rst", "documentation/parallelization.rst", "documentation/phenomena.rst", "documentation/plotter.rst", "documentation/points.rst", "documentation/sections.rst", "documentation/sets.rst", "documentation/solvers.rst", "documentation/stepactions.rst", "documentation/steps.rst", "documentation/syntax.rst", "documentation/utils.rst", "documentation/variables.rst", "features.rst", "index.rst", "installation.rst", "prerequisites.rst", "publications.rst"], "titles": ["Contributors", "Analytical fields", "Constraints", "DOF manager", "Elements", "Exceptions", "Field outputs", "Fields", "Generators", "Documentation", "Inputfile driven simulations", "Journal", "&lt;no title&gt;", "Linear solvers", "Materials", "Creating finite element meshes", "Models", "Outputmanagers", "Parallelization", "Physical phenomena", "Plotting", "Points", "Sections", "Sets", "Solvers", "Step actions", "Steps", "Input file syntax", "Utilities", "Variables", "Features", "Welcome to EdelweissFE", "Installation", "Prerequisites", "Publications"], "terms": {"edelweissf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34], "wa": [0, 2, 4, 24, 26], "initi": [0, 2, 4, 9, 14, 16, 26, 28], "matthia": 0, "neuner": [0, 34], "2017": 0, "In": [0, 4, 14, 25, 27, 33], "cours": 0, "sever": [0, 28, 32], "year": 0, "develop": [0, 4, 31], "follow": [0, 4, 14, 34], "peopl": 0, "contribut": [0, 2], "significantli": 0, "alphabet": 0, "order": [0, 2, 4, 14, 17, 19, 23, 26], "nasser": 0, "alkmim": 0, "innsbruck": 0, "univers": [0, 14], "alexand": 0, "dummer": [0, 34], "paul": 0, "hofer": 0, "thoma": [0, 14], "mader": 0, "daniel": 0, "reitmair": 0, "magdalena": [0, 17], "schreter": [0, 34], "valu": [1, 3, 4, 6, 7, 8, 9, 12, 17, 26, 27, 29], "spatial": [1, 4, 5, 7, 8, 10, 12, 14, 16, 21, 24, 27, 29], "coordin": [1, 4, 8, 15, 21, 25], "e": [1, 2, 3, 4, 6, 7, 8, 14, 15, 18, 19, 25, 28, 29, 31], "g": [1, 2, 3, 4, 6, 7, 14, 18, 25, 28, 29, 31, 34], "vari": 1, "materi": [1, 2, 4, 6, 8, 9, 15, 16, 17, 22, 31, 34], "properti": [1, 2, 4, 12, 14, 22, 25, 27], "relev": [1, 4, 6, 8, 10, 11, 13, 14, 15, 19, 20, 21, 22, 23, 25, 27, 29], "modul": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 28, 29, 31, 32], "analyticalfield": [1, 16, 25], "us": [1, 2, 4, 5, 6, 9, 11, 13, 14, 15, 17, 18, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34], "sclar": 1, "descript": [1, 2, 6, 8, 12, 14, 17, 20, 24, 25, 27], "f": [1, 2, 4, 6, 8, 14, 15, 17, 24, 25], "x": [1, 2, 4, 6, 8, 14, 15, 17, 20, 24, 25, 31], "y": [1, 6, 8, 14, 17, 20, 25], "z": [1, 4, 8, 12, 27, 31], "python": [1, 3, 9, 18, 27, 30, 31, 32, 33], "variabl": [1, 2, 3, 7, 8, 9, 14, 16, 17], "dictionari": [1, 2, 3, 6, 10, 20, 24, 25, 26, 27], "contain": [1, 2, 3, 4, 5, 6, 10, 14, 19, 23, 24, 25, 26, 28, 32], "model": [1, 2, 4, 6, 9, 10, 17, 24, 26, 31, 32, 34], "can": [1, 2, 3, 4, 6, 11, 14, 20, 25, 27, 28, 31, 32], "access": [1, 3, 6, 7, 17, 20, 25, 33], "exampl": [1, 2, 4, 6, 7, 8, 14, 15, 17, 22, 25, 32], "testfil": [1, 2, 4, 6, 8, 15, 17, 25, 31, 32], "analyticalfieldsscalarexpress": 1, "test": [1, 2, 3, 4, 8, 15, 17, 25, 31, 32], "inp": [1, 2, 4, 6, 8, 15, 17, 18, 25, 31, 32], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 25, 27, 28, 31], "linearelast": [1, 2, 4, 8, 14, 15, 25, 31], "id": [1, 2, 4, 6, 8, 12, 14, 15, 17, 20, 25, 27, 29, 31], "line": [1, 8, 9, 11, 12, 13, 25, 27], "isotrop": [1, 2, 4, 8, 14, 15, 31], "nu": [1, 2, 4, 8, 14, 15, 25, 31], "1": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 20, 22, 25, 27, 28, 31, 32, 33, 34], "8e4": [1, 4, 8, 15, 31], "0": [1, 2, 4, 6, 7, 8, 12, 14, 15, 17, 20, 22, 25, 27, 31, 32, 33], "22": [1, 4, 8, 14, 15, 31], "job": [1, 2, 4, 6, 8, 10, 15, 17, 20, 24, 25, 26, 31], "domain": [1, 2, 3, 4, 5, 6, 8, 12, 15, 17, 22, 25, 27, 31], "3d": [1, 4, 9, 12, 14, 15, 25, 27, 28, 31, 34], "solver": [1, 2, 4, 6, 8, 9, 10, 15, 17, 18, 25, 26, 30, 31], "nistparallel": [1, 2, 8, 18, 24], "thesolv": [1, 2, 4, 8, 13, 15, 17, 25, 31], "modelgener": [1, 2, 4, 6, 8, 17, 25, 31], "gener": [1, 2, 4, 6, 9, 15, 25, 28, 31], "boxgen": [1, 2, 4, 9, 25, 31], "gen": [1, 2, 4, 6, 8, 17, 25, 31], "x0": [1, 4, 6, 8, 17, 25], "y0": [1, 4, 6, 8, 14, 17, 25], "z0": [1, 8], "nx": [1, 2, 4, 6, 8, 17, 25, 31], "5": [1, 2, 4, 8, 15, 17, 25, 31, 32, 34], "ny": [1, 2, 4, 6, 8, 17, 25, 31], "nz": [1, 2, 4, 8, 25, 31], "10": [1, 2, 4, 6, 8, 15, 25, 31, 32, 34], "lx": [1, 2, 4, 8, 25, 31], "ly": [1, 2, 4, 8, 25, 31], "lz": [1, 2, 4, 8, 25, 31], "2": [1, 2, 4, 6, 7, 8, 14, 15, 17, 25, 31, 32, 34], "eltyp": [1, 2, 4, 6, 8, 17, 25, 31], "c3d8": [1, 2, 4, 8, 15], "section": [1, 2, 4, 6, 8, 9, 14, 15, 16, 17, 25, 31], "section1": [1, 2, 4, 6, 8, 15, 17, 25, 31], "type": [1, 2, 3, 4, 6, 7, 8, 10, 12, 14, 15, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31], "solid": [1, 2, 4, 8, 14, 15, 25, 31, 34], "all": [1, 2, 3, 4, 6, 7, 8, 10, 11, 15, 17, 20, 22, 24, 25, 28, 31, 32], "fieldoutput": [1, 2, 4, 6, 8, 10, 15, 17, 25, 31], "creat": [1, 2, 3, 4, 6, 8, 9, 16, 17, 20, 25, 27, 31, 32], "pernod": [1, 2, 4, 6, 8, 15, 17, 25, 31], "elset": [1, 2, 4, 6, 8, 15, 17, 25, 31], "displac": [1, 2, 4, 6, 7, 8, 9, 15, 17, 31], "result": [1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 25, 26, 27, 29, 31, 34], "u": [1, 2, 4, 6, 7, 8, 15, 17, 24, 25, 29, 31], "perel": [1, 2, 4, 6, 8, 15, 17, 25], "strain": [1, 2, 4, 6, 8, 14, 15, 17, 25, 34], "quadraturepoint": [1, 2, 4, 6, 8, 15, 17, 25, 28], "8": [1, 2, 4, 6, 8, 14, 15, 17, 25, 31, 32, 34], "np": [1, 2, 4, 6, 7, 8, 14, 15, 25, 28], "mean": [1, 2, 3, 4, 6, 8, 14, 15, 17, 20, 25], "axi": [1, 2, 6, 8, 15, 17, 20, 25], "stress": [1, 2, 4, 6, 8, 9, 14, 15, 17], "output": [1, 2, 4, 8, 9, 10, 11, 15, 17, 24, 25, 30, 31], "ensight": [1, 2, 4, 6, 8, 9, 15, 25, 30, 31], "configur": [1, 2, 4, 6, 8, 13, 15, 17, 20, 25, 31], "overwrit": [1, 2, 4, 6, 8, 15, 17, 25, 31], "ye": [1, 2, 4, 6, 8, 15, 17, 25, 31], "rdmf": 1, "gaussian": 1, "varianc": 1, "03": 1, "lengthscal": 1, "4": [1, 2, 4, 6, 8, 14, 15, 31, 32, 34], "seed": 1, "exprf": 1, "co": 1, "sin": [1, 8, 25], "evaluateatcoordin": 1, "step": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 17, 24, 31], "maxinc": [1, 2, 4, 6, 8, 12, 15, 17, 25, 27, 31], "1e0": [1, 2, 4, 8, 15, 31], "mininc": [1, 2, 4, 6, 8, 12, 15, 17, 25, 27, 31], "maxnuminc": [1, 2, 4, 6, 8, 12, 15, 17, 25, 27, 31], "100": [1, 2, 4, 6, 8, 11, 15, 17, 25], "maxit": [1, 2, 4, 6, 8, 12, 13, 15, 17, 24, 25, 26, 27, 31], "25": [1, 2, 4, 6, 8, 15, 17, 25, 31], "steplength": [1, 2, 4, 6, 8, 12, 15, 17, 25, 27, 28, 31], "dirichlet": [1, 2, 4, 6, 8, 9, 10, 15, 17, 24, 31], "all12": 1, "nset": [1, 2, 4, 6, 8, 15, 17, 25, 31], "all3": 1, "3": [1, 2, 4, 7, 8, 11, 14, 15, 17, 25, 31, 32, 33, 34], "gstool": [1, 33], "librari": [1, 4, 12, 27, 31, 32, 33], "default": [1, 6, 7, 8, 12, 15, 17, 19, 25, 27, 31, 32, 33], "analyticalfieldsrandomscalar": 1, "vonmis": [1, 8, 14, 17, 25], "mat": [1, 8, 17, 25], "210000": [1, 4, 8, 17, 25], "550": [1, 8, 17, 25], "1000": [1, 2, 4, 6, 8, 17, 25, 31], "200": [1, 8, 17, 25], "1400": [1, 8, 17, 25], "6": [1, 2, 4, 15, 25, 32, 34], "30": [1, 8, 25], "50": [1, 2, 6, 8, 17, 25], "kappa": [1, 14, 17], "kappamean": 1, "monitor": [1, 2, 4, 6, 8, 9, 15, 25, 31], "01": [1, 25], "000001": [1, 6], "02": 1, "matern": 1, "setfield": [1, 9], "sf": 1, "x0u": [1, 8], "gen_left": [1, 2, 4, 8, 25, 31], "y0u": [1, 8], "gen_bottom": [1, 2, 4, 6, 8, 17, 25], "z0u": [1, 8], "gen_back": [1, 8], "1e": [1, 2, 4, 6, 8, 17, 25, 31], "y1u": [1, 8], "gen_top": [1, 2, 6, 8, 17, 25], "sf2": 1, "subclass": [1, 2, 4, 25], "from": [1, 2, 3, 4, 7, 8, 9, 14, 16, 24, 25, 32], "base": [1, 3, 4, 6, 9, 10, 14, 23, 24, 25, 26, 28, 32], "class": [1, 2, 3, 4, 6, 7, 11, 14, 16, 17, 20, 21, 23, 24, 25, 26, 28, 29], "analyticalfieldbas": 1, "data": [1, 3, 4, 7, 9, 13, 14, 20, 31], "sourc": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 32], "The": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 34], "paramet": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 16, 20, 21, 23, 24, 25, 26, 28], "str": [1, 2, 3, 4, 6, 7, 11, 14, 20, 23, 24, 25, 27], "list": [1, 2, 3, 4, 6, 7, 11, 12, 20, 23, 24, 25, 26, 27, 28], "input": [1, 2, 5, 9, 10, 12, 14, 18, 25], "file": [1, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 18, 20, 25, 28, 32, 33], "femodel": [1, 2, 6, 9, 24, 25, 26], "tree": [1, 2, 6, 8, 10, 16, 24, 25], "method": [1, 2, 3, 4, 6, 7, 8, 11, 14, 16, 20, 23, 24, 25, 26, 28, 30, 31, 34], "abstract": [1, 2, 4, 14], "evalu": [1, 4, 5, 6, 24, 34], "ndarrai": [1, 2, 3, 4, 6, 7, 14, 20, 21, 24, 25, 28], "return": [1, 2, 3, 4, 6, 7, 10, 14, 20, 23, 24, 26, 27, 28], "float": [1, 4, 12, 14, 16, 20, 24, 27, 28], "ar": [2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 17, 23, 25, 26, 27, 28, 30, 31, 32, 33], "defin": [2, 4, 6, 9, 10, 13, 14, 17, 25, 28, 32], "global": [2, 3, 17, 20, 24], "mai": [2, 4, 14, 21, 26, 28, 29, 34], "introduc": 2, "addit": [2, 4, 16, 20, 26, 33], "scalar": [2, 3, 16, 25, 29], "equat": [2, 3, 24], "system": [2, 3, 24, 28, 30, 31, 33], "syntax": [2, 9, 15, 17], "myrigigbodi": 2, "right": [2, 4, 8, 14, 24, 25, 31], "referencepoint": 2, "rbottom": 2, "field": [2, 3, 4, 8, 9, 10, 15, 16, 17, 19, 21, 24, 29, 31], "thi": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 32], "act": [2, 4, 24], "compon": [2, 4, 8, 14, 25, 31], "node": [2, 3, 4, 6, 9, 15, 16, 17, 21, 23, 24, 29, 31], "set": [2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 20, 22, 24, 31], "equalvaluelagrangianconstraint": 2, "planerectquad": [2, 4, 6, 9, 17, 25], "cps8r": [2, 8], "20": [2, 4, 6, 8, 14, 17, 25], "l": [2, 4, 6, 8, 17, 25, 32], "h": [2, 4, 6, 8, 17, 25], "myconstraint": 2, "30000": [2, 6, 8, 25], "15": [2, 4, 6, 8, 13, 15, 25], "thick": [2, 4, 6, 8, 12, 17, 22, 25, 27], "plane": [2, 4, 6, 9, 14, 17, 22, 25], "myjob": [2, 8, 25], "2d": [2, 4, 6, 9, 12, 14, 17, 25, 27, 28], "nist": [2, 4, 6, 8, 9, 13, 15, 17, 25, 31], "rf": [2, 4, 6, 8, 25], "p": [2, 4, 6, 7, 8, 15, 17, 24, 25, 32, 34], "themonitor": [2, 8], "sum": [2, 3, 6, 8, 15, 17, 25], "ensightexport": [2, 8, 25], "categori": [2, 4, 6, 8, 12, 17, 25, 27, 31], "nistsolv": [2, 4, 6, 8, 17, 25, 31], "extrapol": [2, 4, 6, 8, 17, 24, 25, 31], "bottom": [2, 6, 8, 17, 25], "load": [2, 4, 8, 9, 15, 24, 31], "gen_righttop": [2, 4], "numer": [2, 3, 28], "equalvaluepenaltyconstraint": 2, "1e8": 2, "slave": 2, "which": [2, 3, 4, 6, 7, 10, 11, 14, 20, 24, 25, 26, 28, 30, 31, 32], "i": [2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33], "refer": [2, 4, 14, 24, 32], "point": [2, 3, 4, 6, 9, 14, 25, 28, 31, 32], "master": 2, "linearizedrigidbodyconstraint": 2, "cps4": [2, 4, 6, 8, 17, 25], "le": [2, 25], "cps4job": [2, 4, 6, 8, 17, 25], "rb1": 2, "gen_right": [2, 25], "leftcorn": 2, "gen_leftbottom": [2, 6, 17], "rotrp": 2, "rotat": 2, "05": [2, 25], "movrp": 2, "00": [2, 25], "linearizedrigidbodyconstraint2d": 2, "rp": 2, "999999": 2, "150": [2, 25], "mymateri": [2, 4, 8, 15, 22], "fixedsupport": 2, "gen_lefttop": 2, "pinnedsupport": 2, "rotfixedsupport": 2, "movfixedsupport": 2, "movpinnedsupport": 2, "distributedload": [2, 9, 15, 24], "loadtop": 2, "surfac": [2, 4, 8, 9, 15, 16, 24], "pressur": [2, 15, 25], "magnitud": [2, 4, 15, 25], "t": [2, 3, 6, 8, 14, 15, 17, 20, 25], "linearizedrigidbodyconstraint3d": 2, "gen_topleftback": 2, "rigidbodyconstraintlargedeformations3d": 2, "includ": [2, 3, 4, 25, 32, 33], "mesh": [2, 9, 25], "stvenantkirchhoffisotrop": 2, "c3d8job": [2, 4, 8, 25, 31], "2e": 2, "left": [2, 4, 8, 14, 15, 25, 31], "141": 2, "cvector": 2, "project": [2, 14], "vector": [2, 3, 4, 6, 14, 24, 25, 28], "cmod": 2, "constrainednset": 2, "determin": [2, 9, 18], "loadnset": 2, "applic": [2, 14, 25], "loadvector": 2, "correct": [2, 14, 16, 24], "dimens": [2, 3, 7, 10, 16], "tensori": [2, 19], "length": [2, 3, 4, 8, 9, 26, 28, 31], "penaltystiff": 2, "stiff": [2, 4, 24], "formul": [2, 4, 14, 31], "offset": 2, "comput": [2, 4, 5, 6, 9, 14, 18, 24, 25, 26, 34], "normalizeload": 2, "normal": [2, 4, 6, 17, 31], "appli": [2, 6, 15, 17, 24, 34], "forc": [2, 4, 9, 17, 24, 32], "per": [2, 4, 9, 14, 24], "wrt": 2, "number": [2, 3, 4, 5, 8, 12, 14, 16, 17, 18, 21, 24, 26, 27, 28, 31], "irrespect": 2, "total": [2, 3, 11, 14, 24, 28], "penaltybasedindirectcontrol": 2, "cpe4": [2, 4, 25], "disp_top": 2, "dispmon": 2, "measurement_nod": 2, "pc1": 2, "modelupd": [2, 9], "updat": [2, 3, 4, 6, 9, 14, 26, 28], "activ": [2, 3, 7, 24, 25, 27, 32], "fals": [2, 6, 8, 10, 12, 17, 20, 27], "fix_bottom": 2, "true": [2, 3, 4, 6, 8, 9, 11, 12, 20, 24, 25, 27], "constraintbas": [2, 24], "If": [2, 3, 4, 6, 7, 14, 18, 19, 27, 32], "requir": [2, 4, 5, 24, 31, 32, 33], "demand": 2, "getnumberofadditionalneededscalarvari": 2, "assignadditionalscalarvari": 2, "call": [2, 24, 25, 28, 31], "begin": [2, 14], "an": [2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 17, 21, 23, 24, 25, 28, 30, 31, 32, 34], "analysi": [2, 6, 10], "expect": [2, 4], "layout": [2, 3, 4], "extern": [2, 4, 10, 24], "pext": [2, 4, 24], "form": [2, 4, 10, 14, 26], "dof": [2, 4, 9], "n": [2, 4, 8, 14, 17], "j": [2, 3, 34], "dict": [2, 3, 10, 14, 20, 24, 25, 26], "A": [2, 3, 4, 6, 9, 10, 14, 20, 21, 23, 24, 25, 28, 29, 34], "attribut": [2, 3, 4, 14, 28], "fieldsonnod": 2, "ndof": [2, 3, 4], "degre": [2, 3, 4, 16, 25, 31], "freedom": [2, 3, 4, 25, 31], "associ": [2, 3, 6, 7, 10, 12, 21, 27, 29], "applyconstraint": 2, "u_np": [2, 24], "du": [2, 4, 24], "v": [2, 3, 8, 14, 28], "timestep": [2, 24, 25, 28], "add": [2, 6, 7, 23, 32], "matrix": [2, 3, 4, 9, 14, 24], "current": [2, 3, 4, 6, 16, 23, 25, 26, 28, 29], "solut": [2, 4, 5, 6, 24, 25, 32], "increment": [2, 4, 5, 6, 9, 12, 14, 24, 25, 26, 27, 28], "sinc": [2, 23], "last": [2, 4, 6, 14, 24], "time": [2, 4, 5, 6, 9, 12, 14, 16, 24, 25, 26, 27, 31], "k": [2, 4, 14, 24, 34], "dt": [2, 4, 24], "scalarvari": [2, 3, 9, 16, 29], "assign": [2, 4, 12, 14, 27, 31], "need": [2, 4, 13, 14, 28], "int": [2, 3, 4, 6, 7, 11, 14, 16, 20, 21, 24, 26, 28], "dofmanag": [3, 9, 25], "import": [3, 8, 11, 23], "describ": [3, 4, 17], "spars": [3, 9, 13, 24], "nodefield": [3, 6, 9, 16, 29], "element": [3, 6, 8, 9, 10, 14, 17, 18, 22, 23, 24, 30, 31, 32], "constraint": [3, 9, 16, 23, 24, 25], "nodeset": [3, 7, 8, 9, 16, 17, 23, 25], "initializevijpattern": 3, "analyz": 3, "collect": [3, 5, 10, 26, 28], "inform": [3, 4, 6, 10, 11, 16, 24, 25, 26, 28], "about": [3, 25, 26], "necessari": [3, 32], "structur": [3, 8, 34], "handl": [3, 12, 27], "each": [3, 6, 8, 10, 24], "count": 3, "accumul": [3, 24], "abaqu": [3, 12, 15, 24, 27], "like": [3, 4, 12, 15, 27], "converg": [3, 24, 25, 26, 28], "suppli": 3, "framework": [3, 31], "dofvector": [3, 9, 24], "vijsystemmatric": 3, "should": [3, 4, 6, 7, 17, 19, 24, 28, 32], "repres": [3, 4, 7, 21], "nodecouplingent": 3, "basenodecouplingent": 3, "map": 3, "respect": [3, 10, 12, 23, 27, 32], "indic": [3, 6, 29], "bool": [3, 4, 6, 10, 11, 20, 24], "constructdofvector": 3, "construct": [3, 24], "size": [3, 4, 5, 12, 14, 24, 26, 27, 28, 31], "ha": [3, 4, 14, 21, 23, 26], "knowledg": 3, "locat": [3, 8, 25, 29], "entiti": [3, 4, 6, 21], "constructvijsystemmatrix": 3, "vij": [3, 24], "coo": [3, 9], "object": [3, 6, 23, 25, 26], "also": [3, 4, 6, 14, 15, 17, 20, 24, 31], "vijsystemmatrix": [3, 9, 24], "getnodeforindexindofvector": 3, "index": [3, 31], "find": [3, 9], "given": [3, 4, 7, 8, 14, 28], "equuat": 3, "attach": [3, 4], "writedofvectortonodefield": 3, "resultnam": [3, 6], "write": [3, 9, 11, 16, 28], "entir": 3, "get": [3, 4, 6, 7, 14, 20, 24, 28, 32], "entri": [3, 4, 6, 7, 27], "held": 3, "writenodefieldtodofvector": 3, "none": [3, 4, 6, 7, 11, 12, 20, 24, 27], "hold": [3, 4, 26, 29], "consid": [3, 4, 7, 34], "accumulatedconstraintndof": 3, "accumulatedelementndof": 3, "found": [3, 14, 31], "idcsofconstraintsindofvector": 3, "": [3, 4, 6, 14, 17, 31, 34], "idcsofelementsindofvector": 3, "idcsoffieldvariablesindofvector": 3, "nodal": [3, 6, 9, 24], "idcsoffieldsindofvector": 3, "idcsoffieldsonnodesetsindofvector": 3, "idcsofnodefieldsindofvector": 3, "complet": [3, 6], "its": [3, 14, 27], "idcsofscalarvariablesindofvector": 3, "indextohostobjectmap": 3, "revers": 3, "host": [3, 18], "fieldvvari": 3, "largestnumberofconstraintndof": 3, "largest": [3, 24], "largestnumberofelndof": 3, "entitiesindofvector": 3, "within": [3, 5, 25, 32], "oper": [3, 6], "allow": [3, 4, 7, 13, 14, 23, 24, 26, 28, 29], "non": [3, 14, 30], "contigouo": 3, "read": [3, 16, 28], "entitiesinvij": 3, "entitii": 3, "view": [3, 4, 7, 14], "transpos": 3, "arrai": [3, 4, 6, 12, 14, 27, 28], "memori": 3, "some": [3, 4, 30], "other": [3, 4, 7], "ctype": 3, "simplifi": 3, "interact": 3, "buffer": 3, "start": [3, 6, 12, 24, 25, 26, 27, 28], "devic": 3, "dtype": 3, "flag": [3, 4], "flat": 3, "d": [3, 4, 14], "iter": [3, 4, 5, 12, 13, 23, 24, 26, 27, 28, 30, 31], "over": [3, 24], "imag": 3, "imaginari": 3, "part": [3, 14, 28], "itemset": 3, "items": 3, "one": [3, 4, 12, 27, 28, 31], "byte": 3, "mt": 3, "nbyte": 3, "consum": [3, 31], "ndim": 3, "newbyteord": 3, "ptp": 3, "real": 3, "shape": [3, 4, 28], "tupl": [3, 10, 24], "stride": 3, "when": [3, 5, 24, 25], "travers": 3, "dot": 3, "to_devic": 3, "copi": [3, 7, 23, 28], "tripl": 3, "format": [3, 4, 9, 11, 13, 20, 24, 27, 30], "member": 3, "directli": [3, 4, 8, 15, 28, 29], "contigu": 3, "via": [3, 6, 11, 30, 33], "config": [4, 8, 14, 19, 22, 24], "elementlibrari": [4, 12, 27], "support": [4, 23, 25, 29, 31], "finit": [4, 9, 10, 18, 24, 30, 31, 32, 34], "futur": 4, "ad": [4, 14, 19, 28], "here": [4, 14, 19], "el_label": 4, "node1": 4, "node2": 4, "node3": 4, "node4": 4, "getelementclass": [4, 9], "request": [4, 6, 24, 28, 32], "string": [4, 8, 12, 14, 27], "identifi": 4, "ot": 4, "marmotel": 4, "marmotelementwrapp": 4, "serv": 4, "wrapper": 4, "For": [4, 10, 14, 15, 24, 26], "document": [4, 6, 32], "pleas": [4, 32], "elementtyp": 4, "elnumb": 4, "dofindicespermut": 4, "ensighttyp": 4, "hasmateri": 4, "nnode": 4, "nspatialdimens": 4, "nodecoordin": 4, "visualizationnod": 4, "acceptlastst": 4, "accept": [4, 16], "state": [4, 9, 14, 16, 26], "nonlinear": [4, 5, 9, 14, 26, 31, 34], "scheme": [4, 5, 24], "computebodyforc": [4, 24], "dtime": [4, 14], "residu": [4, 14, 19, 24, 26], "due": [4, 5, 34], "volum": 4, "computedistributedload": [4, 24], "loadtyp": 4, "faceid": [4, 12, 15, 25, 27], "computeyourself": 4, "ke": 4, "pe": 4, "getcoordinatesatcent": 4, "underli": [4, 18], "centroid": 4, "getcoordinatesatquadraturepoint": 4, "qp": 4, "getnumberofquadraturepoint": 4, "getresultarrai": 4, "getpersistentview": 4, "possibli": [4, 27], "persist": [4, 14, 28], "contini": [4, 14], "initializeel": 4, "let": [4, 25, 26], "itself": [4, 14, 23, 32], "resettolastvalidst": 4, "reset": 4, "valid": [4, 17, 32], "setinitialcondit": [4, 9], "statetyp": 4, "condit": [4, 9, 24], "setmateri": 4, "materialnam": 4, "materialproperti": [4, 14], "furthermor": [4, 6, 7, 29], "two": [4, 14, 29], "var": [4, 8, 14, 25], "actual": 4, "temporari": 4, "backup": 4, "setnod": 4, "underyl": 4, "setproperti": 4, "elementproperti": 4, "marmotmaterialwrappingel": 4, "materialtyp": 4, "marmotmateri": [4, 9], "cf": 4, "It": [4, 6, 10, 16, 21, 23, 26, 33], "singl": [4, 7, 15, 20], "quadratur": [4, 6, 28], "dummi": [4, 28], "interfac": [4, 8, 11, 24, 30], "specif": [4, 17, 20, 26, 32], "special": [4, 11, 31], "run": [4, 8, 10, 18, 25, 31, 32, 33], "simul": [4, 5, 6, 9, 16, 20, 24, 25, 28, 32], "investig": 4, "purpos": [4, 6, 7, 8, 26, 28], "marmotmaterialhypoelast": 4, "matric": [4, 28], "nodewis": 4, "fieldwis": 4, "permut": 4, "pattern": [4, 28], "aggreg": 4, "resembl": 4, "uniqu": [4, 14, 21, 23, 26, 29], "gold": [4, 9, 30], "notat": [4, 14], "coupl": [4, 31], "check": [4, 23, 24], "visual": [4, 15], "Not": 4, "onli": [4, 6, 7, 12, 13, 14, 17, 19, 25, 26, 27, 32], "rest": 4, "numpi": [4, 12, 14, 27, 28, 33], "he": 4, "first": [4, 11, 14, 15, 25, 28], "instanc": [4, 6, 12, 16, 20, 24, 26, 27, 28, 32], "perform": [4, 24, 25, 27, 28, 29, 30], "reason": [4, 29], "onc": [4, 14], "store": [4, 6, 7, 8, 29], "later": 4, "bar2": 4, "bar3": 4, "tria3": 4, "tria6": 4, "quad4": 4, "quad8": 4, "tetra4": 4, "tetra10": 4, "pyramid5": 4, "pyramid13": 4, "penta6": 4, "penta15": 4, "hexa8": [4, 31], "hexa20": 4, "nside": 4, "nface": 4, "redund": 4, "we": [4, 8, 15, 24, 29], "keep": 4, "sake": 4, "commonli": [4, 5], "same": [4, 14, 18, 27], "howev": [4, 18], "case": [4, 13, 14, 17, 28], "differ": [4, 7, 8, 14], "mix": 4, "qpmarmotmaterialhypoelast": 4, "our": [4, 15], "carri": [4, 6], "mateir": 4, "wrap": 4, "posit": [4, 8, 21, 29], "specifi": [4, 8, 20, 25], "mysingleelementjob": [4, 15], "characterist": 4, "prescribed_strain": 4, "symmetr": 4, "nodeforc": [4, 6, 8, 9, 10, 17, 24, 31], "prescribed_stress": 4, "savehistori": [4, 6, 17, 25], "dstress_dstrain": [4, 14], "reshap": 4, "array2str": 4, "formatt": 4, "float_kind": 4, "2f": 4, "definit": [4, 10, 16, 19, 20, 24, 25, 26], "One": [4, 26], "quadrilater": 4, "cpe8": 4, "cps8": 4, "hexahedron": [4, 31], "c3d20": [4, 8], "option": [4, 13, 14, 24, 26, 31], "r": [4, 14, 24, 34], "reduc": [4, 26, 28], "integr": [4, 14, 31], "end": [4, 6, 10, 12, 14, 20, 24, 27], "extend": [4, 14, 30, 34], "regular": [4, 34], "tl": 4, "lagrangian": [4, 29], "befor": [4, 6, 14, 24, 26, 28, 32], "approach": [4, 24, 34], "displacementel": [4, 31], "deriv": [4, 14], "intern": [4, 34], "integ": [4, 6, 12, 27], "label": [4, 6, 12, 17, 20, 21, 23, 27], "kind": [4, 6], "bodi": [4, 8, 9, 24], "face": 4, "k_": 4, "calcul": [4, 14], "central": [4, 6, 19], "nint": 4, "init": [4, 6, 14, 32], "readi": 4, "stai": 4, "becaus": 4, "exactli": 4, "thei": [4, 6, 17, 23, 25, 26, 31], "user": [4, 11, 14, 25, 28], "assum": [4, 14, 32, 34], "usag": [4, 14, 23], "cantileverbeam": [4, 31], "test4": 4, "cantilev": 4, "beam": 4, "steel": 4, "10000mm": 4, "100mm": 4, "b": [4, 14, 24, 32], "40mm": 4, "mm\u00b2": 4, "elast": [4, 31], "poisson": [4, 14, 31], "ratio": [4, 14, 20, 25, 28, 31], "40": [4, 8, 25], "make": [4, 18, 27, 28, 31, 32, 33], "choos": [4, 13, 24, 31], "height": [4, 8, 20], "300": 4, "direct": [4, 13, 30, 31], "10000": 4, "quad4np": 4, "elprovid": [4, 31], "open": [4, 25, 31], "paraview": [4, 15, 30, 31], "esexport": [4, 8, 25], "between": [4, 14, 28, 31], "max": [4, 25, 31], "fix": [4, 18, 31], "side": [4, 24, 31], "1000n": 4, "down": 4, "cloadtop": [4, 8, 25, 31], "test8": 4, "quad8np": 4, "test3d": [4, 31], "400": [4, 31], "500mm": [4, 31], "5mm": [4, 31], "500": [4, 31], "9": [4, 8, 14, 25, 31, 32, 33], "off": [4, 8, 31, 32], "012n": [4, 31], "back": [4, 8, 14, 28, 31], "gen_rightback": [4, 31], "012": [4, 31], "compat": [4, 31], "work": [4, 32], "cauchi": [4, 14], "sigma": [4, 14], "tangent": [4, 14], "frac": [4, 14], "varepsilon": 4, "where": [4, 12, 14, 27], "stand": 4, "tensor": [4, 14], "algorithm": [4, 14], "displacementtlel": 4, "hyperelast": 4, "second": [4, 14, 15, 25], "piola": 4, "kirchhoff": [4, 14], "mathbf": [4, 14], "green": [4, 14], "tau": [4, 14], "deform": [4, 14], "gradient": [4, 14, 34], "baseel": 4, "done": 4, "easili": 4, "util": [5, 6, 9, 20, 27, 34], "conditionalstop": [5, 9], "stop": [5, 9, 24], "sucessfulli": 5, "cutbackrequest": [5, 9], "messag": [5, 11], "cutbacks": 5, "residuel": 5, "fail": 5, "too": 5, "larg": [5, 28], "divergingsolut": [5, 9], "seem": 5, "diverg": [5, 24], "solv": [5, 14, 24, 26], "inputexecpt": [5, 9], "invalid": 5, "reachedmaxincr": [5, 9], "maximum": [5, 12, 18, 24, 27, 28], "increm": 5, "attain": 5, "reachedmaxiter": [5, 9], "reachedminincrements": [5, 9], "minimum": [5, 12, 27, 28], "stepfail": [5, 9], "thrown": 5, "wrongdomain": [5, 9], "doe": [5, 29, 31], "fit": 5, "keyword": [6, 8, 9, 10, 13, 14, 15, 17, 22], "outputmanag": [6, 9, 20, 23, 24, 26], "export": [6, 9, 20, 25, 32], "csv": [6, 30], "enabl": 6, "histori": [6, 17, 24], "automat": [6, 8, 14, 15, 18, 28], "append": [6, 27], "slice": [6, 28], "math": [6, 17], "save": [6, 17], "f_export": [6, 17], "final": [6, 10, 12, 20, 25, 27], "tabl": [6, 11], "modleon": 6, "13": [6, 14], "47": [6, 20], "55": 6, "74": 6, "85": [6, 25], "12": [6, 8, 14, 25, 33], "003": [6, 25], "displacement_top": [6, 17], "displacement_top_mean_1": 6, "rf_bottom": 6, "rf_bottom_sum_1": 6, "stress_top": 6, "alphap": [6, 25], "meshplot": [6, 9, 25], "figur": [6, 17, 20, 25], "axspec": [6, 17, 20, 25], "221": 6, "u2": 6, "222": 6, "s2": 6, "212": 6, "c": [6, 14, 25, 34], "red": 6, "dash": 6, "xydata": [6, 17, 25], "myensightexport": [6, 17], "mynodemonitor": 6, "plotalongpath": [6, 9], "mynodesetplott": [6, 17], "along": [6, 8, 9], "intermediatesaveinterv": [6, 17, 25], "linear": [6, 8, 9, 17, 18, 24, 25, 30, 31, 33], "top": [6, 8, 17, 25], "80": [6, 11, 25], "fieldoutputcontrol": [6, 9, 24, 25, 26], "journal": [6, 8, 9, 16, 20, 24, 25, 26, 28, 34], "manag": [6, 9, 10, 12, 16, 27], "initializejob": 6, "addexpressionfieldoutput": 6, "associatedset": 6, "theexpress": 6, "f_x": 6, "fexport_x": 6, "new": [6, 7, 8, 11, 14, 16, 19, 24, 25, 27, 28], "dure": [6, 10, 24, 25], "callabl": 6, "express": [6, 9, 12, 22, 25, 27], "function": [6, 10, 14, 17, 28], "addperelementfieldoutput": 6, "union": 6, "elementset": [6, 7, 9, 16, 17, 23], "provid": [6, 9, 11, 12, 15, 24, 27, 31, 33], "log": [6, 11, 20, 24, 25, 26, 28], "extract": 6, "addpernodefieldoutput": 6, "finalizeincr": 6, "finalizejob": 6, "finalizestep": 6, "initializestep": 6, "_fieldoutputbas": [6, 9], "latest": [6, 32], "getlastresult": 6, "matter": 6, "getresulthistori": 6, "throw": 6, "except": [6, 9], "gettimehistori": 6, "everyth": 6, "Will": 6, "prove": 6, "setresult": 6, "modifi": [6, 12, 24, 27], "origin": [6, 8], "possibl": [6, 11, 12, 14, 27, 28], "writelastresult": 6, "elementfieldoutput": [6, 9], "elementbas": 6, "updateresult": 6, "reaction": [6, 24, 25], "nodefieldoutput": [6, 9], "expressionfieldoutput": [6, 9], "orderedset": [6, 9, 23], "fieldnam": 7, "everi": [7, 17, 24], "multipl": [7, 8, 10, 14, 26, 28], "flux": [7, 24], "effort": 7, "convenci": 7, "fast": [7, 28], "individu": [7, 20, 24], "effici": [7, 9, 30, 31], "contiguo": 7, "manner": 7, "rather": [7, 29], "than": 7, "distribut": [7, 9, 24], "across": 7, "represent": [7, 25], "addentriesfromoth": 7, "fieldvalueentri": 7, "anoth": 7, "intersect": 7, "subset": 7, "sub": [7, 16], "copyentriesfromoth": 7, "createfieldvalueentri": 7, "empti": [7, 28, 32], "present": [7, 11, 25], "nodefieldsubset": 7, "parentnodefield": 7, "thegeneratortyp": 8, "mygeneratornam": 8, "defint": [8, 12, 25, 26, 27], "cuboid": 8, "geometri": 8, "hex": 8, "__": 8, "___x": 8, "front": 8, "_left": 8, "_right": 8, "_bottom": 8, "_top": 8, "_front": 8, "_back": 8, "_all": 8, "_centralfronttoback": 8, "_shearbandfronttoback": 8, "_shearbandcenterfronttoback": 8, "fly": 8, "c3d20r": 8, "meshdatatofil": [8, 9], "meshdata": 8, "filenam": [8, 12, 16, 17, 20, 27], "myexportedmesh": 8, "inc": [8, 17], "gen2": 8, "storein": [8, 25], "quad": 8, "_____": 8, "datalin": [8, 14], "pi": [8, 25], "1e4": 8, "nt": 8, "nc": 8, "lt": 8, "ro": 8, "phi": 8, "90": [8, 25], "exg": 8, "gen_inn": 8, "jou": 8, "cubitcmd": 8, "execut": [8, 25, 26], "joufil": 8, "path": [8, 32], "outfil": 8, "aprepro": 8, "comma": [8, 14, 27], "separ": [8, 27], "kei": [8, 12, 26, 27], "pair": [8, 12, 26, 27], "eltypeperblock": 8, "exist": [8, 20, 27], "runcubit": 8, "gui": 8, "debug": [8, 31], "silent": 8, "hide": 8, "cubitgen": 8, "mat1": [8, 14], "35000": 8, "mat2": 8, "3000": 8, "49": 8, "singular": 8, "exec": 8, "pathtoimag": 8, "smg": 8, "coreform_cubit": 8, "apreprovar": 8, "block1": 8, "block2": 8, "section2": 8, "set_def": 8, "5e": 8, "bot": 8, "n_bot": 8, "n_top": 8, "code": [8, 31], "pythoncodemodelgener": 8, "executeaftermanualgener": [8, 25], "center_horizont": 8, "ab": 8, "parseinputfil": [9, 27], "printkeyword": [9, 27], "printkeywordsrst": [9, 27], "inputfil": [9, 27, 31, 32], "driven": 9, "finiteelementsimul": [9, 10], "classic": 9, "getsolverbynam": [9, 24], "implicit": [9, 34], "static": 9, "nistparallelformarmotel": 9, "parallel": [9, 30, 31], "nistparclength": [9, 18, 25], "arc": 9, "stepbas": [9, 26], "adaptivestep": 9, "adp": 9, "transient": 9, "analyt": [9, 14], "scalarexpress": 9, "randomscalar": 9, "random": 9, "implement": [9, 24, 28, 30, 31, 32], "your": [9, 32], "own": 9, "equalvaluelagrangian": 9, "constrain": 9, "equal": 9, "equalvaluepenalti": 9, "linearizedrigidbodi": 9, "rigid": 9, "rigidbodi": 9, "geometr": 9, "exact": 9, "penaltyindirectcontrol": 9, "penalti": 9, "indirect": [9, 31], "control": [9, 10, 24, 31], "physic": [9, 25, 26], "marmot": [9, 12, 14, 15, 24, 27, 31, 33], "marmotsingleqpel": 9, "edelweiss": [9, 18, 27, 31], "box": 9, "rectangular": 9, "pipegen": 9, "pipe": 9, "cubit": 9, "findclosestnod": [9, 25], "closest": 9, "executepythoncod": 9, "script": 9, "quantiti": 9, "termin": [9, 11, 15, 24], "matplotlib": [9, 20, 30, 33], "fractureenergyintegr": 9, "fractur": 9, "energi": [9, 14], "plot": [9, 10, 12, 27], "becom": 9, "statusfil": 9, "statu": 9, "computetimemonitor": 9, "print": [9, 11, 15, 24, 27], "phenomena": 9, "plotter": [9, 17, 20], "immutableorderedset": [9, 23], "action": [9, 10, 12, 24, 26, 27], "bodyforc": [9, 24], "standard": [9, 12, 16, 17, 24, 26, 27], "bc": [9, 15, 24], "geostat": 9, "indirectcontrol": 9, "indirectcontractioncontrol": 9, "contract": 9, "ring": 9, "initializemateri": 9, "concentr": [9, 24], "prescrib": 9, "convers": 9, "csr": [9, 24], "gather": 9, "adapt": [9, 26], "fieldvari": [9, 29], "driver": 10, "inputfiledrivensimul": 10, "main": [10, 11, 32], "heart": 10, "consist": 10, "verbos": [10, 11], "suppressplot": 10, "core": 10, "assembl": [10, 24, 28], "Be": 10, "suppress": [10, 11], "batch": 10, "process": [10, 26], "capabl": 11, "troughout": 11, "outputfil": 11, "suppressfromlevel": 11, "consol": 11, "sort": 11, "level": 11, "certain": [11, 18, 29], "printprettyt": 11, "setfileoutput": 11, "errormessag": 11, "senderidentif": 11, "error": 11, "sender": 11, "printseperationlin": 11, "seper": 11, "printtabl": 11, "printheaderrow": 11, "pretti": 11, "nest": [11, 27], "mesag": 11, "row": [11, 24, 28], "setnewlinewidth": 11, "newwidth": 11, "leftcolumn": 11, "width": [11, 20], "column": 11, "setverbos": 11, "highest": 11, "squelch": 11, "prioriti": 11, "multilin": [12, 14, 27], "definiton": [12, 27], "defini": [12, 27], "jobnam": [12, 17, 25, 27], "defaultjob": [12, 27], "1d": [12, 27], "starttim": [12, 27], "statevar": [12, 27], "deprec": [12, 27], "ignor": [12, 25, 27], "written": [12, 17, 27], "xdata": [12, 27], "ydata": [12, 27], "pass": [12, 25, 27, 28], "criticalit": [12, 26, 27], "prevent": [12, 27, 28], "increas": [12, 27, 28], "correspond": [12, 14, 27], "stepact": [12, 24, 25, 26, 27], "period": [12, 27], "after": [13, 26], "linsolv": 13, "linsolverconfigfil": 13, "json": 13, "gmre": 13, "opt": 13, "superlu": [13, 18], "scipi": [13, 24, 28, 33], "linalg": 13, "spsolv": 13, "umfpack": [13, 18], "pardiso": [13, 18], "panuapardiso": 13, "klu": 13, "petsclu": 13, "mump": 13, "extra": [13, 14], "precondopt": 13, "presmooth": 13, "block_gauss_seidel": 13, "postsmooth": 13, "linsolveopt": 13, "restart": [13, 16, 28, 32], "1500": 13, "materiallibrari": 14, "argument": 14, "referenc": 14, "seen": 14, "neohookewaplast": 14, "edelweissmateri": 14, "91304": 14, "34783": 14, "100000": [14, 25], "260": 14, "70": 14, "320": 14, "hyperplasticadvanc": 14, "psi_e": 14, "mu": 14, "fy0": 14, "hlin": 14, "dfy": 14, "delta": [14, 25], "neohookewa": 14, "neohookewb": 14, "neohookewc": 14, "hyperelasticadvanc": 14, "densiti": 14, "hyperelasticadvancedi2extend": 14, "i2": 14, "j2": 14, "neohookewbplast": 14, "neohookewcplast": 14, "relat": 14, "well": [14, 18], "young": 14, "modulu": 14, "law": 14, "voigt": 14, "bmatrix": 14, "sigma_": 14, "11": [14, 32], "33": 14, "23": 14, "text": 14, "symm": 14, "varepsilon_": 14, "gamma_": 14, "third": 14, "linearelasticmateri": 14, "assigncurrentstatevar": 14, "currentstatevar": 14, "computeplanestress": 14, "dstrain": 14, "dstress": 14, "computestress": 14, "computestress2d": 14, "computeuniaxialstress": 14, "uniaxi": 14, "elasticitymatrix": 14, "elasticitymatrix2d": 14, "elasticitymatrixplanestress": 14, "getnumberofrequiredstatevar": 14, "getresult": 14, "until": [14, 24, 31], "reach": 14, "f_": 14, "yield": 14, "h_": 14, "lin": 14, "harden": 14, "f_y": 14, "expon": 14, "sqrt": 14, "deviator": 14, "With": 14, "newton": [14, 24], "afterward": 14, "full": [14, 17], "trial": 14, "2g": 14, "vonmisesmateri": 14, "These": 14, "shear": 14, "bulk": 14, "i_1": 14, "trace": 14, "det": 14, "invari": 14, "ff": 14, "partial": [14, 34], "_": 14, "ijkl": 14, "2b_": 14, "ij": 14, "kl": 14, "b_": 14, "delta_": 14, "w_a": 14, "ln": 14, "2j": 14, "lk": 14, "neohook": 14, "neohookepencegouformulationa": 14, "neohookeanwamateri": 14, "computekirchhoff": 14, "dstress_ddeformationgradi": 14, "deformationgradi": 14, "computeplanekirchhoff": 14, "computeuniaxialkirchhoff": 14, "w_b": 14, "3j": 14, "neohookepencegouformulationb": 14, "neohookeanwbmateri": 14, "w_c": 14, "neohookepencegouformulationc": 14, "neohookeanwcmateri": 14, "quotat": 14, "mark": 14, "achiev": [14, 26], "must": [14, 25, 32], "th": 14, "num": 14, "dual": 14, "packag": [14, 32, 33], "differenti": 14, "instal": [14, 33], "pip": [14, 32], "num_dual": 14, "compar": 14, "hyperelasticadvancedmateri": 14, "i_2": 14, "autograd": 14, "depend": [14, 18, 24, 25, 32], "how": 14, "complic": 14, "hyperelasticadvancedi2extendedmateri": 14, "setenergyfunct": 14, "materialenergi": 14, "custom": [14, 17, 23, 32], "hencki": 14, "onto": 14, "them": [14, 24, 29, 32], "three": 14, "bar": 14, "dev": 14, "old": [14, 24], "give": 14, "chapter": 14, "14": 14, "neohookeplast": 14, "neohookepencegouformulationaplast": 14, "neohookeanwaplasticmateri": 14, "neohookepencegouformulationbplast": 14, "neohookeanwbplasticmateri": 14, "neohookepencegouformulationcplast": 14, "neohookeanwcplasticmateri": 14, "still": 14, "being": 14, "hypoelast": 14, "basehypoelasticmateri": 14, "basehyperelasticmateri": 14, "kun": 14, "On": 14, "compress": [14, 24, 28], "version": [14, 24, 32, 33], "incompress": 14, "mathemat": 14, "mechan": [14, 34], "157": 14, "182": 14, "2015": 14, "ea": 14, "de": 14, "souza": 14, "neto": 14, "peri\u0107": 14, "drj": 14, "owen": 14, "theori": 14, "john": 14, "wilei": 14, "son": 14, "ltd": 14, "engin": 14, "swansea": 14, "bai": 14, "campu": 14, "fabian": 14, "wai": [14, 15], "sa1": 14, "8en": 14, "2008": 14, "abqmodelconstructor": 15, "emploi": [15, 18, 27, 28, 31], "linearelasticisotrop": 15, "7": [15, 32], "hex8": 15, "bottomleft": 15, "bottomback": 15, "theonlyel": 15, "could": 15, "surfaceright": 15, "dload": [15, 25], "interest": 15, "rf_left": 15, "myensightoutput": 15, "etc": 15, "mymonitor": 15, "take": [16, 20], "care": 16, "freedem": 16, "advancetotim": 16, "prepareyourself": 16, "prepar": 16, "bundl": 16, "readrestart": [16, 28], "restartfil": [16, 28], "writerestart": [16, 28], "additionalparamet": 16, "domains": 16, "variuou": 17, "force_bottom": 17, "reactionforc": 17, "mynodesetmonitor": [17, 25], "ualongtopsurfac": 17, "nstage": 17, "mindtforoutput": [17, 25], "author": 17, "divid": 17, "triangul": 17, "triangl": 17, "out": 17, "rectangl": 17, "ax": [17, 20], "grid": [17, 20], "accord": [17, 20], "111": [17, 20, 25], "meshonli": 17, "forcefieldoutput": 17, "displacementfieldoutput": 17, "fracturearea": 17, "area": 17, "matlab": 17, "peak": 17, "sta": 17, "_mesh": 17, "openmp": [18, 33], "select": 18, "thread": 18, "architectur": 18, "recommend": [18, 33], "enforc": [18, 32], "omp_num_thread": 18, "xx": 18, "py": [18, 27, 31, 32], "ensur": 18, "both": 18, "intel": [18, 33], "mkl": [18, 33], "known": 19, "avail": [19, 26, 27, 33], "toler": 19, "happen": 19, "plotconfigur": 20, "exportjob": 20, "unifi": [20, 34], "configureplott": 20, "exportfigur": 20, "figureid": 20, "469": 20, "scale": [20, 25, 28], "heightratio": 20, "png": 20, "pt": 20, "golden": 20, "getax": 20, "doesn": 20, "yet": [20, 30], "getfig": 20, "plotxydata": 20, "plotopt": 20, "curv": 20, "matpotlib": 20, "show": 20, "xlimit": 20, "limit": 20, "ylimit": 20, "xlabel": 20, "ylabel": 20, "flipx": 20, "flip": 20, "flipi": 20, "aspect": 20, "switch": 20, "addition": 20, "ident": 21, "basic": [21, 23, 29], "arbitrari": 21, "combin": 22, "term": 22, "mysect": 22, "item_": 23, "immut": 23, "item": 23, "fromkei": 23, "checkobjecttyp": 23, "obj": 23, "forceit": 23, "even": 23, "extractnodeset": 23, "tune": 24, "mysolv": 24, "nonlinearimplicitstat": 24, "nonlinearimplicitstaticparallelmk2": 24, "nonlinearimplicitstaticparallel": 24, "nonlinearimplicitstaticparallelarclength": 24, "jobinfo": [24, 25, 26], "kwarg": [24, 26], "finddirichletindic": 24, "applydirichlet": 24, "solvestep": 24, "equatuon": 24, "stepactionbas": [24, 25], "boundari": [24, 25], "applydirichletk": 24, "http": [24, 32], "stackoverflux": 24, "com": [24, 32], "question": 24, "12129948": 24, "zero": 24, "applystepactionsatincrementstart": 24, "applystepactionsatstepend": 24, "finish": [24, 25], "applystepactionsatstepstart": 24, "appliet": 24, "assembleconstraint": 24, "loop": 24, "assembleload": 24, "hand": 24, "volumetr": 24, "augment": 24, "assemblestiffnesscsr": 24, "csr_matrix": [24, 28], "checkconverg": 24, "ddu": 24, "iterationcount": 24, "residualhistori": 24, "similar": [24, 27], "decid": 24, "whether": 24, "continu": 24, "previou": [24, 28], "wise": 24, "checkdivergingsolut": 24, "incrementresidualhistori": 24, "maxgrowingit": 24, "growth": [24, 26], "computeel": 24, "evalut": 24, "computespatialaveragedflux": 24, "averag": 24, "usual": [24, 31, 32, 33], "dictioari": 24, "conta": 24, "extrapolatelastincr": 24, "prevtimestep": 24, "lastincrements": 24, "linearsolv": 24, "spare": 24, "printresidualoutliernod": 24, "residualoutli": 24, "have": [24, 26, 27], "outlier": 24, "solveincr": 24, "u_n": [24, 25], "raphson": 24, "un": 24, "grow": 24, "public": 24, "stepnumb": 24, "outputmanagerbas": 24, "stiffn": 24, "sy": 24, "cython": [24, 30, 32, 33], "speed": 24, "un1": 24, "propos": 24, "jir\u00e1sek": 24, "ba\u017eant": 24, "2001": 24, "replac": 24, "newtonraphson": 24, "henc": 24, "subsequ": [24, 25, 26], "commun": 24, "parent": 24, "tell": [24, 27], "dlambda": 24, "account": 24, "activestepact": 24, "righttop": 25, "dload1": 25, "dload2": 25, "forcevector": 25, "amplitud": 25, "progress": 25, "interv": 25, "bodyforce3d": 25, "forcex": 25, "forcei": 25, "forcez": 25, "bforc": 25, "traction": 25, "loadel": 25, "95": 25, "surfaceload": 25, "cpe4job": 25, "p1": 25, "sig_x": 25, "sig_i": 25, "sig_z": 25, "h1": 25, "p2": 25, "s11": 25, "s22": 25, "s33": 25, "h2": 25, "xlater": 25, "zlater": 25, "disptop": 25, "rfbottom": 25, "geo": 25, "dltop": 25, "dof1": 25, "dof2": 25, "distanc": 25, "crack": 25, "indirectdisplacementcontrol": 25, "nistparclen": 25, "gc3d8": 25, "gcdp": 25, "concret": [25, 34], "fcy": 25, "fcu": 25, "fbu": 25, "ftu": 25, "df": 25, "ah": 25, "35": 25, "bh": 25, "ch": 25, "dh": 25, "As": 25, "softmod": 25, "m": [25, 34], "omegamax": 25, "derivativemethod": 25, "dtthresholdelasticstiff": 25, "closestn1": 25, "idc1": 25, "closestn2": 25, "60": 25, "idc2": 25, "omegaini": 25, "alphadweak": 25, "uniform": 25, "startinc": 25, "nistarclength": 25, "arclengthcontrol": 25, "stopcondit": 25, "i1pmax": 25, "cvector1": 25, "cvector2": 25, "leftx": 25, "lefti": 25, "leftz": 25, "nonlocal_damag": 25, "nonloc": 25, "damag": [25, 34], "omega": 25, "alphad": 25, "i1p": 25, "alphadmax": 25, "gen_centerslicex": 25, "u1": 25, "rf1": 25, "contractionnset": 25, "exportcvector": 25, "themselv": 25, "const": 25, "initalizi": 25, "abas": 25, "overrid": 25, "fieldput": 25, "applyatincrementstart": 25, "applyatstepend": 25, "successfulli": 25, "applyatstepstart": 25, "updatestepact": 25, "more": [26, 31], "consecut": 26, "distinct": 26, "runtim": 26, "inherit": 26, "startim": 26, "discardandchangeincr": [26, 28], "gettimestep": 26, "preventincrementincreas": [26, 28], "critic": [26, 28, 30], "next": [26, 28], "cutbackfactor": 26, "factor": [26, 28], "durcat": 26, "maxgrowit": 26, "discard": 26, "maxincrements": 26, "maxim": 26, "fraction": 26, "maxnumberincr": [26, 28], "minincrements": 26, "minim": 26, "startincrements": 26, "inputfilepars": 27, "human": 27, "readabl": 27, "supplement": 27, "indent": 27, "blank": 27, "effect": 27, "option1": 27, "option2": 27, "another_valu": 27, "comment": 27, "again": 27, "another_keyword": 27, "fe": 27, "currentkeyword": 27, "existingfiledict": 27, "pars": 27, "content": 27, "caseinsensitivedict": 27, "nond": 27, "languag": 27, "rst": 27, "conform": 27, "veri": [28, 31], "handi": 28, "fundament": 28, "csrgener": 28, "cdef": 28, "offer": 28, "without": 28, "reanalyz": 28, "contrast": 28, "conveni": 28, "systemmatrix": 28, "updatecsr": 28, "elementresultcollector": 28, "perman": 28, "pointer": 28, "resultvector": 28, "getcurrentresult": 28, "assembli": 28, "caller": 28, "respons": 28, "desir": 28, "resultst": 28, "timestepp": 28, "adaptivetimestepp": 28, "currenttim": 28, "startincr": 28, "maxincr": 28, "minincr": 28, "increasefactor": 28, "good": 28, "scalefactor": 28, "chang": 28, "generatetimestep": 28, "bad": 28, "reducenextincr": 28, "latter": 29, "multipli": 29, "ti": 29, "placehold": 29, "presenc": 29, "adress": 29, "hash": 29, "unlik": 29, "ani": 29, "cumul": 29, "aim": [30, 31], "easi": [30, 31], "understand": [30, 34], "routin": 30, "modular": 30, "power": 30, "light": 31, "weight": 31, "platform": 31, "independ": 31, "By": [31, 32], "constitut": [31, 32], "learn": 31, "environ": [31, 32], "tool": 31, "problem": 31, "flexibl": 31, "techniqu": 31, "often": 31, "difficult": 31, "matur": 31, "mpi": 31, "up": 31, "medium": 31, "want": 31, "compet": 31, "moos": 31, "less": 31, "suitabl": 31, "meet": 31, "product": 31, "hpc": 31, "simpli": [31, 32], "folder": [31, 32], "search": 31, "page": 31, "eigen": [32, 33], "potenti": 32, "fastor": 32, "you": 32, "setup": 32, "alreadi": 32, "minor": 32, "modif": 32, "compil": [32, 33], "prior": 32, "To": 32, "cd": 32, "your_input_fil": 32, "run_tests_edelweissf": 32, "recreat": 32, "know": 32, "what": 32, "do": 32, "altern": 32, "inplac": 32, "build_ext": 32, "recompil": 32, "directori": 32, "quickli": 32, "linux": [32, 33], "anaconda": [32, 33], "curl": 32, "o": 32, "github": 32, "conda": [32, 33], "forg": 32, "miniforg": 32, "releas": 32, "download": 32, "miniforge3": 32, "aarch64": 32, "sh": 32, "bash": 32, "mamba": 32, "ewroot": 32, "pwd": 32, "mambaforge3": 32, "bin": 32, "exit": 32, "shell": 32, "git": 32, "clone": 32, "txt": 32, "branch": 32, "gitlab": 32, "libeigen": 32, "mkdir": 32, "cmake": [32, 33], "dbuild_test": 32, "dinclude_install_dir": 32, "conda_prefix": 32, "dcmake_install_prefix": 32, "autodiff": 32, "v1": 32, "dautodiff_build_test": 32, "dautodiff_build_python": 32, "dautodiff_build_exampl": 32, "dautodiff_build_doc": 32, "romer": 32, "recurs": 32, "materialmodelingtoolbox": 32, "sphinx": [32, 33], "doc": 32, "html": 32, "recent": 33, "Then": 33, "docutil": 33, "16": 33, "numpydoc": 33, "petsc4pi": 33, "pyamg": 33, "pymump": 33, "pytest": 33, "pyvista": 33, "prettyt": 33, "suitespars": 33, "sphinx_rtd_them": 33, "sympi": 33, "vtk": 33, "free": 33, "binari": 33, "header": 33, "so": 33, "standalaon": 33, "algebra": 33, "were": 34, "fulli": 34, "obtain": 34, "abrari": 34, "vajari": 34, "arunachala": 34, "linder": 34, "better": 34, "borehol": 34, "breakout": 34, "enhanc": 34, "micropolar": 34, "continuum": 34, "geotechn": 34, "105064": 34, "oct": 34, "2022": 34, "doi": 34, "1016": 34, "compgeo": 34, "regueiro": 34, "quasi": 34, "brittl": 34, "failur": 34, "cohes": 34, "friction": 34, "vol": 34, "254": 34, "255": 34, "111841": 34, "nov": 34, "ijsolstr": 34, "hofstett": 34, "plastic": 34, "creep": 34, "243": 34, "111541": 34, "rock": 34, "scienc": 34, "1004": 34, "2018": 34, "3390": 34, "app8061004": 34, "gamnitz": 34, "239": 34, "106332": 34, "2020": 34, "compstruc": 34, "pamm": 34, "18": 34, "e201800054": 34, "1002": 34, "201800054": 34}, "objects": {"edelweissfe.analyticalfields.base": [[1, 0, 0, "-", "analyticalfieldbase"]], "edelweissfe.analyticalfields.base.analyticalfieldbase": [[1, 1, 1, "", "AnalyticalField"]], "edelweissfe.analyticalfields.base.analyticalfieldbase.AnalyticalField": [[1, 2, 1, "", "evaluateAtCoordinates"]], "edelweissfe.analyticalfields": [[1, 0, 0, "-", "randomscalar"], [1, 0, 0, "-", "scalarexpression"]], "edelweissfe.config": [[1, 0, 0, "-", "analyticalfields"], [2, 0, 0, "-", "constraints"], [4, 0, 0, "-", "elementlibrary"], [8, 0, 0, "-", "generators"], [17, 0, 0, "-", "outputmanagers"], [19, 0, 0, "-", "phenomena"], [22, 0, 0, "-", "sections"], [24, 0, 0, "-", "solvers"], [25, 0, 0, "-", "stepactions"]], "edelweissfe.config.elementlibrary": [[4, 3, 1, "", "getElementClass"]], "edelweissfe.config.solvers": [[24, 3, 1, "", "getSolverByName"]], "edelweissfe.constraints.base": [[2, 0, 0, "-", "constraintbase"]], "edelweissfe.constraints.base.constraintbase": [[2, 1, 1, "", "ConstraintBase"]], "edelweissfe.constraints.base.constraintbase.ConstraintBase": [[2, 2, 1, "", "applyConstraint"], [2, 2, 1, "", "assignAdditionalScalarVariables"], [2, 4, 1, "", "fieldsOnNodes"], [2, 2, 1, "", "getNumberOfAdditionalNeededScalarVariables"], [2, 4, 1, "", "nDof"], [2, 4, 1, "", "nodes"]], "edelweissfe.constraints": [[2, 0, 0, "-", "equalvaluelagrangian"], [2, 0, 0, "-", "equalvaluepenalty"], [2, 0, 0, "-", "linearizedrigidbody"], [2, 0, 0, "-", "penaltyindirectcontrol"], [2, 0, 0, "-", "rigidbody"]], "edelweissfe.drivers": [[10, 0, 0, "-", "inputfiledrivensimulation"]], "edelweissfe.drivers.inputfiledrivensimulation": [[10, 3, 1, "", "finiteElementSimulation"]], "edelweissfe.elements.base": [[4, 0, 0, "-", "baseelement"]], "edelweissfe.elements.base.baseelement": [[4, 1, 1, "", "BaseElement"]], "edelweissfe.elements.base.baseelement.BaseElement": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 4, 1, "", "elNumber"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 4, 1, "", "hasMaterial"], [4, 2, 1, "", "initializeElement"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"]], "edelweissfe.elements.displacementelement.element": [[4, 1, 1, "", "DisplacementElement"]], "edelweissfe.elements.displacementelement.element.DisplacementElement": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 4, 1, "", "dofIndicesPermutation"], [4, 4, 1, "", "elNumber"], [4, 4, 1, "", "ensightType"], [4, 4, 1, "", "fields"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 4, 1, "", "hasMaterial"], [4, 2, 1, "", "initializeElement"], [4, 4, 1, "", "nDof"], [4, 4, 1, "", "nNodes"], [4, 4, 1, "", "nodes"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"], [4, 5, 1, "", "thickness"], [4, 4, 1, "", "visualizationNodes"]], "edelweissfe.elements.displacementtlelement.element": [[4, 1, 1, "", "DisplacementTLElement"]], "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 4, 1, "", "dofIndicesPermutation"], [4, 4, 1, "", "elNumber"], [4, 4, 1, "", "ensightType"], [4, 4, 1, "", "fields"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 4, 1, "", "hasMaterial"], [4, 2, 1, "", "initializeElement"], [4, 4, 1, "", "nDof"], [4, 4, 1, "", "nNodes"], [4, 4, 1, "", "nodes"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"], [4, 5, 1, "", "thickness"], [4, 4, 1, "", "visualizationNodes"]], "edelweissfe.elements.marmotelement.element": [[4, 1, 1, "", "MarmotElementWrapper"]], "edelweissfe.elements.marmotelement.element.MarmotElementWrapper": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 2, 1, "", "initializeElement"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"]], "edelweissfe.elements.marmotsingleqpelement.element": [[4, 1, 1, "", "MarmotMaterialWrappingElement"]], "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 4, 1, "", "dofIndicesPermutation"], [4, 4, 1, "", "elNumber"], [4, 4, 1, "", "ensightType"], [4, 4, 1, "", "fields"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 4, 1, "", "hasMaterial"], [4, 2, 1, "", "initializeElement"], [4, 4, 1, "", "nDof"], [4, 4, 1, "", "nNodes"], [4, 4, 1, "", "nodes"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"], [4, 4, 1, "", "visualizationNodes"]], "edelweissfe.fields": [[7, 0, 0, "-", "nodefield"]], "edelweissfe.fields.nodefield": [[7, 1, 1, "", "NodeField"], [7, 1, 1, "", "NodeFieldSubset"]], "edelweissfe.fields.nodefield.NodeField": [[7, 2, 1, "", "addEntriesFromOther"], [7, 2, 1, "", "copyEntriesFromOther"], [7, 2, 1, "", "createFieldValueEntry"], [7, 2, 1, "", "subset"]], "edelweissfe.fields.nodefield.NodeFieldSubset": [[7, 2, 1, "", "createFieldValueEntry"], [7, 2, 1, "", "subset"]], "edelweissfe.generators": [[15, 0, 0, "-", "abqmodelconstructor"], [8, 0, 0, "-", "boxgen"], [8, 0, 0, "-", "cubit"], [8, 0, 0, "-", "executepythoncode"], [8, 0, 0, "-", "findclosestnode"], [8, 0, 0, "-", "planerectquad"]], "edelweissfe.journal": [[11, 0, 0, "-", "journal"]], "edelweissfe.journal.journal": [[11, 1, 1, "", "Journal"]], "edelweissfe.journal.journal.Journal": [[11, 2, 1, "", "errorMessage"], [11, 2, 1, "", "message"], [11, 2, 1, "", "printSeperationLine"], [11, 2, 1, "", "printTable"], [11, 2, 1, "", "setNewLineWidth"], [11, 2, 1, "", "setVerbose"], [11, 2, 1, "", "squelch"]], "edelweissfe.materials.base.basehyperelasticmaterial": [[14, 1, 1, "", "BaseHyperElasticMaterial"]], "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.base.basehypoelasticmaterial": [[14, 1, 1, "", "BaseHypoElasticMaterial"]], "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computePlaneStress"], [14, 2, 1, "", "computeStress"], [14, 2, 1, "", "computeUniaxialStress"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended": [[14, 1, 1, "", "HyperelasticAdvancedI2ExtendedMaterial"]], "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"], [14, 2, 1, "", "setEnergyFunction"]], "edelweissfe.materials.linearelastic.linearelastic": [[14, 1, 1, "", "LinearElasticMaterial"]], "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computePlaneStress"], [14, 2, 1, "", "computeStress"], [14, 2, 1, "", "computeStress2D"], [14, 2, 1, "", "computeUniaxialStress"], [14, 2, 1, "", "elasticityMatrix"], [14, 2, 1, "", "elasticityMatrix2D"], [14, 2, 1, "", "elasticityMatrixPlaneStress"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"]], "edelweissfe.materials.neohooke.neohookepencegouformulationa": [[14, 1, 1, "", "NeoHookeanWaMaterial"]], "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.neohooke.neohookepencegouformulationb": [[14, 1, 1, "", "NeoHookeanWbMaterial"]], "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.neohooke.neohookepencegouformulationc": [[14, 1, 1, "", "NeoHookeanWcMaterial"]], "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic": [[14, 1, 1, "", "NeoHookeanWaPlasticMaterial"]], "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic": [[14, 1, 1, "", "NeoHookeanWbPlasticMaterial"]], "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic": [[14, 1, 1, "", "NeoHookeanWcPlasticMaterial"]], "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computeKirchhoff"], [14, 2, 1, "", "computePlaneKirchhoff"], [14, 2, 1, "", "computeUniaxialKirchhoff"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"], [14, 4, 1, "", "materialProperties"]], "edelweissfe.materials.vonmises.vonmises": [[14, 1, 1, "", "VonMisesMaterial"]], "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial": [[14, 2, 1, "", "assignCurrentStateVars"], [14, 2, 1, "", "computePlaneStress"], [14, 2, 1, "", "computeStress"], [14, 2, 1, "", "computeUniaxialStress"], [14, 2, 1, "", "elasticityMatrix"], [14, 2, 1, "", "getNumberOfRequiredStateVars"], [14, 2, 1, "", "getResult"]], "edelweissfe.models": [[16, 0, 0, "-", "femodel"]], "edelweissfe.models.femodel": [[16, 1, 1, "", "FEModel"]], "edelweissfe.models.femodel.FEModel": [[16, 5, 1, "", "additionalParameters"], [16, 2, 1, "", "advanceToTime"], [16, 5, 1, "", "analyticalFields"], [16, 5, 1, "", "constraints"], [16, 5, 1, "", "domainSize"], [16, 5, 1, "", "elementSets"], [16, 5, 1, "", "elements"], [16, 5, 1, "", "materials"], [16, 5, 1, "", "nodeFields"], [16, 5, 1, "", "nodeSets"], [16, 5, 1, "", "nodes"], [16, 2, 1, "", "prepareYourself"], [16, 2, 1, "", "readRestart"], [16, 5, 1, "", "scalarVariables"], [16, 5, 1, "", "sections"], [16, 5, 1, "", "surfaces"], [16, 5, 1, "", "time"], [16, 2, 1, "", "writeRestart"]], "edelweissfe.numerics.csrgenerator": [[28, 1, 1, "", "CSRGenerator"]], "edelweissfe.numerics.csrgenerator.CSRGenerator": [[28, 2, 1, "", "updateCSR"]], "edelweissfe.numerics": [[3, 0, 0, "-", "dofmanager"]], "edelweissfe.numerics.dofmanager": [[3, 1, 1, "", "DofManager"], [3, 1, 1, "", "DofVector"], [3, 1, 1, "", "VIJSystemMatrix"]], "edelweissfe.numerics.dofmanager.DofManager": [[3, 5, 1, "", "accumulatedConstraintNDof"], [3, 5, 1, "", "accumulatedElementNDof"], [3, 2, 1, "", "constructDofVector"], [3, 2, 1, "", "constructVIJSystemMatrix"], [3, 5, 1, "", "fields"], [3, 2, 1, "", "getNodeForIndexInDofVector"], [3, 5, 1, "", "idcsOfConstraintsInDofVector"], [3, 5, 1, "", "idcsOfElementsInDofVector"], [3, 5, 1, "", "idcsOfFieldVariablesInDofVector"], [3, 5, 1, "", "idcsOfFieldsInDofVector"], [3, 5, 1, "", "idcsOfFieldsOnNodeSetsInDofVector"], [3, 5, 1, "", "idcsOfNodeFieldsInDofVector"], [3, 5, 1, "", "idcsOfScalarVariablesInDofVector"], [3, 5, 1, "", "indexToHostObjectMapping"], [3, 5, 1, "", "largestNumberOfConstraintNDof"], [3, 5, 1, "", "largestNumberOfElNDof"], [3, 5, 1, "", "nDof"], [3, 2, 1, "", "writeDofVectorToNodeField"], [3, 2, 1, "", "writeNodeFieldToDofVector"]], "edelweissfe.numerics.dofmanager.DofVector": [[3, 2, 1, "", "copy"]], "edelweissfe.outputmanagers": [[17, 0, 0, "-", "computetimemonitor"], [17, 0, 0, "-", "conditionalstop"], [17, 0, 0, "-", "ensight"], [17, 0, 0, "-", "fractureenergyintegrator"], [17, 0, 0, "-", "meshdatatofile"], [17, 0, 0, "-", "meshplot"], [17, 0, 0, "-", "monitor"], [17, 0, 0, "-", "plotalongpath"], [17, 0, 0, "-", "statusfile"]], "edelweissfe.points": [[21, 0, 0, "-", "node"]], "edelweissfe.points.node": [[21, 1, 1, "", "Node"]], "edelweissfe.sets": [[23, 0, 0, "-", "elementset"], [23, 0, 0, "-", "nodeset"], [23, 0, 0, "-", "orderedset"]], "edelweissfe.sets.elementset": [[23, 1, 1, "", "ElementSet"]], "edelweissfe.sets.nodeset": [[23, 1, 1, "", "NodeSet"]], "edelweissfe.sets.orderedset": [[23, 1, 1, "", "ImmutableOrderedSet"], [23, 1, 1, "", "OrderedSet"]], "edelweissfe.sets.orderedset.ImmutableOrderedSet": [[23, 2, 1, "", "add"]], "edelweissfe.sets.orderedset.OrderedSet": [[23, 2, 1, "", "add"], [23, 2, 1, "", "checkObjectType"], [23, 2, 1, "", "forceIter"]], "edelweissfe.solvers": [[24, 0, 0, "-", "nonlinearimplicitstatic"], [24, 0, 0, "-", "nonlinearimplicitstaticparallelarclength"], [24, 0, 0, "-", "nonlinearimplicitstaticparallelmk2"]], "edelweissfe.solvers.nonlinearimplicitstatic": [[24, 1, 1, "", "NIST"]], "edelweissfe.solvers.nonlinearimplicitstatic.NIST": [[24, 2, 1, "", "applyDirichlet"], [24, 2, 1, "", "applyDirichletK"], [24, 2, 1, "", "applyStepActionsAtIncrementStart"], [24, 2, 1, "", "applyStepActionsAtStepEnd"], [24, 2, 1, "", "applyStepActionsAtStepStart"], [24, 2, 1, "", "assembleConstraints"], [24, 2, 1, "", "assembleLoads"], [24, 2, 1, "", "assembleStiffnessCSR"], [24, 2, 1, "", "checkConvergence"], [24, 2, 1, "", "checkDivergingSolution"], [24, 2, 1, "", "computeBodyForces"], [24, 2, 1, "", "computeDistributedLoads"], [24, 2, 1, "", "computeElements"], [24, 2, 1, "", "computeSpatialAveragedFluxes"], [24, 2, 1, "", "extrapolateLastIncrement"], [24, 2, 1, "", "linearSolve"], [24, 2, 1, "", "printResidualOutlierNodes"], [24, 2, 1, "", "solveIncrement"], [24, 2, 1, "", "solveStep"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength": [[24, 1, 1, "", "NISTPArcLength"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength": [[24, 2, 1, "", "applyStepActionsAtStepEnd"], [24, 2, 1, "", "extrapolateLastIncrement"], [24, 2, 1, "", "solveIncrement"], [24, 2, 1, "", "solveStep"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2": [[24, 1, 1, "", "NISTParallel"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel": [[24, 2, 1, "", "applyDirichletK"], [24, 2, 1, "", "computeElements"], [24, 2, 1, "", "solveStep"]], "edelweissfe.stepactions.base": [[25, 0, 0, "-", "stepactionbase"]], "edelweissfe.stepactions.base.stepactionbase": [[25, 1, 1, "", "StepActionBase"]], "edelweissfe.stepactions.base.stepactionbase.StepActionBase": [[25, 2, 1, "", "applyAtIncrementStart"], [25, 2, 1, "", "applyAtStepEnd"], [25, 2, 1, "", "applyAtStepStart"], [25, 2, 1, "", "updateStepAction"]], "edelweissfe.stepactions": [[25, 0, 0, "-", "bodyforce"], [25, 0, 0, "-", "dirichlet"], [25, 0, 0, "-", "distributedload"], [25, 0, 0, "-", "geostatic"], [25, 0, 0, "-", "indirectcontractioncontrol"], [25, 0, 0, "-", "indirectcontrol"], [25, 0, 0, "-", "initializematerial"], [25, 0, 0, "-", "modelupdate"], [25, 0, 0, "-", "nodeforces"], [25, 0, 0, "-", "setfield"], [25, 0, 0, "-", "setinitialconditions"]], "edelweissfe.steps": [[26, 0, 0, "-", "adaptivestep"]], "edelweissfe.steps.adaptivestep": [[26, 1, 1, "", "AdaptiveStep"]], "edelweissfe.steps.adaptivestep.AdaptiveStep": [[26, 5, 1, "", "criticalIter"], [26, 5, 1, "", "cutbackFactor"], [26, 5, 1, "", "length"], [26, 5, 1, "", "maxGrowIter"], [26, 5, 1, "", "maxIncrementSize"], [26, 5, 1, "", "maxIter"], [26, 5, 1, "", "maxNumberIncrements"], [26, 5, 1, "", "minIncrementSize"], [26, 5, 1, "", "number"], [26, 2, 1, "", "solve"], [26, 5, 1, "", "startIncrementSize"]], "edelweissfe.steps.base": [[26, 0, 0, "-", "stepbase"]], "edelweissfe.steps.base.stepbase": [[26, 1, 1, "", "StepBase"]], "edelweissfe.steps.base.stepbase.StepBase": [[26, 2, 1, "", "solve"]], "edelweissfe.timesteppers.adaptivetimestepper": [[28, 1, 1, "", "AdaptiveTimeStepper"]], "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper": [[28, 2, 1, "", "discardAndChangeIncrement"], [28, 2, 1, "", "generateTimeStep"], [28, 2, 1, "", "preventIncrementIncrease"], [28, 2, 1, "", "readRestart"], [28, 2, 1, "", "reduceNextIncrement"], [28, 2, 1, "", "writeRestart"]], "edelweissfe.utils.elementresultcollector": [[28, 1, 1, "", "ElementResultCollector"]], "edelweissfe.utils.elementresultcollector.ElementResultCollector": [[28, 2, 1, "", "getCurrentResults"], [28, 2, 1, "", "update"]], "edelweissfe.utils": [[5, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "fieldoutput"], [27, 0, 0, "-", "inputfileparser"], [20, 0, 0, "-", "plotter"]], "edelweissfe.utils.exceptions": [[5, 6, 1, "", "ConditionalStop"], [5, 6, 1, "", "CutbackRequest"], [5, 6, 1, "", "DivergingSolution"], [5, 6, 1, "", "InputExecption"], [5, 6, 1, "", "ReachedMaxIncrements"], [5, 6, 1, "", "ReachedMaxIterations"], [5, 6, 1, "", "ReachedMinIncrementSize"], [5, 6, 1, "", "StepFailed"], [5, 6, 1, "", "WrongDomain"]], "edelweissfe.utils.fieldoutput": [[6, 1, 1, "", "ElementFieldOutput"], [6, 1, 1, "", "ExpressionFieldOutput"], [6, 1, 1, "", "FieldOutputController"], [6, 1, 1, "", "NodeFieldOutput"], [6, 1, 1, "", "_FieldOutputBase"]], "edelweissfe.utils.fieldoutput.ElementFieldOutput": [[6, 2, 1, "", "setResults"], [6, 2, 1, "", "updateResults"]], "edelweissfe.utils.fieldoutput.ExpressionFieldOutput": [[6, 2, 1, "", "updateResults"]], "edelweissfe.utils.fieldoutput.FieldOutputController": [[6, 2, 1, "", "addExpressionFieldOutput"], [6, 2, 1, "", "addPerElementFieldOutput"], [6, 2, 1, "", "addPerNodeFieldOutput"], [6, 2, 1, "", "finalizeIncrement"], [6, 2, 1, "", "finalizeJob"], [6, 2, 1, "", "finalizeStep"], [6, 2, 1, "", "initializeStep"]], "edelweissfe.utils.fieldoutput.NodeFieldOutput": [[6, 2, 1, "", "updateResults"]], "edelweissfe.utils.fieldoutput._FieldOutputBase": [[6, 2, 1, "", "finalizeIncrement"], [6, 2, 1, "", "getLastResult"], [6, 2, 1, "", "getResultHistory"], [6, 2, 1, "", "getTimeHistory"], [6, 2, 1, "", "initializeJob"], [6, 2, 1, "", "setResults"], [6, 2, 1, "", "writeLastResult"]], "edelweissfe.utils.inputfileparser": [[27, 3, 1, "", "parseInputFile"], [27, 3, 1, "", "printKeywords"], [27, 3, 1, "", "printKeywordsRST"]], "edelweissfe.utils.plotter": [[20, 1, 1, "", "Plotter"]], "edelweissfe.utils.plotter.Plotter": [[20, 2, 1, "", "configurePlotter"], [20, 2, 1, "", "exportFigure"], [20, 2, 1, "", "exportPlots"], [20, 2, 1, "", "finalize"], [20, 2, 1, "", "getAx"], [20, 2, 1, "", "getFig"], [20, 2, 1, "", "plotXYData"], [20, 2, 1, "", "show"]], "edelweissfe.variables": [[29, 0, 0, "-", "fieldvariable"], [29, 0, 0, "-", "scalarvariable"]], "edelweissfe.variables.fieldvariable": [[29, 1, 1, "", "FieldVariable"]], "edelweissfe.variables.scalarvariable": [[29, 1, 1, "", "ScalarVariable"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"contributor": 0, "analyt": [1, 12, 27], "field": [1, 6, 7, 12, 25, 27], "scalarexpress": 1, "defin": [1, 12, 27], "express": [1, 17], "option": [1, 2, 6, 8, 12, 17, 20, 25, 27], "randomscalar": 1, "A": [1, 7, 8, 16, 26], "random": 1, "implement": [1, 2, 4, 14, 25], "your": [1, 2, 4, 12, 14, 25, 27], "own": [1, 2, 4, 14, 25], "constraint": [2, 12, 27], "equalvaluelagrangian": 2, "constrain": 2, "nodal": 2, "valu": [2, 25], "equal": 2, "equalvaluepenalti": 2, "linearizedrigidbodi": 2, "linear": [2, 4, 13, 14], "rigid": 2, "bodi": 2, "rigidbodi": 2, "geometr": [2, 4], "exact": 2, "3d": [2, 8], "penaltyindirectcontrol": 2, "penalti": 2, "base": 2, "indirect": [2, 25], "control": [2, 25], "dof": 3, "manag": 3, "element": [4, 12, 15, 16, 25, 27, 28], "provid": [4, 14], "marmot": [4, 32], "marmotsingleqpel": 4, "edelweiss": [4, 14], "total": 4, "lagrang": 4, "except": 5, "output": [6, 12, 27], "nodefield": 7, "physic": [7, 19], "node": [7, 8, 12, 25, 27], "gener": [8, 12, 17, 27], "boxgen": 8, "box": 8, "mesh": [8, 15, 17], "planerectquad": 8, "2d": 8, "plane": 8, "rectangular": 8, "pipegen": 8, "pipe": 8, "cubit": 8, "findclosestnod": 8, "find": 8, "closest": 8, "executepythoncod": 8, "script": 8, "model": [8, 12, 16, 25, 27], "us": [8, 12, 27], "python": 8, "document": 9, "inputfil": 10, "driven": 10, "simul": [10, 17, 26, 31], "journal": 11, "advancedmateri": [12, 14, 27], "definit": [12, 14, 27], "an": [12, 27], "advanc": [12, 14, 27], "materi": [12, 14, 25, 27], "analyticalfield": [12, 27], "configureplot": [12, 20, 27], "custom": [12, 27], "figur": [12, 27], "ax": [12, 27], "": [12, 27], "elset": [12, 27], "set": [12, 23, 25, 27], "exportplot": [12, 20, 27], "export": [12, 17, 27], "fieldoutput": [12, 27], "which": [12, 27], "i": [12, 27], "outputmanag": [12, 17, 27], "includ": [12, 27], "load": [12, 25, 27], "extra": [12, 27], "inp": [12, 27], "file": [12, 17, 27, 31], "fragment": [12, 27], "rel": [12, 27], "path": [12, 27], "current": [12, 13, 14, 24, 27], "job": [12, 27], "analysi": [12, 27], "modelgener": [12, 27], "from": [12, 27, 28], "modul": [12, 27], "nset": [12, 27], "parameteridentif": [12, 27], "identifi": [12, 27], "paramet": [12, 27], "given": [12, 27], "x": [12, 27], "y": [12, 27], "data": [12, 17, 27], "section": [12, 22, 27], "solver": [12, 13, 24, 27], "step": [12, 25, 26, 27, 28, 32], "surfac": [12, 25, 27], "updateconfigur": [12, 27], "updat": [12, 25, 27], "configur": [12, 27, 32], "avail": [13, 14, 24], "marmotmateri": 14, "thi": 14, "elast": 14, "von": 14, "mise": 14, "neo": 14, "hookean": 14, "w": 14, "i1": 14, "j": 14, "penc": 14, "gou": 14, "hyperelast": 14, "plastic": 14, "creat": 15, "finit": [15, 16], "femodel": 16, "classic": [16, 26], "ensight": 17, "gold": 17, "format": [17, 28], "monitor": 17, "quantiti": 17, "termin": 17, "meshplot": 17, "matplotlib": 17, "fractureenergyintegr": 17, "determin": 17, "fractur": 17, "energi": 17, "plotalongpath": 17, "plot": [17, 20], "result": [17, 28], "along": 17, "line": 17, "conditionalstop": 17, "condit": [17, 25], "stop": 17, "becom": 17, "true": 17, "statusfil": 17, "write": 17, "statu": 17, "meshdatatofil": 17, "computetimemonitor": 17, "print": 17, "comput": 17, "time": [17, 28], "per": 17, "increment": 17, "parallel": [18, 24], "phenomena": 19, "point": 21, "nist": 24, "nonlinear": 24, "implicit": 24, "static": 24, "nistparallelformarmotel": 24, "nistparclength": 24, "arc": 24, "length": 24, "action": 25, "bodyforc": 25, "dirichlet": 25, "standard": 25, "bc": 25, "distributedload": 25, "distribut": 25, "geostat": 25, "stress": 25, "state": 25, "indirectcontrol": 25, "displac": 25, "indirectcontractioncontrol": 25, "contract": 25, "ring": 25, "initializemateri": 25, "initi": 25, "modelupd": 25, "nodeforc": 25, "concentr": 25, "forc": 25, "setfield": 25, "prescrib": 25, "setinitialcondit": 25, "adaptivestep": 26, "adp": 26, "transient": 26, "input": [27, 31], "syntax": 27, "keyword": 27, "util": 28, "matrix": 28, "convers": 28, "coo": 28, "spars": 28, "csr": 28, "gather": 28, "effici": 28, "adapt": 28, "variabl": 29, "featur": 30, "welcom": 31, "edelweissf": [31, 32], "execut": 31, "exampl": 31, "indic": 31, "tabl": 31, "instal": 32, "build": 32, "tldr": 32, "prerequisit": 33, "public": 34}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributors": [[0, "contributors"]], "Analytical fields": [[1, "module-edelweissfe.config.analyticalfields"]], "scalarexpression - Field defined by expression": [[1, "scalarexpression-field-defined-by-expression"]], "Options": [[1, "id1"], [1, "id3"], [2, "id9"], [2, "id11"]], "randomscalar - A random field": [[1, "randomscalar-a-random-field"]], "Implementing your own fields": [[1, "implementing-your-own-fields"]], "Constraints": [[2, "module-edelweissfe.config.constraints"]], "equalvaluelagrangian - Constrain nodal values to equal values": [[2, "equalvaluelagrangian-constrain-nodal-values-to-equal-values"]], "Options:": [[2, "id1"], [2, "id3"], [2, "id5"], [6, "id15"], [8, "id3"], [8, "id5"], [8, "id7"], [8, "id9"], [8, "id11"], [8, "id12"], [17, "id2"], [17, "id3"], [17, "id4"], [17, "id5"], [17, "id6"], [17, "id7"], [17, "id8"], [17, "id9"], [17, "id10"], [25, "id1"], [25, "id3"], [25, "id4"], [25, "id6"], [25, "id8"], [25, "id10"], [25, "id11"], [25, "id12"], [25, "id14"], [25, "id15"]], "equalvaluepenalty - Constrain nodal values to equal values": [[2, "equalvaluepenalty-constrain-nodal-values-to-equal-values"]], "linearizedrigidbody - Linearized rigid body constraints": [[2, "linearizedrigidbody-linearized-rigid-body-constraints"]], "rigidbody - Geometrically exact rigid body constraints in 3D": [[2, "rigidbody-geometrically-exact-rigid-body-constraints-in-3d"]], "penaltyindirectcontrol - Penalty based indirect control": [[2, "penaltyindirectcontrol-penalty-based-indirect-control"]], "Implementing your own constraints": [[2, "implementing-your-own-constraints"]], "DOF manager": [[3, "dof-manager"]], "Elements": [[4, "elements"]], "Provider marmot": [[4, "provider-marmot"]], "Provider marmotsingleqpelement": [[4, "provider-marmotsingleqpelement"]], "Provider edelweiss": [[4, "provider-edelweiss"], [14, "provider-edelweiss"]], "Geometrically linear element": [[4, "geometrically-linear-element"]], "Total Lagrange element": [[4, "total-lagrange-element"]], "Implementing your own elements": [[4, "implementing-your-own-elements"]], "Exceptions": [[5, "exceptions"]], "Field outputs": [[6, "field-outputs"]], "Fields": [[7, "fields"]], "NodeField - A physical field on nodes": [[7, "module-edelweissfe.fields.nodefield"]], "Generators": [[8, "generators"]], "boxgen - A 3D box mesh generator": [[8, "boxgen-a-3d-box-mesh-generator"]], "planerectquad - A 2D plane rectangular mesh generator": [[8, "planerectquad-a-2d-plane-rectangular-mesh-generator"]], "pipegen - A 3D pipe mesh generator": [[8, "pipegen-a-3d-pipe-mesh-generator"]], "cubit - A cubit mesh generator": [[8, "cubit-a-cubit-mesh-generator"]], "findclosestnode - Find the closest node": [[8, "findclosestnode-find-the-closest-node"]], "executepythoncode - Script model generation using Python": [[8, "executepythoncode-script-model-generation-using-python"]], "Documentation": [[9, "documentation"]], "Inputfile driven simulations": [[10, "inputfile-driven-simulations"]], "Journal": [[11, "journal"]], "*advancedmaterial : definition of an advanced material": [[12, "id1"], [27, "id1"]], "*analyticalfield : define an analytical field": [[12, "id2"], [27, "id2"]], "*configureplots : customize the figures and axes": [[12, "id3"], [27, "id3"]], "*constraint : define a constraint": [[12, "id4"], [27, "id4"]], "*element : definition of element(s)": [[12, "id5"], [27, "id5"]], "*elset : definition of an element set": [[12, "id6"], [27, "id6"]], "*exportplots : export your figures": [[12, "id7"], [27, "id7"]], "*fieldoutput : define fieldoutput, which is used by outputmanagers": [[12, "id8"], [27, "id8"]], "*include : (optional) load extra .inp file (fragment), use relative path to current .inp": [[12, "id9"], [27, "id9"]], "*job : definition of an analysis job": [[12, "id10"], [27, "id10"]], "*material : definition of a material": [[12, "id11"], [14, "id3"], [27, "id11"]], "*modelgenerator : define a model generator, loaded from a module": [[12, "id12"], [27, "id12"]], "*node : definition of nodes": [[12, "id13"], [27, "id13"]], "*nset : definition of an element set": [[12, "id14"], [27, "id14"]], "*output : define an output module": [[12, "id15"], [27, "id15"]], "*parameteridentification : identify material parameter for given x and y data": [[12, "id16"], [27, "id16"]], "*section : definition of an section": [[12, "id17"], [27, "id17"]], "*solver : definition of a solver": [[12, "id18"], [27, "id18"]], "*step : definition of job steps": [[12, "id19"], [27, "id19"]], "*surface : definition of surface set": [[12, "id20"], [27, "id20"]], "*updateconfiguration : update an configuration": [[12, "id21"], [27, "id21"]], "Linear solvers": [[13, "linear-solvers"]], "Currently available linear solvers": [[13, "id1"]], "Materials": [[14, "materials"]], "*advancedmaterial : definition of a material": [[14, "id5"]], "Provider marmotmaterial": [[14, "provider-marmotmaterial"]], "Currently available materials with this provider": [[14, "id7"]], "Linear elastic material": [[14, "linear-elastic-material"]], "Von Mises material": [[14, "von-mises-material"]], "Elastic Neo-Hookean W(I1, J) Pence-Gou [a] materials": [[14, "elastic-neo-hookean-w-i1-j-pence-gou-a-materials"]], "Advanced hyperelastic materials": [[14, "advanced-hyperelastic-materials"]], "Elastic-plastic Neo-Hookean W(I1, J) Pence-Gou [a] materials": [[14, "elastic-plastic-neo-hookean-w-i1-j-pence-gou-a-materials"]], "Advanced hyperelastic-plastic material": [[14, "advanced-hyperelastic-plastic-material"]], "Implementing your own materials": [[14, "implementing-your-own-materials"]], "Creating finite element meshes": [[15, "creating-finite-element-meshes"]], "Models": [[16, "models"]], "FEModel - A classical finite element model": [[16, "module-edelweissfe.models.femodel"]], "Outputmanagers": [[17, "module-edelweissfe.config.outputmanagers"]], "ensight - Export to Ensight Gold format": [[17, "module-edelweissfe.outputmanagers.ensight"]], "monitor - Monitor quantities in the terminal": [[17, "module-edelweissfe.outputmanagers.monitor"]], "meshplot - Export to matplotlib": [[17, "module-edelweissfe.outputmanagers.meshplot"]], "fractureenergyintegrator - Determine the fracture energy": [[17, "module-edelweissfe.outputmanagers.fractureenergyintegrator"]], "plotalongpath - Plot a result along a line": [[17, "module-edelweissfe.outputmanagers.plotalongpath"]], "conditionalstop - Conditional stop if expression becomes true": [[17, "module-edelweissfe.outputmanagers.conditionalstop"]], "statusfile - Write the status of the simulation to a file": [[17, "module-edelweissfe.outputmanagers.statusfile"]], "meshdatatofile - Write the (generated) mesh data to a file": [[17, "module-edelweissfe.outputmanagers.meshdatatofile"]], "computetimemonitor - Print and write compute times per increment": [[17, "module-edelweissfe.outputmanagers.computetimemonitor"]], "Parallelization": [[18, "parallelization"]], "Physical phenomena": [[19, "physical-phenomena"]], "Plotting": [[20, "plotting"]], "Options ``*configurePlots``:": [[20, "id1"]], "Options ``*exportPlots``:": [[20, "id2"]], "Points": [[21, "points"]], "Sections": [[22, "sections"]], "Sets": [[23, "sets"]], "Solvers": [[24, "module-edelweissfe.config.solvers"]], "Currently available:": [[24, "id1"]], "NIST - Nonlinear Implicit Static": [[24, "module-edelweissfe.solvers.nonlinearimplicitstatic"]], "NISTParallelForMarmotElements - Nonlinear Implicit Static (parallel)": [[24, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelmk2"]], "NISTPArcLength - Nonlinear Implicit Static - Arc length": [[24, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelarclength"]], "Step actions": [[25, "module-edelweissfe.config.stepactions"]], "bodyforce - Bodyforce loads": [[25, "bodyforce-bodyforce-loads"]], "dirichlet - Standard dirichlet BC": [[25, "dirichlet-standard-dirichlet-bc"]], "distributedload - Distributed surface loads": [[25, "distributedload-distributed-surface-loads"]], "geostatic - Geostatic stress states": [[25, "geostatic-geostatic-stress-states"]], "indirectcontrol - Indirect displacement control": [[25, "indirectcontrol-indirect-displacement-control"]], "indirectcontractioncontrol - Indirect displacement \u2013 contraction ring control": [[25, "indirectcontractioncontrol-indirect-displacement-contraction-ring-control"]], "initializematerial - Initialize materials": [[25, "initializematerial-initialize-materials"]], "modelupdate - Update the model": [[25, "modelupdate-update-the-model"]], "nodeforces - Concentrated node forces": [[25, "nodeforces-concentrated-node-forces"]], "setfield - Set a field to a prescribed value": [[25, "setfield-set-a-field-to-a-prescribed-value"]], "setinitialconditions - Set initial conditions to elements": [[25, "setinitialconditions-set-initial-conditions-to-elements"]], "Implementing your own step actions": [[25, "implementing-your-own-step-actions"]], "Steps": [[26, "module-edelweissfe.steps.base.stepbase"]], "AdaptiveStep - A classical adpative step for transient simulations": [[26, "module-edelweissfe.steps.adaptivestep"]], "Input file syntax": [[27, "input-file-syntax"]], "Keywords": [[27, "keywords"]], "Utilities": [[28, "utilities"]], "Matrix conversion from COO sparse format to CSR format": [[28, "matrix-conversion-from-coo-sparse-format-to-csr-format"]], "Gathering efficiently of element results": [[28, "gathering-efficiently-of-element-results"]], "Adaptive time stepping": [[28, "adaptive-time-stepping"]], "Variables": [[29, "variables"]], "Features": [[30, "features"]], "Welcome to EdelweissFE": [[31, "welcome-to-edelweissfe"]], "Execute a simulation": [[31, "execute-a-simulation"]], "Example input file": [[31, "example-input-file"]], "Indices and tables": [[31, "indices-and-tables"]], "Installation": [[32, "installation"]], "Marmot": [[32, "marmot"]], "Configuration": [[32, "configuration"]], "Building EdelweissFE": [[32, "building-edelweissfe"]], "TLDR": [[32, "tldr"]], "Installation steps": [[32, "installation-steps"]], "Prerequisites": [[33, "prerequisites"]], "Publications": [[34, "publications"]]}, "indexentries": {"analyticalfield (class in edelweissfe.analyticalfields.base.analyticalfieldbase)": [[1, "edelweissfe.analyticalfields.base.analyticalfieldbase.AnalyticalField"]], "edelweissfe.analyticalfields.base.analyticalfieldbase": [[1, "module-edelweissfe.analyticalfields.base.analyticalfieldbase"]], "edelweissfe.analyticalfields.randomscalar": [[1, "module-edelweissfe.analyticalfields.randomscalar"]], "edelweissfe.analyticalfields.scalarexpression": [[1, "module-edelweissfe.analyticalfields.scalarexpression"]], "edelweissfe.config.analyticalfields": [[1, "module-edelweissfe.config.analyticalfields"]], "evaluateatcoordinates() (edelweissfe.analyticalfields.base.analyticalfieldbase.analyticalfield method)": [[1, "edelweissfe.analyticalfields.base.analyticalfieldbase.AnalyticalField.evaluateAtCoordinates"]], "module": [[1, "module-edelweissfe.analyticalfields.base.analyticalfieldbase"], [1, "module-edelweissfe.analyticalfields.randomscalar"], [1, "module-edelweissfe.analyticalfields.scalarexpression"], [1, "module-edelweissfe.config.analyticalfields"], [2, "module-edelweissfe.config.constraints"], [2, "module-edelweissfe.constraints.base.constraintbase"], [2, "module-edelweissfe.constraints.equalvaluelagrangian"], [2, "module-edelweissfe.constraints.equalvaluepenalty"], [2, "module-edelweissfe.constraints.linearizedrigidbody"], [2, "module-edelweissfe.constraints.penaltyindirectcontrol"], [2, "module-edelweissfe.constraints.rigidbody"], [3, "module-edelweissfe.numerics.dofmanager"], [4, "module-edelweissfe.config.elementlibrary"], [4, "module-edelweissfe.elements.base.baseelement"], [5, "module-edelweissfe.utils.exceptions"], [6, "module-edelweissfe.utils.fieldoutput"], [7, "module-edelweissfe.fields.nodefield"], [8, "module-edelweissfe.config.generators"], [8, "module-edelweissfe.generators.boxgen"], [8, "module-edelweissfe.generators.cubit"], [8, "module-edelweissfe.generators.executepythoncode"], [8, "module-edelweissfe.generators.findclosestnode"], [8, "module-edelweissfe.generators.planerectquad"], [10, "module-edelweissfe.drivers.inputfiledrivensimulation"], [11, "module-edelweissfe.journal.journal"], [15, "module-edelweissfe.generators.abqmodelconstructor"], [16, "module-edelweissfe.models.femodel"], [17, "module-edelweissfe.config.outputmanagers"], [17, "module-edelweissfe.outputmanagers.computetimemonitor"], [17, "module-edelweissfe.outputmanagers.conditionalstop"], [17, "module-edelweissfe.outputmanagers.ensight"], [17, "module-edelweissfe.outputmanagers.fractureenergyintegrator"], [17, "module-edelweissfe.outputmanagers.meshdatatofile"], [17, "module-edelweissfe.outputmanagers.meshplot"], [17, "module-edelweissfe.outputmanagers.monitor"], [17, "module-edelweissfe.outputmanagers.plotalongpath"], [17, "module-edelweissfe.outputmanagers.statusfile"], [19, "module-edelweissfe.config.phenomena"], [20, "module-edelweissfe.utils.plotter"], [21, "module-edelweissfe.points.node"], [22, "module-edelweissfe.config.sections"], [23, "module-edelweissfe.sets.elementset"], [23, "module-edelweissfe.sets.nodeset"], [23, "module-edelweissfe.sets.orderedset"], [24, "module-edelweissfe.config.solvers"], [24, "module-edelweissfe.solvers.nonlinearimplicitstatic"], [24, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelarclength"], [24, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelmk2"], [25, "module-edelweissfe.config.stepactions"], [25, "module-edelweissfe.stepactions.base.stepactionbase"], [25, "module-edelweissfe.stepactions.bodyforce"], [25, "module-edelweissfe.stepactions.dirichlet"], [25, "module-edelweissfe.stepactions.distributedload"], [25, "module-edelweissfe.stepactions.geostatic"], [25, "module-edelweissfe.stepactions.indirectcontractioncontrol"], [25, "module-edelweissfe.stepactions.indirectcontrol"], [25, "module-edelweissfe.stepactions.initializematerial"], [25, "module-edelweissfe.stepactions.modelupdate"], [25, "module-edelweissfe.stepactions.nodeforces"], [25, "module-edelweissfe.stepactions.setfield"], [25, "module-edelweissfe.stepactions.setinitialconditions"], [26, "module-edelweissfe.steps.adaptivestep"], [26, "module-edelweissfe.steps.base.stepbase"], [27, "module-edelweissfe.utils.inputfileparser"], [29, "module-edelweissfe.variables.fieldvariable"], [29, "module-edelweissfe.variables.scalarvariable"]], "constraintbase (class in edelweissfe.constraints.base.constraintbase)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase"]], "applyconstraint() (edelweissfe.constraints.base.constraintbase.constraintbase method)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.applyConstraint"]], "assignadditionalscalarvariables() (edelweissfe.constraints.base.constraintbase.constraintbase method)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.assignAdditionalScalarVariables"]], "edelweissfe.config.constraints": [[2, "module-edelweissfe.config.constraints"]], "edelweissfe.constraints.base.constraintbase": [[2, "module-edelweissfe.constraints.base.constraintbase"]], "edelweissfe.constraints.equalvaluelagrangian": [[2, "module-edelweissfe.constraints.equalvaluelagrangian"]], "edelweissfe.constraints.equalvaluepenalty": [[2, "module-edelweissfe.constraints.equalvaluepenalty"]], "edelweissfe.constraints.linearizedrigidbody": [[2, "module-edelweissfe.constraints.linearizedrigidbody"]], "edelweissfe.constraints.penaltyindirectcontrol": [[2, "module-edelweissfe.constraints.penaltyindirectcontrol"]], "edelweissfe.constraints.rigidbody": [[2, "module-edelweissfe.constraints.rigidbody"]], "fieldsonnodes (edelweissfe.constraints.base.constraintbase.constraintbase property)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.fieldsOnNodes"]], "getnumberofadditionalneededscalarvariables() (edelweissfe.constraints.base.constraintbase.constraintbase method)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.getNumberOfAdditionalNeededScalarVariables"]], "ndof (edelweissfe.constraints.base.constraintbase.constraintbase property)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.nDof"]], "nodes (edelweissfe.constraints.base.constraintbase.constraintbase property)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.nodes"]], "dofmanager (class in edelweissfe.numerics.dofmanager)": [[3, "edelweissfe.numerics.dofmanager.DofManager"]], "dofvector (class in edelweissfe.numerics.dofmanager)": [[3, "edelweissfe.numerics.dofmanager.DofVector"]], "vijsystemmatrix (class in edelweissfe.numerics.dofmanager)": [[3, "edelweissfe.numerics.dofmanager.VIJSystemMatrix"]], "accumulatedconstraintndof (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.accumulatedConstraintNDof"]], "accumulatedelementndof (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.accumulatedElementNDof"]], "constructdofvector() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.constructDofVector"]], "constructvijsystemmatrix() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.constructVIJSystemMatrix"]], "copy() (edelweissfe.numerics.dofmanager.dofvector method)": [[3, "edelweissfe.numerics.dofmanager.DofVector.copy"]], "edelweissfe.numerics.dofmanager": [[3, "module-edelweissfe.numerics.dofmanager"]], "fields (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.fields"]], "getnodeforindexindofvector() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.getNodeForIndexInDofVector"]], "idcsofconstraintsindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfConstraintsInDofVector"]], "idcsofelementsindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfElementsInDofVector"]], "idcsoffieldvariablesindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfFieldVariablesInDofVector"]], "idcsoffieldsindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfFieldsInDofVector"]], "idcsoffieldsonnodesetsindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfFieldsOnNodeSetsInDofVector"]], "idcsofnodefieldsindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfNodeFieldsInDofVector"]], "idcsofscalarvariablesindofvector (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.idcsOfScalarVariablesInDofVector"]], "indextohostobjectmapping (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.indexToHostObjectMapping"]], "largestnumberofconstraintndof (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.largestNumberOfConstraintNDof"]], "largestnumberofelndof (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.largestNumberOfElNDof"]], "ndof (edelweissfe.numerics.dofmanager.dofmanager attribute)": [[3, "edelweissfe.numerics.dofmanager.DofManager.nDof"]], "writedofvectortonodefield() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.writeDofVectorToNodeField"]], "writenodefieldtodofvector() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.writeNodeFieldToDofVector"]], "baseelement (class in edelweissfe.elements.base.baseelement)": [[4, "edelweissfe.elements.base.baseelement.BaseElement"]], "displacementelement (class in edelweissfe.elements.displacementelement.element)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement"]], "displacementtlelement (class in edelweissfe.elements.displacementtlelement.element)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement"]], "marmotelementwrapper (class in edelweissfe.elements.marmotelement.element)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper"]], "marmotmaterialwrappingelement (class in edelweissfe.elements.marmotsingleqpelement.element)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement"]], "acceptlaststate() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.acceptLastState"]], "acceptlaststate() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.acceptLastState"]], "acceptlaststate() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.acceptLastState"]], "acceptlaststate() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.acceptLastState"]], "acceptlaststate() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.acceptLastState"]], "computebodyforce() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.computeBodyForce"]], "computebodyforce() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.computeBodyForce"]], "computebodyforce() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.computeBodyForce"]], "computebodyforce() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.computeBodyForce"]], "computebodyforce() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.computeBodyForce"]], "computedistributedload() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.computeDistributedLoad"]], "computedistributedload() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.computeDistributedLoad"]], "computedistributedload() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.computeDistributedLoad"]], "computedistributedload() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.computeDistributedLoad"]], "computedistributedload() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.computeDistributedLoad"]], "computeyourself() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.computeYourself"]], "computeyourself() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.computeYourself"]], "computeyourself() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.computeYourself"]], "computeyourself() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.computeYourself"]], "computeyourself() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.computeYourself"]], "dofindicespermutation (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.dofIndicesPermutation"]], "dofindicespermutation (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.dofIndicesPermutation"]], "dofindicespermutation (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.dofIndicesPermutation"]], "edelweissfe.config.elementlibrary": [[4, "module-edelweissfe.config.elementlibrary"]], "edelweissfe.elements.base.baseelement": [[4, "module-edelweissfe.elements.base.baseelement"]], "elnumber (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.elNumber"]], "elnumber (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.elNumber"]], "elnumber (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.elNumber"]], "elnumber (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.elNumber"]], "ensighttype (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.ensightType"]], "ensighttype (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.ensightType"]], "ensighttype (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.ensightType"]], "fields (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.fields"]], "fields (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.fields"]], "fields (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.fields"]], "getcoordinatesatcenter() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getCoordinatesAtCenter"]], "getcoordinatesatcenter() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.getCoordinatesAtCenter"]], "getcoordinatesatcenter() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.getCoordinatesAtCenter"]], "getcoordinatesatcenter() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getCoordinatesAtCenter"]], "getcoordinatesatcenter() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getCoordinatesAtCenter"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getCoordinatesAtQuadraturePoints"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.getCoordinatesAtQuadraturePoints"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.getCoordinatesAtQuadraturePoints"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getCoordinatesAtQuadraturePoints"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getCoordinatesAtQuadraturePoints"]], "getelementclass() (in module edelweissfe.config.elementlibrary)": [[4, "edelweissfe.config.elementlibrary.getElementClass"]], "getnumberofquadraturepoints() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getNumberOfQuadraturePoints"]], "getnumberofquadraturepoints() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.getNumberOfQuadraturePoints"]], "getnumberofquadraturepoints() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.getNumberOfQuadraturePoints"]], "getnumberofquadraturepoints() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getNumberOfQuadraturePoints"]], "getnumberofquadraturepoints() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getNumberOfQuadraturePoints"]], "getresultarray() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getResultArray"]], "getresultarray() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.getResultArray"]], "getresultarray() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.getResultArray"]], "getresultarray() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getResultArray"]], "getresultarray() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getResultArray"]], "hasmaterial (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.hasMaterial"]], "hasmaterial (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.hasMaterial"]], "hasmaterial (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.hasMaterial"]], "hasmaterial (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.hasMaterial"]], "initializeelement() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.initializeElement"]], "initializeelement() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.initializeElement"]], "initializeelement() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.initializeElement"]], "initializeelement() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.initializeElement"]], "initializeelement() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.initializeElement"]], "ndof (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.nDof"]], "ndof (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.nDof"]], "ndof (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.nDof"]], "nnodes (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.nNodes"]], "nnodes (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.nNodes"]], "nnodes (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.nNodes"]], "nodes (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.nodes"]], "nodes (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.nodes"]], "nodes (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.nodes"]], "resettolastvalidstate() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.resetToLastValidState"]], "resettolastvalidstate() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.resetToLastValidState"]], "resettolastvalidstate() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.resetToLastValidState"]], "resettolastvalidstate() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.resetToLastValidState"]], "resettolastvalidstate() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.resetToLastValidState"]], "setinitialcondition() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setInitialCondition"]], "setinitialcondition() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.setInitialCondition"]], "setinitialcondition() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.setInitialCondition"]], "setinitialcondition() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setInitialCondition"]], "setinitialcondition() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setInitialCondition"]], "setmaterial() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setMaterial"]], "setmaterial() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.setMaterial"]], "setmaterial() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.setMaterial"]], "setmaterial() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setMaterial"]], "setmaterial() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setMaterial"]], "setnodes() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setNodes"]], "setnodes() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.setNodes"]], "setnodes() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.setNodes"]], "setnodes() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setNodes"]], "setnodes() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setNodes"]], "setproperties() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setProperties"]], "setproperties() (edelweissfe.elements.displacementelement.element.displacementelement method)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.setProperties"]], "setproperties() (edelweissfe.elements.displacementtlelement.element.displacementtlelement method)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.setProperties"]], "setproperties() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setProperties"]], "setproperties() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setProperties"]], "thickness (edelweissfe.elements.displacementelement.element.displacementelement attribute)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.thickness"]], "thickness (edelweissfe.elements.displacementtlelement.element.displacementtlelement attribute)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.thickness"]], "visualizationnodes (edelweissfe.elements.displacementelement.element.displacementelement property)": [[4, "edelweissfe.elements.displacementelement.element.DisplacementElement.visualizationNodes"]], "visualizationnodes (edelweissfe.elements.displacementtlelement.element.displacementtlelement property)": [[4, "edelweissfe.elements.displacementtlelement.element.DisplacementTLElement.visualizationNodes"]], "visualizationnodes (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.visualizationNodes"]], "conditionalstop": [[5, "edelweissfe.utils.exceptions.ConditionalStop"]], "cutbackrequest": [[5, "edelweissfe.utils.exceptions.CutbackRequest"]], "divergingsolution": [[5, "edelweissfe.utils.exceptions.DivergingSolution"]], "inputexecption": [[5, "edelweissfe.utils.exceptions.InputExecption"]], "reachedmaxincrements": [[5, "edelweissfe.utils.exceptions.ReachedMaxIncrements"]], "reachedmaxiterations": [[5, "edelweissfe.utils.exceptions.ReachedMaxIterations"]], "reachedminincrementsize": [[5, "edelweissfe.utils.exceptions.ReachedMinIncrementSize"]], "stepfailed": [[5, "edelweissfe.utils.exceptions.StepFailed"]], "wrongdomain": [[5, "edelweissfe.utils.exceptions.WrongDomain"]], "edelweissfe.utils.exceptions": [[5, "module-edelweissfe.utils.exceptions"]], "elementfieldoutput (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.ElementFieldOutput"]], "expressionfieldoutput (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.ExpressionFieldOutput"]], "fieldoutputcontroller (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController"]], "nodefieldoutput (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.NodeFieldOutput"]], "_fieldoutputbase (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase"]], "addexpressionfieldoutput() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.addExpressionFieldOutput"]], "addperelementfieldoutput() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.addPerElementFieldOutput"]], "addpernodefieldoutput() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.addPerNodeFieldOutput"]], "edelweissfe.utils.fieldoutput": [[6, "module-edelweissfe.utils.fieldoutput"]], "finalizeincrement() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.finalizeIncrement"]], "finalizeincrement() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.finalizeIncrement"]], "finalizejob() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.finalizeJob"]], "finalizestep() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.finalizeStep"]], "getlastresult() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.getLastResult"]], "getresulthistory() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.getResultHistory"]], "gettimehistory() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.getTimeHistory"]], "initializejob() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.initializeJob"]], "initializestep() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.initializeStep"]], "setresults() (edelweissfe.utils.fieldoutput.elementfieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.ElementFieldOutput.setResults"]], "setresults() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.setResults"]], "updateresults() (edelweissfe.utils.fieldoutput.elementfieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.ElementFieldOutput.updateResults"]], "updateresults() (edelweissfe.utils.fieldoutput.expressionfieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.ExpressionFieldOutput.updateResults"]], "updateresults() (edelweissfe.utils.fieldoutput.nodefieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.NodeFieldOutput.updateResults"]], "writelastresult() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.writeLastResult"]], "nodefield (class in edelweissfe.fields.nodefield)": [[7, "edelweissfe.fields.nodefield.NodeField"]], "nodefieldsubset (class in edelweissfe.fields.nodefield)": [[7, "edelweissfe.fields.nodefield.NodeFieldSubset"]], "addentriesfromother() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.addEntriesFromOther"]], "copyentriesfromother() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.copyEntriesFromOther"]], "createfieldvalueentry() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.createFieldValueEntry"]], "createfieldvalueentry() (edelweissfe.fields.nodefield.nodefieldsubset method)": [[7, "edelweissfe.fields.nodefield.NodeFieldSubset.createFieldValueEntry"]], "edelweissfe.fields.nodefield": [[7, "module-edelweissfe.fields.nodefield"]], "subset() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.subset"]], "subset() (edelweissfe.fields.nodefield.nodefieldsubset method)": [[7, "edelweissfe.fields.nodefield.NodeFieldSubset.subset"]], "edelweissfe.config.generators": [[8, "module-edelweissfe.config.generators"]], "edelweissfe.generators.boxgen": [[8, "module-edelweissfe.generators.boxgen"]], "edelweissfe.generators.cubit": [[8, "module-edelweissfe.generators.cubit"]], "edelweissfe.generators.executepythoncode": [[8, "module-edelweissfe.generators.executepythoncode"]], "edelweissfe.generators.findclosestnode": [[8, "module-edelweissfe.generators.findclosestnode"]], "edelweissfe.generators.planerectquad": [[8, "module-edelweissfe.generators.planerectquad"]], "edelweissfe.drivers.inputfiledrivensimulation": [[10, "module-edelweissfe.drivers.inputfiledrivensimulation"]], "finiteelementsimulation() (in module edelweissfe.drivers.inputfiledrivensimulation)": [[10, "edelweissfe.drivers.inputfiledrivensimulation.finiteElementSimulation"]], "journal (class in edelweissfe.journal.journal)": [[11, "edelweissfe.journal.journal.Journal"]], "edelweissfe.journal.journal": [[11, "module-edelweissfe.journal.journal"]], "errormessage() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.errorMessage"]], "message() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.message"]], "printseperationline() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.printSeperationLine"]], "printtable() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.printTable"]], "setnewlinewidth() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.setNewLineWidth"]], "setverbose() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.setVerbose"]], "squelch() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.squelch"]], "basehyperelasticmaterial (class in edelweissfe.materials.base.basehyperelasticmaterial)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial"]], "basehypoelasticmaterial (class in edelweissfe.materials.base.basehypoelasticmaterial)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial"]], "hyperelasticadvancedi2extendedmaterial (class in edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial"]], "linearelasticmaterial (class in edelweissfe.materials.linearelastic.linearelastic)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial"]], "neohookeanwamaterial (class in edelweissfe.materials.neohooke.neohookepencegouformulationa)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial"]], "neohookeanwaplasticmaterial (class in edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial"]], "neohookeanwbmaterial (class in edelweissfe.materials.neohooke.neohookepencegouformulationb)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial"]], "neohookeanwbplasticmaterial (class in edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial"]], "neohookeanwcmaterial (class in edelweissfe.materials.neohooke.neohookepencegouformulationc)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial"]], "neohookeanwcplasticmaterial (class in edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial"]], "vonmisesmaterial (class in edelweissfe.materials.vonmises.vonmises)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial"]], "assigncurrentstatevars() (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial method)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial method)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.assignCurrentStateVars"]], "assigncurrentstatevars() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.assignCurrentStateVars"]], "computekirchhoff() (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial method)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.computeKirchhoff"]], "computekirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.computeKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial method)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.computePlaneKirchhoff"]], "computeplanekirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.computePlaneKirchhoff"]], "computeplanestress() (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial method)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.computePlaneStress"]], "computeplanestress() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.computePlaneStress"]], "computeplanestress() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.computePlaneStress"]], "computestress() (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial method)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.computeStress"]], "computestress() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.computeStress"]], "computestress() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.computeStress"]], "computestress2d() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.computeStress2D"]], "computeuniaxialkirchhoff() (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial method)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.computeUniaxialKirchhoff"]], "computeuniaxialkirchhoff() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.computeUniaxialKirchhoff"]], "computeuniaxialstress() (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial method)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.computeUniaxialStress"]], "computeuniaxialstress() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.computeUniaxialStress"]], "computeuniaxialstress() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.computeUniaxialStress"]], "elasticitymatrix() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.elasticityMatrix"]], "elasticitymatrix() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.elasticityMatrix"]], "elasticitymatrix2d() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.elasticityMatrix2D"]], "elasticitymatrixplanestress() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.elasticityMatrixPlaneStress"]], "getnumberofrequiredstatevars() (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial method)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial method)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.getNumberOfRequiredStateVars"]], "getnumberofrequiredstatevars() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.getNumberOfRequiredStateVars"]], "getresult() (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial method)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.getResult"]], "getresult() (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial method)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.getResult"]], "getresult() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.getResult"]], "getresult() (edelweissfe.materials.linearelastic.linearelastic.linearelasticmaterial method)": [[14, "edelweissfe.materials.linearelastic.linearelastic.LinearElasticMaterial.getResult"]], "getresult() (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.getResult"]], "getresult() (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.getResult"]], "getresult() (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial method)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.getResult"]], "getresult() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.getResult"]], "getresult() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.getResult"]], "getresult() (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial method)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.getResult"]], "getresult() (edelweissfe.materials.vonmises.vonmises.vonmisesmaterial method)": [[14, "edelweissfe.materials.vonmises.vonmises.VonMisesMaterial.getResult"]], "materialproperties (edelweissfe.materials.base.basehyperelasticmaterial.basehyperelasticmaterial property)": [[14, "edelweissfe.materials.base.basehyperelasticmaterial.BaseHyperElasticMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.base.basehypoelasticmaterial.basehypoelasticmaterial property)": [[14, "edelweissfe.materials.base.basehypoelasticmaterial.BaseHypoElasticMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial property)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.neohooke.neohookepencegouformulationa.neohookeanwamaterial property)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationa.NeoHookeanWaMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.neohooke.neohookepencegouformulationb.neohookeanwbmaterial property)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationb.NeoHookeanWbMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.neohooke.neohookepencegouformulationc.neohookeanwcmaterial property)": [[14, "edelweissfe.materials.neohooke.neohookepencegouformulationc.NeoHookeanWcMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.neohookeanwaplasticmaterial property)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationaplastic.NeoHookeanWaPlasticMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.neohookeanwbplasticmaterial property)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationbplastic.NeoHookeanWbPlasticMaterial.materialProperties"]], "materialproperties (edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.neohookeanwcplasticmaterial property)": [[14, "edelweissfe.materials.neohookeplastic.neohookepencegouformulationcplastic.NeoHookeanWcPlasticMaterial.materialProperties"]], "setenergyfunction() (edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.hyperelasticadvancedi2extendedmaterial method)": [[14, "edelweissfe.materials.hyperelasticadvanced.hyperelasticadvancedi2extended.HyperelasticAdvancedI2ExtendedMaterial.setEnergyFunction"]], "edelweissfe.generators.abqmodelconstructor": [[15, "module-edelweissfe.generators.abqmodelconstructor"]], "femodel (class in edelweissfe.models.femodel)": [[16, "edelweissfe.models.femodel.FEModel"]], "additionalparameters (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.additionalParameters"]], "advancetotime() (edelweissfe.models.femodel.femodel method)": [[16, "edelweissfe.models.femodel.FEModel.advanceToTime"]], "analyticalfields (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.analyticalFields"]], "constraints (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.constraints"]], "domainsize (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.domainSize"]], "edelweissfe.models.femodel": [[16, "module-edelweissfe.models.femodel"]], "elementsets (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.elementSets"]], "elements (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.elements"]], "materials (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.materials"]], "nodefields (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.nodeFields"]], "nodesets (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.nodeSets"]], "nodes (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.nodes"]], "prepareyourself() (edelweissfe.models.femodel.femodel method)": [[16, "edelweissfe.models.femodel.FEModel.prepareYourself"]], "readrestart() (edelweissfe.models.femodel.femodel method)": [[16, "edelweissfe.models.femodel.FEModel.readRestart"]], "scalarvariables (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.scalarVariables"]], "sections (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.sections"]], "surfaces (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.surfaces"]], "time (edelweissfe.models.femodel.femodel attribute)": [[16, "edelweissfe.models.femodel.FEModel.time"]], "writerestart() (edelweissfe.models.femodel.femodel method)": [[16, "edelweissfe.models.femodel.FEModel.writeRestart"]], "edelweissfe.config.outputmanagers": [[17, "module-edelweissfe.config.outputmanagers"]], "edelweissfe.outputmanagers.computetimemonitor": [[17, "module-edelweissfe.outputmanagers.computetimemonitor"]], "edelweissfe.outputmanagers.conditionalstop": [[17, "module-edelweissfe.outputmanagers.conditionalstop"]], "edelweissfe.outputmanagers.ensight": [[17, "module-edelweissfe.outputmanagers.ensight"]], "edelweissfe.outputmanagers.fractureenergyintegrator": [[17, "module-edelweissfe.outputmanagers.fractureenergyintegrator"]], "edelweissfe.outputmanagers.meshdatatofile": [[17, "module-edelweissfe.outputmanagers.meshdatatofile"]], "edelweissfe.outputmanagers.meshplot": [[17, "module-edelweissfe.outputmanagers.meshplot"]], "edelweissfe.outputmanagers.monitor": [[17, "module-edelweissfe.outputmanagers.monitor"]], "edelweissfe.outputmanagers.plotalongpath": [[17, "module-edelweissfe.outputmanagers.plotalongpath"]], "edelweissfe.outputmanagers.statusfile": [[17, "module-edelweissfe.outputmanagers.statusfile"]], "edelweissfe.config.phenomena": [[19, "module-edelweissfe.config.phenomena"]], "plotter (class in edelweissfe.utils.plotter)": [[20, "edelweissfe.utils.plotter.Plotter"]], "configureplotter() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.configurePlotter"]], "edelweissfe.utils.plotter": [[20, "module-edelweissfe.utils.plotter"]], "exportfigure() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.exportFigure"]], "exportplots() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.exportPlots"]], "finalize() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.finalize"]], "getax() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.getAx"]], "getfig() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.getFig"]], "plotxydata() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.plotXYData"]], "show() (edelweissfe.utils.plotter.plotter method)": [[20, "edelweissfe.utils.plotter.Plotter.show"]], "node (class in edelweissfe.points.node)": [[21, "edelweissfe.points.node.Node"]], "edelweissfe.points.node": [[21, "module-edelweissfe.points.node"]], "edelweissfe.config.sections": [[22, "module-edelweissfe.config.sections"]], "elementset (class in edelweissfe.sets.elementset)": [[23, "edelweissfe.sets.elementset.ElementSet"]], "immutableorderedset (class in edelweissfe.sets.orderedset)": [[23, "edelweissfe.sets.orderedset.ImmutableOrderedSet"]], "nodeset (class in edelweissfe.sets.nodeset)": [[23, "edelweissfe.sets.nodeset.NodeSet"]], "orderedset (class in edelweissfe.sets.orderedset)": [[23, "edelweissfe.sets.orderedset.OrderedSet"]], "add() (edelweissfe.sets.orderedset.immutableorderedset method)": [[23, "edelweissfe.sets.orderedset.ImmutableOrderedSet.add"]], "add() (edelweissfe.sets.orderedset.orderedset method)": [[23, "edelweissfe.sets.orderedset.OrderedSet.add"]], "checkobjecttype() (edelweissfe.sets.orderedset.orderedset method)": [[23, "edelweissfe.sets.orderedset.OrderedSet.checkObjectType"]], "edelweissfe.sets.elementset": [[23, "module-edelweissfe.sets.elementset"]], "edelweissfe.sets.nodeset": [[23, "module-edelweissfe.sets.nodeset"]], "edelweissfe.sets.orderedset": [[23, "module-edelweissfe.sets.orderedset"]], "forceiter() (edelweissfe.sets.orderedset.orderedset method)": [[23, "edelweissfe.sets.orderedset.OrderedSet.forceIter"]], "nist (class in edelweissfe.solvers.nonlinearimplicitstatic)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST"]], "nistparclength (class in edelweissfe.solvers.nonlinearimplicitstaticparallelarclength)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength"]], "nistparallel (class in edelweissfe.solvers.nonlinearimplicitstaticparallelmk2)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel"]], "applydirichlet() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyDirichlet"]], "applydirichletk() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyDirichletK"]], "applydirichletk() (edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.nistparallel method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel.applyDirichletK"]], "applystepactionsatincrementstart() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyStepActionsAtIncrementStart"]], "applystepactionsatstepend() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyStepActionsAtStepEnd"]], "applystepactionsatstepend() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.applyStepActionsAtStepEnd"]], "applystepactionsatstepstart() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyStepActionsAtStepStart"]], "assembleconstraints() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.assembleConstraints"]], "assembleloads() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.assembleLoads"]], "assemblestiffnesscsr() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.assembleStiffnessCSR"]], "checkconvergence() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.checkConvergence"]], "checkdivergingsolution() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.checkDivergingSolution"]], "computebodyforces() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeBodyForces"]], "computedistributedloads() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeDistributedLoads"]], "computeelements() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeElements"]], "computeelements() (edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.nistparallel method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel.computeElements"]], "computespatialaveragedfluxes() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeSpatialAveragedFluxes"]], "edelweissfe.config.solvers": [[24, "module-edelweissfe.config.solvers"]], "edelweissfe.solvers.nonlinearimplicitstatic": [[24, "module-edelweissfe.solvers.nonlinearimplicitstatic"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength": [[24, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelarclength"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2": [[24, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelmk2"]], "extrapolatelastincrement() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.extrapolateLastIncrement"]], "extrapolatelastincrement() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.extrapolateLastIncrement"]], "getsolverbyname() (in module edelweissfe.config.solvers)": [[24, "edelweissfe.config.solvers.getSolverByName"]], "linearsolve() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.linearSolve"]], "printresidualoutliernodes() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.printResidualOutlierNodes"]], "solveincrement() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.solveIncrement"]], "solveincrement() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.solveIncrement"]], "solvestep() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[24, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.solveStep"]], "solvestep() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.solveStep"]], "solvestep() (edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.nistparallel method)": [[24, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel.solveStep"]], "stepactionbase (class in edelweissfe.stepactions.base.stepactionbase)": [[25, "edelweissfe.stepactions.base.stepactionbase.StepActionBase"]], "applyatincrementstart() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[25, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.applyAtIncrementStart"]], "applyatstepend() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[25, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.applyAtStepEnd"]], "applyatstepstart() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[25, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.applyAtStepStart"]], "edelweissfe.config.stepactions": [[25, "module-edelweissfe.config.stepactions"]], "edelweissfe.stepactions.base.stepactionbase": [[25, "module-edelweissfe.stepactions.base.stepactionbase"]], "edelweissfe.stepactions.bodyforce": [[25, "module-edelweissfe.stepactions.bodyforce"]], "edelweissfe.stepactions.dirichlet": [[25, "module-edelweissfe.stepactions.dirichlet"]], "edelweissfe.stepactions.distributedload": [[25, "module-edelweissfe.stepactions.distributedload"]], "edelweissfe.stepactions.geostatic": [[25, "module-edelweissfe.stepactions.geostatic"]], "edelweissfe.stepactions.indirectcontractioncontrol": [[25, "module-edelweissfe.stepactions.indirectcontractioncontrol"]], "edelweissfe.stepactions.indirectcontrol": [[25, "module-edelweissfe.stepactions.indirectcontrol"]], "edelweissfe.stepactions.initializematerial": [[25, "module-edelweissfe.stepactions.initializematerial"]], "edelweissfe.stepactions.modelupdate": [[25, "module-edelweissfe.stepactions.modelupdate"]], "edelweissfe.stepactions.nodeforces": [[25, "module-edelweissfe.stepactions.nodeforces"]], "edelweissfe.stepactions.setfield": [[25, "module-edelweissfe.stepactions.setfield"]], "edelweissfe.stepactions.setinitialconditions": [[25, "module-edelweissfe.stepactions.setinitialconditions"]], "updatestepaction() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[25, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.updateStepAction"]], "adaptivestep (class in edelweissfe.steps.adaptivestep)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep"]], "stepbase (class in edelweissfe.steps.base.stepbase)": [[26, "edelweissfe.steps.base.stepbase.StepBase"]], "criticaliter (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.criticalIter"]], "cutbackfactor (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.cutbackFactor"]], "edelweissfe.steps.adaptivestep": [[26, "module-edelweissfe.steps.adaptivestep"]], "edelweissfe.steps.base.stepbase": [[26, "module-edelweissfe.steps.base.stepbase"]], "length (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.length"]], "maxgrowiter (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxGrowIter"]], "maxincrementsize (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxIncrementSize"]], "maxiter (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxIter"]], "maxnumberincrements (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxNumberIncrements"]], "minincrementsize (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.minIncrementSize"]], "number (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.number"]], "solve() (edelweissfe.steps.adaptivestep.adaptivestep method)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.solve"]], "solve() (edelweissfe.steps.base.stepbase.stepbase method)": [[26, "edelweissfe.steps.base.stepbase.StepBase.solve"]], "startincrementsize (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[26, "edelweissfe.steps.adaptivestep.AdaptiveStep.startIncrementSize"]], "edelweissfe.utils.inputfileparser": [[27, "module-edelweissfe.utils.inputfileparser"]], "parseinputfile() (in module edelweissfe.utils.inputfileparser)": [[27, "edelweissfe.utils.inputfileparser.parseInputFile"]], "printkeywords() (in module edelweissfe.utils.inputfileparser)": [[27, "edelweissfe.utils.inputfileparser.printKeywords"]], "printkeywordsrst() (in module edelweissfe.utils.inputfileparser)": [[27, "edelweissfe.utils.inputfileparser.printKeywordsRST"]], "adaptivetimestepper (class in edelweissfe.timesteppers.adaptivetimestepper)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper"]], "csrgenerator (class in edelweissfe.numerics.csrgenerator)": [[28, "edelweissfe.numerics.csrgenerator.CSRGenerator"]], "elementresultcollector (class in edelweissfe.utils.elementresultcollector)": [[28, "edelweissfe.utils.elementresultcollector.ElementResultCollector"]], "discardandchangeincrement() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.discardAndChangeIncrement"]], "generatetimestep() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.generateTimeStep"]], "getcurrentresults() (edelweissfe.utils.elementresultcollector.elementresultcollector method)": [[28, "edelweissfe.utils.elementresultcollector.ElementResultCollector.getCurrentResults"]], "preventincrementincrease() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.preventIncrementIncrease"]], "readrestart() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.readRestart"]], "reducenextincrement() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.reduceNextIncrement"]], "update() (edelweissfe.utils.elementresultcollector.elementresultcollector method)": [[28, "edelweissfe.utils.elementresultcollector.ElementResultCollector.update"]], "updatecsr() (edelweissfe.numerics.csrgenerator.csrgenerator method)": [[28, "edelweissfe.numerics.csrgenerator.CSRGenerator.updateCSR"]], "writerestart() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[28, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.writeRestart"]], "fieldvariable (class in edelweissfe.variables.fieldvariable)": [[29, "edelweissfe.variables.fieldvariable.FieldVariable"]], "scalarvariable (class in edelweissfe.variables.scalarvariable)": [[29, "edelweissfe.variables.scalarvariable.ScalarVariable"]], "edelweissfe.variables.fieldvariable": [[29, "module-edelweissfe.variables.fieldvariable"]], "edelweissfe.variables.scalarvariable": [[29, "module-edelweissfe.variables.scalarvariable"]]}})