Search.setIndex({"docnames": ["contributors", "documentation/analyticalfields", "documentation/constraints", "documentation/dofmanager", "documentation/elements", "documentation/exceptions", "documentation/fieldoutputmanager", "documentation/fields", "documentation/generators", "documentation/index", "documentation/jobs", "documentation/journal", "documentation/keywords", "documentation/materials", "documentation/mesh", "documentation/models", "documentation/output", "documentation/parallelization", "documentation/phenomena", "documentation/plotter", "documentation/points", "documentation/sections", "documentation/sets", "documentation/solvers", "documentation/stepactions", "documentation/steps", "documentation/syntax", "documentation/utils", "documentation/variables", "features", "index", "installation", "prerequisites", "publications"], "filenames": ["contributors.rst", "documentation/analyticalfields.rst", "documentation/constraints.rst", "documentation/dofmanager.rst", "documentation/elements.rst", "documentation/exceptions.rst", "documentation/fieldoutputmanager.rst", "documentation/fields.rst", "documentation/generators.rst", "documentation/index.rst", "documentation/jobs.rst", "documentation/journal.rst", "documentation/keywords.rst", "documentation/materials.rst", "documentation/mesh.rst", "documentation/models.rst", "documentation/output.rst", "documentation/parallelization.rst", "documentation/phenomena.rst", "documentation/plotter.rst", "documentation/points.rst", "documentation/sections.rst", "documentation/sets.rst", "documentation/solvers.rst", "documentation/stepactions.rst", "documentation/steps.rst", "documentation/syntax.rst", "documentation/utils.rst", "documentation/variables.rst", "features.rst", "index.rst", "installation.rst", "prerequisites.rst", "publications.rst"], "titles": ["Contributors", "Analytical fields", "Constraints", "DOF manager", "Elements", "Exceptions", "Field outputs", "Fields", "Generators", "Documentation", "Inputfile driven simulations", "Journal", "&lt;no title&gt;", "Materials", "Creating finite element meshes", "Models", "Outputmanagers", "Parallelization", "Physical phenomena", "Plotting", "Points", "Sections", "Sets", "Solvers", "Step actions", "Steps", "Input file syntax", "Utilities", "Variables", "Features", "Welcome to EdelweissFE", "Installation", "Prerequisites", "Publications"], "terms": {"edelweissf": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33], "wa": [0, 2, 23], "initi": [0, 2, 4, 9, 15, 25, 27], "matthia": 0, "neuner": [0, 33], "2017": 0, "In": [0, 4, 24, 26, 32], "cours": 0, "sever": [0, 27, 31], "year": 0, "develop": [0, 4, 30], "follow": [0, 4, 33], "peopl": 0, "contribut": [0, 2], "significantli": 0, "alphabet": 0, "order": [0, 2, 4, 16, 18, 22, 25], "nasser": 0, "alkmim": 0, "innsbruck": 0, "univers": 0, "alexand": 0, "dummer": [0, 33], "paul": 0, "hofer": 0, "thoma": 0, "mader": 0, "magdalena": [0, 16], "schreter": [0, 33], "valu": [1, 3, 4, 6, 7, 8, 9, 12, 16, 25, 26, 28], "spatial": [1, 4, 5, 7, 8, 10, 12, 15, 20, 23, 26, 28], "coordin": [1, 4, 8, 14, 20, 24, 30], "e": [1, 2, 4, 6, 7, 8, 14, 16, 17, 18, 24, 27, 28, 30], "g": [1, 2, 4, 6, 7, 16, 17, 24, 27, 28, 30, 33], "vari": 1, "materi": [1, 2, 4, 6, 8, 9, 14, 15, 16, 21, 30, 33], "properti": [1, 2, 4, 12, 13, 21, 24, 26], "relev": [1, 4, 6, 8, 10, 11, 14, 18, 19, 20, 21, 22, 24, 26, 28], "modul": [1, 2, 3, 4, 5, 6, 8, 10, 11, 14, 16, 18, 19, 20, 21, 22, 24, 27, 28, 30, 31], "analyticalfield": [1, 15, 24], "us": [1, 2, 4, 5, 6, 9, 11, 13, 14, 16, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33], "sclar": 1, "descript": [1, 2, 6, 8, 12, 13, 16, 19, 23, 24, 26], "f": [1, 2, 4, 6, 8, 14, 16, 23, 24, 30], "x": [1, 2, 4, 6, 8, 14, 16, 19, 23, 24, 30], "y": [1, 6, 8, 16, 19, 24], "z": [1, 8, 12, 26], "python": [1, 3, 9, 17, 26, 29, 30, 31, 32], "variabl": [1, 2, 7, 8, 9, 15, 16], "dictionari": [1, 2, 3, 6, 10, 19, 23, 24, 25, 26], "contain": [1, 2, 3, 4, 5, 6, 10, 18, 22, 23, 24, 25, 27, 31], "model": [1, 2, 6, 9, 10, 16, 23, 25, 30, 31, 33], "can": [1, 2, 4, 6, 11, 16, 19, 24, 26, 27, 30, 31], "access": [1, 3, 6, 7, 16, 19, 24, 32], "exampl": [1, 2, 4, 6, 7, 8, 14, 16, 21, 24, 31], "testfil": [1, 2, 4, 6, 8, 14, 16, 24, 30, 31], "analyticalfieldsscalarexpress": 1, "test": [1, 2, 3, 4, 8, 14, 16, 24, 30, 31], "inp": [1, 2, 4, 6, 8, 14, 16, 17, 24, 30, 31], "name": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 26, 27, 30], "linearelast": [1, 2, 4, 8, 14, 24, 30], "id": [1, 2, 4, 6, 8, 12, 13, 14, 16, 19, 24, 26, 28, 30], "line": [1, 8, 9, 11, 12, 24, 26], "isotrop": [1, 2, 4, 8, 14, 30], "nu": [1, 2, 4, 8, 14, 24, 30], "1": [1, 2, 3, 4, 6, 7, 8, 11, 12, 14, 16, 19, 21, 24, 26, 30, 31, 33], "8e4": [1, 4, 8, 14, 30], "0": [1, 2, 4, 6, 7, 8, 12, 14, 16, 19, 21, 24, 26, 30, 31, 32], "22": [1, 4, 8, 14, 30], "job": [1, 2, 4, 6, 8, 10, 14, 16, 19, 23, 24, 25, 30], "domain": [1, 2, 3, 4, 5, 6, 8, 12, 14, 16, 21, 24, 26, 30], "3d": [1, 4, 9, 12, 14, 24, 26, 27, 30, 33], "solver": [1, 2, 4, 6, 8, 9, 10, 12, 14, 16, 17, 24, 25, 26, 29, 30], "nistparallel": [1, 2, 8, 17, 23], "thesolv": [1, 2, 4, 8, 14, 16, 24, 30], "modelgener": [1, 2, 6, 8, 16, 24], "gener": [1, 2, 4, 6, 9, 14, 24, 27], "boxgen": [1, 9, 24], "gen": [1, 2, 6, 8, 16, 24], "x0": [1, 6, 8, 16, 24], "y0": [1, 6, 8, 16, 24], "z0": [1, 8], "nx": [1, 2, 6, 8, 16, 24], "5": [1, 2, 8, 14, 16, 24, 30, 31, 33], "ny": [1, 2, 6, 8, 16, 24], "nz": [1, 8, 24], "10": [1, 2, 4, 6, 8, 14, 24, 30, 31, 33], "lx": [1, 8, 24], "ly": [1, 8, 24], "lz": [1, 8, 24], "2": [1, 2, 4, 6, 7, 8, 14, 16, 19, 24, 30, 31, 33], "eltyp": [1, 2, 4, 6, 8, 16, 24], "c3d8": [1, 4, 8, 14, 30], "section": [1, 2, 4, 6, 8, 9, 13, 14, 15, 16, 24, 30], "section1": [1, 2, 4, 6, 8, 14, 16, 24, 30], "type": [1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30], "solid": [1, 2, 4, 8, 14, 24, 30, 33], "all": [1, 2, 4, 6, 7, 8, 10, 11, 14, 16, 19, 21, 23, 24, 27, 30, 31], "fieldoutput": [1, 2, 4, 6, 8, 10, 14, 16, 24, 30], "creat": [1, 2, 3, 4, 6, 8, 9, 15, 16, 19, 24, 26, 30, 31], "pernod": [1, 2, 6, 8, 14, 16, 24, 30], "elset": [1, 2, 4, 6, 8, 14, 16, 24, 30], "displac": [1, 2, 6, 7, 8, 9, 14, 16, 30], "result": [1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 24, 25, 26, 28, 30, 33], "u": [1, 2, 4, 6, 7, 8, 14, 16, 23, 24, 28, 30], "perel": [1, 2, 4, 6, 8, 14, 16, 24, 30], "strain": [1, 2, 4, 6, 8, 14, 16, 24, 30, 33], "quadraturepoint": [1, 2, 4, 6, 8, 14, 16, 24, 27, 30], "8": [1, 2, 4, 6, 8, 14, 16, 24, 30, 31, 33], "np": [1, 2, 4, 6, 7, 8, 14, 24, 27, 30], "mean": [1, 2, 3, 6, 8, 13, 14, 16, 19, 24, 30], "axi": [1, 2, 6, 8, 14, 16, 19, 24, 30], "stress": [1, 2, 4, 6, 8, 9, 14, 16, 30], "output": [1, 2, 4, 8, 9, 10, 11, 14, 16, 19, 23, 24, 29, 30], "ensight": [1, 2, 4, 6, 8, 9, 14, 24, 29, 30], "configur": [1, 2, 6, 8, 14, 16, 19, 24, 30], "overwrit": [1, 2, 6, 8, 14, 16, 24, 30], "ye": [1, 2, 6, 8, 14, 16, 24, 30], "rdmf": 1, "gaussian": 1, "varianc": 1, "03": 1, "lengthscal": 1, "4": [1, 2, 4, 6, 8, 14, 19, 30, 31, 33], "seed": 1, "exprf": 1, "co": 1, "sin": [1, 8, 24], "evaluateatcoordin": 1, "step": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 16, 23, 30], "maxinc": [1, 2, 4, 6, 8, 12, 14, 16, 24, 26, 30], "1e0": [1, 2, 4, 8, 14, 30], "mininc": [1, 2, 4, 6, 8, 12, 14, 16, 24, 26, 30], "maxnuminc": [1, 2, 4, 6, 8, 12, 14, 16, 24, 26, 30], "100": [1, 2, 4, 6, 8, 11, 14, 16, 24, 30], "maxit": [1, 2, 4, 6, 8, 12, 14, 16, 23, 24, 25, 26, 30], "25": [1, 2, 4, 6, 8, 14, 16, 24, 30], "steplength": [1, 2, 4, 6, 8, 12, 14, 16, 24, 26, 27, 30], "dirichlet": [1, 2, 4, 6, 8, 9, 10, 14, 16, 23, 30], "all12": 1, "nset": [1, 2, 4, 6, 8, 14, 16, 24, 30], "all3": 1, "3": [1, 2, 4, 7, 8, 11, 14, 16, 19, 24, 30, 31, 32, 33], "gstool": [1, 32], "librari": [1, 4, 12, 26, 30, 31, 32], "default": [1, 6, 7, 8, 12, 14, 16, 18, 19, 24, 26, 30, 31, 32], "analyticalfieldsrandomscalar": 1, "vonmis": [1, 8, 16, 24], "mat": [1, 8, 16, 24], "210000": [1, 8, 16, 24], "550": [1, 8, 16, 24], "1000": [1, 2, 4, 6, 8, 16, 24], "200": [1, 8, 16, 24], "1400": [1, 8, 16, 24], "6": [1, 2, 4, 14, 24, 30, 31, 33], "30": [1, 24], "50": [1, 2, 6, 8, 16, 24], "kappa": [1, 16], "kappamean": 1, "monitor": [1, 2, 4, 6, 8, 9, 14, 24, 30], "01": [1, 24], "000001": [1, 6], "setfield": [1, 9], "sf": 1, "x0u": [1, 8], "gen_left": [1, 2, 8, 24], "y0u": [1, 8], "gen_bottom": [1, 2, 6, 8, 16, 24], "z0u": [1, 8], "gen_back": [1, 8], "1e": [1, 2, 4, 6, 8, 16, 24], "y1u": [1, 8], "gen_top": [1, 2, 6, 8, 16, 24], "subclass": [1, 2, 4, 24], "from": [1, 2, 3, 4, 7, 8, 9, 16, 23, 24, 31], "base": [1, 3, 4, 6, 9, 10, 22, 23, 24, 25, 27, 31], "class": [1, 2, 3, 4, 6, 7, 11, 15, 16, 19, 20, 22, 23, 24, 25, 27, 28], "analyticalfieldbas": 1, "data": [1, 3, 7, 9, 19], "sourc": [1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31], "The": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 33], "paramet": [1, 2, 3, 4, 5, 6, 7, 10, 11, 15, 19, 20, 22, 23, 24, 25, 27], "str": [1, 2, 3, 4, 6, 7, 11, 19, 22, 23, 24, 26], "list": [1, 2, 3, 4, 7, 11, 12, 19, 22, 23, 24, 25, 26, 27], "input": [1, 2, 5, 9, 10, 12, 17, 24], "file": [1, 5, 6, 8, 9, 10, 11, 17, 19, 24, 31, 32], "femodel": [1, 2, 6, 9, 23, 24, 25], "tree": [1, 2, 6, 8, 10, 15, 23, 24], "method": [1, 2, 3, 4, 6, 7, 8, 11, 15, 19, 22, 23, 24, 25, 27, 29, 30, 33], "abstract": [1, 2, 4], "evalu": [1, 4, 5, 23, 33], "ndarrai": [1, 2, 3, 4, 6, 7, 19, 20, 23, 24, 27], "return": [1, 2, 3, 4, 6, 7, 10, 19, 22, 23, 25, 26, 27], "float": [1, 4, 12, 13, 15, 19, 23, 26, 27], "ar": [2, 4, 6, 7, 8, 10, 12, 13, 14, 16, 22, 24, 25, 26, 27, 29, 30, 31, 32], "defin": [2, 4, 6, 9, 10, 13, 16, 24, 27, 31], "global": [2, 3, 16, 19, 23], "mai": [2, 4, 19, 20, 24, 25, 27, 28, 33], "introduc": 2, "addit": [2, 15, 19, 25, 32], "scalar": [2, 15, 24, 28], "equat": [2, 3, 23], "system": [2, 3, 23, 27, 29, 30, 32], "syntax": [2, 9, 14, 16], "myrigigbodi": 2, "right": [2, 8, 23, 24], "referencepoint": 2, "rbottom": 2, "A": [2, 3, 4, 6, 9, 10, 13, 16, 19, 20, 22, 23, 24, 27, 28, 33], "lagrangian": [2, 28], "multipli": [2, 28], "node": [2, 3, 4, 6, 9, 14, 15, 16, 20, 22, 23, 28, 30], "set": [2, 4, 7, 8, 9, 11, 14, 15, 19, 21, 23, 30], "field": [2, 3, 4, 8, 9, 10, 14, 15, 16, 18, 20, 23, 28, 30], "thi": [2, 3, 4, 5, 6, 7, 8, 10, 11, 15, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 31], "act": [2, 4, 23], "compon": [2, 4, 24], "equalvaluelagrangianconstraint": 2, "planerectquad": [2, 6, 9, 16, 24], "cps8r": [2, 8], "20": [2, 6, 8, 16, 24], "l": [2, 6, 8, 16, 24, 31], "h": [2, 6, 8, 16, 24], "myconstraint": 2, "30000": [2, 6, 8, 24], "15": [2, 6, 8, 14, 24, 30], "thick": [2, 6, 8, 12, 16, 21, 24, 26], "plane": [2, 6, 9, 16, 21, 24], "myjob": [2, 8, 16, 24], "nist": [2, 4, 6, 8, 9, 12, 14, 16, 24, 26, 30], "rf": [2, 6, 8, 16, 24], "p": [2, 4, 6, 7, 8, 14, 16, 23, 24, 30, 31, 33], "themonitor": [2, 8], "sum": [2, 6, 8, 14, 16, 24, 30], "ensightexport": [2, 8, 24], "categori": [2, 6, 8, 12, 16, 24, 26], "nistsolv": [2, 6, 8, 16, 24], "extrapol": [2, 6, 8, 16, 23, 24], "bottom": [2, 6, 8, 16, 24], "load": [2, 4, 8, 9, 14, 16, 23, 30], "gen_righttop": 2, "numer": [2, 3, 27], "equalvaluepenaltyconstraint": 2, "1e8": 2, "slave": 2, "which": [2, 3, 4, 6, 7, 10, 11, 13, 16, 19, 23, 24, 25, 27, 29, 30, 31], "i": [2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32], "refer": [2, 4, 23, 31], "point": [2, 3, 4, 9, 24, 27, 31], "master": 2, "linearizedrigidbodyconstraint": 2, "cps4": [2, 6, 8, 16, 24], "le": [2, 24], "cps4job": [2, 6, 8, 16, 24], "rb1": 2, "gen_right": [2, 24], "leftcorn": 2, "gen_leftbottom": [2, 6, 16], "rotrp": 2, "rotat": 2, "05": [2, 24], "movrp": 2, "00": [2, 24], "rigidbodyconstraintlargedeformations3d": 2, "includ": [2, 24, 31, 32], "mesh": [2, 9, 24], "stvenantkirchhoffisotrop": 2, "c3d8job": [2, 24], "2e": 2, "left": [2, 8, 14, 24, 30], "141": 2, "cvector": 2, "project": 2, "vector": [2, 3, 4, 6, 13, 23, 24, 27], "cmod": 2, "constrainednset": 2, "determin": [2, 9, 17], "loadnset": 2, "applic": [2, 24], "loadvector": 2, "correct": [2, 15, 23], "dimens": [2, 3, 7, 10, 15], "tensori": [2, 18], "length": [2, 3, 4, 8, 9, 25, 27], "penaltystiff": 2, "stiff": [2, 4, 23], "formul": [2, 4, 30], "offset": 2, "comput": [2, 4, 5, 6, 9, 17, 23, 24, 25, 33], "normalizeload": 2, "normal": [2, 6, 16], "appli": [2, 6, 14, 16, 23, 24, 30, 33], "forc": [2, 4, 9, 16, 23, 31], "per": [2, 4, 9, 23], "wrt": 2, "number": [2, 3, 4, 5, 8, 12, 15, 16, 17, 20, 23, 25, 26, 27], "irrespect": 2, "total": [2, 3, 4, 11, 23, 27], "penaltybasedindirectcontrol": 2, "mymateri": [2, 4, 8, 14, 21, 30], "cpe4": [2, 4, 24], "disp_top": 2, "dispmon": 2, "measurement_nod": 2, "gen_lefttop": 2, "pc1": 2, "modelupd": [2, 9], "updat": [2, 3, 4, 6, 9, 25, 27], "activ": [2, 3, 7, 23, 24, 26, 31], "fals": [2, 6, 8, 10, 12, 16, 19, 26], "fix_bottom": 2, "true": [2, 4, 6, 8, 9, 11, 12, 19, 23, 24, 26], "constraintbas": [2, 23], "If": [2, 4, 6, 7, 16, 17, 18, 24, 26, 31], "requir": [2, 4, 5, 23, 30, 31, 32], "demand": 2, "getnumberofadditionalneededscalarvari": 2, "assignadditionalscalarvari": 2, "call": [2, 23, 24, 27, 30], "begin": [2, 24], "an": [2, 3, 6, 7, 8, 11, 14, 16, 20, 22, 23, 24, 27, 29, 30, 31, 33], "analysi": [2, 6, 10, 16], "expect": [2, 4], "layout": [2, 3, 4], "extern": [2, 4, 10, 23], "pext": [2, 4, 23], "form": [2, 4, 10, 25], "dof": [2, 4, 9], "n": [2, 4, 8, 16], "j": [2, 3, 33], "dict": [2, 3, 6, 10, 19, 23, 24, 25], "attribut": [2, 3, 4, 27], "fieldsonnod": 2, "ndof": [2, 3, 4], "degre": [2, 3, 4, 15, 24, 30], "freedom": [2, 3, 4, 24, 30], "associ": [2, 3, 7, 10, 12, 20, 26, 28], "applyconstraint": 2, "u_np": [2, 23], "du": [2, 4, 23], "v": [2, 3, 8, 27], "timestep": [2, 23, 24, 27], "add": [2, 6, 7, 22, 31], "matrix": [2, 3, 4, 9, 23], "current": [2, 3, 4, 6, 15, 19, 22, 24, 25, 27, 28], "solut": [2, 4, 5, 6, 23, 24, 31], "increment": [2, 4, 5, 6, 9, 12, 23, 24, 25, 26, 27], "sinc": [2, 22], "last": [2, 4, 6, 23], "time": [2, 4, 5, 6, 9, 12, 15, 23, 24, 25, 26, 30], "k": [2, 4, 23, 33], "dt": [2, 4, 23], "scalarvari": [2, 3, 9, 15, 28], "assign": [2, 4, 12, 13, 26], "need": [2, 4, 27], "int": [2, 3, 4, 7, 11, 15, 19, 20, 23, 25, 27], "dofmanag": [3, 9, 24], "import": [3, 8, 11, 16, 22, 31], "describ": [3, 4, 16], "spars": [3, 9, 23], "nodefield": [3, 6, 9, 15, 28], "element": [3, 6, 8, 9, 10, 13, 16, 17, 21, 22, 23, 29, 30, 31], "constraint": [3, 9, 15, 22, 23, 24], "nodeset": [3, 7, 8, 9, 15, 16, 22, 24], "analyz": 3, "collect": [3, 5, 10, 25, 27], "inform": [3, 6, 10, 11, 15, 23, 24, 25], "about": [3, 24, 25], "necessari": [3, 31], "structur": [3, 8, 33], "handl": [3, 12, 26], "each": [3, 6, 8, 10, 16, 23], "count": 3, "accumul": [3, 23], "abaqu": [3, 12, 14, 16, 23, 26], "like": [3, 12, 14, 26], "converg": [3, 23, 24, 27], "suppli": 3, "framework": [3, 30], "dofvector": [3, 9, 23], "vijsystemmatric": 3, "should": [3, 4, 6, 7, 16, 18, 23, 27, 31], "repres": [3, 4, 7, 20], "map": 3, "respect": [3, 10, 22, 31], "indic": [3, 28], "constructdofvector": 3, "construct": [3, 23], "size": [3, 5, 12, 23, 26, 27, 30], "ha": [3, 4, 20, 22, 25], "knowledg": 3, "locat": [3, 8, 19, 24, 28], "entiti": [3, 6, 20], "constructvijsystemmatrix": 3, "vij": [3, 23], "coo": [3, 9], "object": [3, 6, 22, 24, 25], "also": [3, 6, 14, 16, 19, 23, 30], "vijsystemmatrix": [3, 9, 23], "getnodeforindexindofvector": 3, "index": [3, 30], "find": [3, 9], "given": [3, 4, 7, 8, 27], "equuat": 3, "attach": [3, 4], "writedofvectortonodefield": 3, "resultnam": [3, 6], "write": [3, 9, 11], "entir": 3, "get": [3, 4, 6, 7, 19, 23, 27, 31], "entri": [3, 4, 6, 7, 26], "held": [3, 24], "writenodefieldtodofvector": 3, "hold": [3, 4, 25, 28], "entitiesindofvector": 3, "within": [3, 5, 24, 31], "oper": [3, 6], "allow": [3, 4, 7, 22, 23, 25, 27, 28], "non": [3, 29], "contigouo": 3, "read": 3, "entitiesinvij": 3, "entitii": 3, "t": [3, 6, 8, 14, 16, 19, 24, 30], "view": [3, 4, 7], "transpos": 3, "arrai": [3, 4, 6, 12, 13, 26, 27], "memori": 3, "some": [3, 29], "other": [3, 4, 7], "ctype": 3, "simplifi": 3, "interact": 3, "buffer": 3, "start": [3, 6, 12, 23, 24, 25, 26, 27], "": [3, 4, 6, 16, 33], "dtype": 3, "flag": 3, "flat": 3, "d": 3, "iter": [3, 4, 5, 12, 22, 23, 25, 26, 27, 29], "over": [3, 23], "imag": 3, "imaginari": 3, "part": [3, 16, 27], "items": 3, "one": [3, 4, 12, 26, 27], "byte": 3, "nbyte": 3, "consum": [3, 30], "ndim": 3, "real": 3, "shape": [3, 4, 27], "tupl": [3, 10, 23], "stride": 3, "when": [3, 5, 23, 24], "travers": 3, "dot": 3, "tripl": 3, "format": [3, 4, 9, 11, 19, 23, 26, 29], "member": 3, "directli": [3, 4, 8, 14, 27, 28, 30], "contigu": 3, "via": [3, 6, 11, 19, 24, 29, 32], "config": [4, 8, 18, 21, 23], "elementlibrari": [4, 12, 26], "support": [4, 22, 24, 28], "finit": [4, 9, 10, 17, 23, 29, 30, 31, 33], "futur": 4, "ad": [4, 18, 27], "here": [4, 18], "el_label": 4, "node1": 4, "node2": 4, "node3": 4, "node4": 4, "getelementclass": [4, 9], "none": [4, 7, 11, 12, 19, 23, 26], "request": [4, 6, 23, 27, 31], "ot": 4, "marmotel": 4, "marmotelementwrapp": 4, "serv": 4, "wrapper": 4, "For": [4, 10, 14, 16, 23, 25, 30], "document": [4, 6, 31], "pleas": [4, 31], "elementtyp": 4, "elnumb": 4, "dofindicespermut": 4, "ensighttyp": 4, "nnode": 4, "nspatialdimens": 4, "nodecoordin": 4, "acceptlastst": 4, "accept": [4, 15], "state": [4, 9, 15, 25], "nonlinear": [4, 5, 9, 25, 30, 33], "scheme": [4, 5, 23], "computebodyforc": [4, 23], "dtime": 4, "residu": [4, 18, 23, 25], "due": [4, 5, 33], "volum": 4, "computedistributedload": [4, 23], "loadtyp": 4, "faceid": [4, 12, 14, 24, 26, 30], "surfac": [4, 8, 9, 14, 15, 23, 30], "computeyourself": 4, "ke": 4, "pe": 4, "getcoordinatesatcent": 4, "underli": [4, 17], "centroid": 4, "getcoordinatesatquadraturepoint": 4, "qp": 4, "getnumberofquadraturepoint": 4, "getresultarrai": 4, "getpersistentview": 4, "possibli": [4, 26], "persist": [4, 27], "contini": 4, "initializeel": 4, "let": [4, 24, 25], "itself": [4, 22, 31], "resettolastvalidst": 4, "reset": 4, "valid": [4, 16, 31], "setinitialcondit": [4, 9], "statetyp": 4, "condit": [4, 9, 23], "setmateri": 4, "materialnam": 4, "materialproperti": 4, "furthermor": [4, 6, 7, 28], "two": [4, 28], "var": [4, 8, 24], "actual": 4, "temporari": 4, "backup": 4, "setnod": 4, "underyl": 4, "setproperti": 4, "elementproperti": 4, "marmotmaterialwrappingel": 4, "materialtyp": 4, "marmotmateri": 4, "cf": 4, "It": [4, 6, 10, 15, 20, 22, 25, 32], "singl": [4, 7, 14, 19, 30], "quadratur": [4, 27], "dummi": [4, 27], "interfac": [4, 8, 11, 23, 29], "specif": [4, 16, 19, 25, 31], "special": [4, 11, 30], "run": [4, 8, 10, 17, 24, 30, 31, 32], "simul": [4, 5, 6, 9, 15, 19, 23, 24, 27, 31], "investig": 4, "purpos": [4, 6, 7, 8, 25, 27], "marmotmaterialhypoelast": 4, "permut": 4, "pattern": [4, 27], "aggreg": 4, "resembl": 4, "nodewis": 4, "uniqu": [4, 13, 20, 22, 25, 28], "gold": [4, 9, 29], "notat": 4, "Not": 4, "onli": [4, 6, 7, 12, 16, 18, 24, 25, 26, 31], "bool": [4, 10, 11, 19, 23], "rest": 4, "numpi": [4, 12, 13, 26, 27, 32], "he": 4, "first": [4, 11, 14, 24, 27, 30], "consid": [4, 7, 33], "instanc": [4, 6, 15, 19, 23, 25, 27, 31], "qpmarmotmaterialhypoelast": 4, "our": [4, 14, 30], "carri": [4, 6], "mateir": 4, "wrap": 4, "posit": [4, 8, 20, 28], "specifi": [4, 8, 19, 24], "mysingleelementjob": [4, 14, 30], "characterist": 4, "prescribed_strain": 4, "symmetr": 4, "nodeforc": [4, 6, 8, 9, 10, 16, 23], "prescribed_stress": 4, "savehistori": [4, 6, 16, 24], "dstress_dstrain": 4, "reshap": 4, "array2str": 4, "formatt": 4, "float_kind": 4, "2f": 4, "baseel": 4, "done": 4, "easili": [4, 19], "deriv": 4, "intern": [4, 33], "string": [4, 8, 12, 13, 26], "identifi": 4, "integ": [4, 6, 12, 26], "label": [4, 6, 12, 16, 19, 20, 22, 26], "kind": [4, 6, 19], "bodi": [4, 8, 9, 23, 24], "magnitud": [4, 14, 24, 30], "face": 4, "central": [4, 6, 18], "init": [4, 6, 31], "readi": 4, "util": [5, 6, 9, 19, 26, 33], "commonli": 5, "conditionalstop": [5, 9], "stop": [5, 9, 23], "sucessfulli": 5, "cutbackrequest": [5, 9], "messag": [5, 11], "cutbacks": 5, "residuel": 5, "fail": 5, "too": 5, "larg": [5, 27], "divergingsolut": [5, 9], "seem": 5, "diverg": [5, 23], "solv": [5, 23, 25], "inputexecpt": [5, 9], "invalid": 5, "reachedmaxincr": [5, 9], "maximum": [5, 12, 17, 23, 26, 27], "increm": 5, "attain": 5, "reachedmaxiter": [5, 9], "reachedminincrements": [5, 9], "minimum": [5, 12, 26, 27], "stepfail": [5, 9], "thrown": 5, "wrongdomain": [5, 9], "doe": [5, 28, 30], "fit": 5, "store": [6, 7, 8, 28], "keyword": [6, 8, 9, 10, 13, 14, 16, 19, 21], "outputmanag": [6, 9, 19, 22, 23, 25], "end": [6, 10, 12, 19, 23, 26], "thei": [6, 16, 22, 24, 25, 30], "export": [6, 9, 19, 24, 31], "csv": [6, 29], "enabl": 6, "histori": [6, 16, 23], "automat": [6, 8, 14, 16, 17, 27, 30], "append": [6, 26], "modeldata": 6, "slice": [6, 27], "math": [6, 16], "save": [6, 16], "complet": 6, "f_export": [6, 16], "final": [6, 10, 12, 19, 24, 26], "tabl": [6, 11], "modleon": 6, "13": 6, "47": [6, 19], "55": 6, "74": 6, "85": [6, 24], "12": [6, 8, 24], "003": [6, 24], "2d": [6, 9, 12, 16, 24, 26, 27], "displacement_top": [6, 16], "displacement_top_mean_1": 6, "rf_bottom": 6, "rf_bottom_sum_1": 6, "stress_top": 6, "alphap": [6, 24], "meshplot": [6, 9, 24], "figur": [6, 16, 19, 24], "axspec": [6, 16, 19, 24], "221": 6, "u2": 6, "222": 6, "s2": 6, "212": 6, "c": [6, 24, 31, 33], "red": 6, "dash": 6, "xydata": [6, 16, 24], "myensightexport": [6, 16], "mynodemonitor": 6, "plotalongpath": [6, 9], "mynodesetplott": [6, 16], "along": [6, 8, 9], "intermediatesaveinterv": [6, 16, 24], "linear": [6, 8, 9, 12, 16, 17, 23, 24, 26, 29, 32], "top": [6, 8, 16, 24], "80": [6, 11, 24], "fieldoutputcontrol": [6, 9, 23, 24, 25], "journal": [6, 8, 9, 15, 19, 23, 24, 25, 27, 33], "manag": [6, 9, 10, 12, 15, 16, 19, 26], "initializejob": 6, "addexpressionfieldoutput": 6, "kwarg": [6, 23, 25], "new": [6, 7, 8, 11, 15, 18, 23, 24, 26, 27], "dure": [6, 10, 16, 23, 24], "further": 6, "definit": [6, 10, 15, 18, 19, 23, 24, 25], "addperelementfieldoutput": 6, "elementset": [6, 7, 9, 15, 16, 22], "provid": [6, 9, 11, 12, 14, 23, 26, 30, 32], "log": [6, 11, 19, 23, 24, 25, 27], "addpernodefieldoutput": 6, "finalizeincr": 6, "finalizejob": 6, "finalizestep": 6, "initializestep": 6, "_fieldoutputbas": [6, 9], "latest": [6, 31], "getlastresult": 6, "matter": 6, "getresulthistori": 6, "throw": 6, "except": [6, 9], "gettimehistori": 6, "everyth": 6, "Will": 6, "prove": 6, "setresult": 6, "modifi": [6, 12, 23, 24, 26], "origin": [6, 8], "possibl": [6, 11, 12, 13, 26, 27], "writelastresult": 6, "elementfieldoutput": [6, 9], "elementbas": 6, "updateresult": 6, "reaction": [6, 23, 24], "nodal": [6, 9, 23], "nodefieldoutput": [6, 9], "expressionfieldoutput": [6, 9], "fieldnam": 7, "everi": [7, 16, 23], "multipl": [7, 8, 10, 25, 27], "flux": [7, 23], "effort": 7, "convenci": 7, "fast": [7, 27], "individu": [7, 19, 23], "effici": [7, 9, 29, 30], "contiguo": 7, "manner": 7, "rather": [7, 28], "than": 7, "distribut": [7, 9, 23], "across": 7, "represent": [7, 24], "copyentriesfromoth": 7, "fieldvalueentri": 7, "copi": [7, 22, 27], "anoth": 7, "differ": [7, 8], "intersect": 7, "subset": 7, "sub": [7, 15], "createfieldvalueentri": 7, "empti": [7, 27, 31], "present": [7, 11, 24], "nodefieldsubset": 7, "parentnodefield": 7, "thegeneratortyp": 8, "mygeneratornam": 8, "defint": [8, 12, 24, 25, 26], "cuboid": 8, "geometri": 8, "hex": 8, "__": 8, "back": [8, 27], "___x": 8, "front": 8, "_left": 8, "_right": 8, "_bottom": 8, "_top": 8, "_front": 8, "_back": 8, "_all": 8, "_centralfronttoback": 8, "_shearbandfronttoback": 8, "_shearbandcenterfronttoback": 8, "fly": 8, "40": [8, 24], "c3d20r": 8, "meshdatatofil": [8, 9], "meshdata": [8, 16], "filenam": [8, 12, 16, 19, 26], "myexportedmesh": 8, "inc": [8, 16], "gen2": 8, "storein": [8, 24], "quad": 8, "_____": 8, "datalin": [8, 13], "height": [8, 19], "esexport": [8, 24], "cloadtop": [8, 24], "pi": [8, 24], "jou": 8, "cubitcmd": 8, "execut": [8, 24, 25], "joufil": 8, "path": [8, 16, 31], "outfil": 8, "aprepro": 8, "comma": [8, 26], "separ": [8, 26], "kei": [8, 12, 25, 26], "pair": [8, 12, 25, 26], "eltypeperblock": 8, "exist": [8, 19, 26], "runcubit": 8, "gui": 8, "debug": [8, 30], "silent": 8, "hide": 8, "cubitgen": 8, "mat1": 8, "35000": 8, "mat2": 8, "3000": 8, "49": 8, "singular": 8, "exec": 8, "pathtoimag": 8, "smg": 8, "coreform_cubit": 8, "apreprovar": 8, "block1": 8, "block2": 8, "section2": 8, "set_def": 8, "5e": 8, "bot": 8, "n_bot": 8, "n_top": 8, "code": [8, 30], "pythoncodemodelgener": 8, "executeaftermanualgener": [8, 24], "we": [8, 14, 23, 28, 30], "center_horizont": 8, "ab": 8, "parseinputfil": [9, 26], "printkeyword": [9, 26], "printkeywordsrst": [9, 26], "inputfil": [9, 26, 30, 31], "driven": 9, "finiteelementsimul": [9, 10], "classic": [9, 19], "getsolverbynam": [9, 23], "implicit": [9, 33], "static": 9, "nistparallelformarmotel": 9, "parallel": [9, 29, 30], "nistparclength": [9, 17, 24], "arc": 9, "stepbas": [9, 25], "adaptivestep": 9, "adp": 9, "transient": 9, "analyt": 9, "scalarexpress": 9, "express": [9, 12, 21, 24, 26], "randomscalar": 9, "random": 9, "implement": [9, 23, 27, 29, 30, 31], "your": [9, 31], "own": 9, "equalvaluelagrangian": 9, "constrain": 9, "equal": [9, 19], "equalvaluepenalti": 9, "linearizedrigidbodi": 9, "rigid": 9, "rigidbodi": 9, "geometr": [9, 16], "exact": 9, "penaltyindirectcontrol": 9, "penalti": 9, "indirect": [9, 16, 30], "control": [9, 10, 16, 23, 30], "physic": [9, 24, 25], "marmot": [9, 12, 14, 23, 26, 30, 32], "marmotsingleqpel": 9, "box": 9, "rectangular": 9, "cubit": 9, "findclosestnod": [9, 24], "closest": 9, "executepythoncod": 9, "script": 9, "quantiti": 9, "termin": [9, 11, 14, 23, 30], "matplotlib": [9, 19, 29, 32], "fractureenergyintegr": 9, "fractur": 9, "energi": 9, "plot": [9, 10, 12, 26], "becom": 9, "statusfil": 9, "statu": 9, "computetimemonitor": 9, "print": [9, 11, 14, 23, 26, 30, 31], "phenomena": 9, "plotter": [9, 16, 19], "immutableorderedset": [9, 22], "orderedset": [9, 22], "action": [9, 10, 12, 23, 25, 26], "bodyforc": [9, 23], "standard": [9, 12, 15, 16, 23, 25, 26], "bc": [9, 14, 23, 30], "distributedload": [9, 14, 23, 30], "geostat": 9, "indirectcontrol": 9, "indirectcontractioncontrol": 9, "contract": 9, "ring": 9, "initializemateri": 9, "concentr": [9, 23], "prescrib": 9, "convers": 9, "csr": [9, 23], "gather": 9, "adapt": [9, 25], "fieldvari": [9, 28], "driver": 10, "inputfiledrivensimul": 10, "main": [10, 11, 31], "heart": 10, "consist": 10, "verbos": [10, 11], "suppressplot": 10, "core": 10, "function": [10, 16, 27], "assembl": [10, 23, 27], "Be": 10, "suppress": [10, 11], "batch": 10, "process": [10, 25], "capabl": 11, "troughout": 11, "outputfil": 11, "suppressfromlevel": 11, "user": [11, 24, 27], "consol": [11, 16], "sort": 11, "level": 11, "certain": [11, 17, 28], "printprettyt": 11, "setfileoutput": 11, "errormessag": 11, "senderidentif": 11, "error": 11, "sender": 11, "printseperationlin": 11, "seper": 11, "printtabl": 11, "printheaderrow": 11, "pretti": 11, "nest": [11, 26], "mesag": 11, "row": [11, 23, 27], "setnewlinewidth": 11, "newwidth": 11, "leftcolumn": 11, "width": [11, 19], "column": 11, "setverbos": 11, "highest": 11, "squelch": 11, "prioriti": 11, "definiton": [12, 26], "defini": [12, 26], "jobnam": [12, 16, 24, 26], "defaultjob": [12, 26], "1d": [12, 26], "linsolv": [12, 26], "superlu": [12, 17, 26], "starttim": [12, 26], "multilin": [12, 13, 26], "statevar": [12, 26], "deprec": [12, 26], "ignor": [12, 24, 26], "where": [12, 26], "written": [12, 16, 26], "xdata": [12, 26], "ydata": [12, 26], "criticalit": [12, 25, 26], "prevent": [12, 26, 27], "increas": [12, 26, 27], "correspond": [12, 16, 26], "stepact": [12, 23, 24, 25, 26], "period": [12, 26], "mandatori": 13, "argument": 13, "option": [13, 23, 25], "referenc": 13, "abqmodelconstructor": 14, "wai": 14, "emploi": [14, 17, 26, 27, 30], "linearelasticisotrop": [14, 30], "7": [14, 30, 31], "hex8": [14, 30], "bottomleft": [14, 30], "bottomback": [14, 30], "theonlyel": [14, 30], "could": [14, 30], "surfaceright": [14, 30], "second": [14, 24, 30], "dload": [14, 24, 30], "pressur": [14, 24, 30], "interest": [14, 30], "rf_left": [14, 30], "myensightoutput": [14, 30], "visual": [14, 19, 30], "paraview": [14, 29, 30], "etc": [14, 30], "mymonitor": [14, 30], "take": [15, 19], "care": 15, "freedem": 15, "restoremodel": 15, "storemodel": 15, "advancetotim": 15, "prepareyourself": 15, "prepar": 15, "bundl": 15, "additionalparamet": 15, "domains": 15, "variuou": 16, "full": 16, "force_bottom": 16, "reactionforc": 16, "mynodesetmonitor": [16, 24], "ualongtopsurfac": 16, "nstage": 16, "mindtforoutput": [16, 24], "case": [16, 27], "simpl": [16, 24], "observ": 16, "cpe4job": [16, 24], "omegamon": 16, "omega": [16, 24], "max": [16, 24], "author": 16, "divid": 16, "triangul": 16, "triangl": 16, "out": 16, "rectangl": 16, "ax": [16, 19], "grid": [16, 19], "accord": [16, 19], "111": [16, 19, 24], "meshonli": 16, "integr": 16, "curv": [16, 19], "gfi": 16, "forcefieldoutput": 16, "displacementfieldoutput": 16, "fracturearea": 16, "area": 16, "distanc": [16, 24], "matlab": 16, "peak": 16, "wenn": 16, "condstop": 16, "damag": [16, 24, 33], "99": 16, "mystatu": 16, "sta": 16, "custom": [16, 22, 31], "mymesh": 16, "_mesh": 16, "screen": 16, "them": [16, 23, 28, 31], "mycomputetim": 16, "make": [17, 26, 27, 30, 31, 32], "openmp": [17, 32], "umfpack": 17, "pardiso": 17, "select": 17, "thread": 17, "depend": [17, 23, 24, 31], "host": 17, "architectur": 17, "howev": 17, "recommend": [17, 32], "enforc": [17, 31], "fix": 17, "omp_num_thread": 17, "xx": 17, "edelweiss": [17, 26, 30], "py": [17, 19, 26, 30, 31], "ensur": 17, "same": [17, 26], "both": 17, "well": 17, "intel": [17, 32], "mkl": [17, 32], "known": 18, "avail": [18, 25, 26, 32], "toler": 18, "happen": 18, "through": 19, "perform": [19, 23, 24, 26, 27, 28, 29], "pass": [19, 24, 27], "style": 19, "211": 19, "xlabel": 19, "u1": [19, 24], "ylabel": 19, "p2": [19, 24], "flipx": 19, "aspect": 19, "pdf": 19, "png": 19, "fig1": 19, "fig2": 19, "rcparam": 19, "work": [19, 31], "directori": [19, 31], "plotconfigur": 19, "exportjob": 19, "unifi": [19, 33], "configureplott": 19, "exportfigur": 19, "figureid": 19, "469": 19, "scale": [19, 24, 27], "heightratio": 19, "pt": 19, "ratio": [19, 24], "golden": 19, "getax": 19, "doesn": 19, "yet": [19, 29], "getfig": 19, "plotxydata": 19, "plotopt": 19, "matpotlib": 19, "show": 19, "xlimit": 19, "limit": 19, "ylimit": 19, "flip": 19, "flipi": 19, "switch": 19, "addition": 19, "ident": 20, "basic": [20, 22, 28], "arbitrari": 20, "combin": 21, "term": 21, "mysect": 21, "usag": 22, "item_": 22, "immut": 22, "item": 22, "fromkei": 22, "checkobjecttyp": 22, "obj": 22, "check": [22, 23], "forceit": 22, "even": 22, "extractnodeset": 22, "tune": 23, "choos": 23, "mysolv": 23, "nonlinearimplicitstat": 23, "nonlinearimplicitstaticparallelmk2": 23, "nonlinearimplicitstaticparallel": 23, "nonlinearimplicitstaticparallelarclength": 23, "jobinfo": [23, 24, 25], "finddirichletindic": 23, "applydirichlet": 23, "r": [23, 33], "solvestep": 23, "befor": [23, 25, 27, 31], "equatuon": 23, "stepactionbas": [23, 24], "boundari": [23, 24], "applydirichletk": 23, "http": [23, 31], "stackoverflux": 23, "com": [23, 31], "question": 23, "12129948": 23, "scipi": [23, 27, 32], "zero": 23, "applystepactionsatincrementstart": 23, "applystepactionsatstepend": 23, "finish": [23, 24], "applystepactionsatstepstart": 23, "appliet": 23, "assembleconstraint": 23, "loop": 23, "assembleload": 23, "hand": 23, "side": 23, "volumetr": 23, "augment": 23, "assemblestiffnesscsr": 23, "compress": [23, 27], "csr_matrix": [23, 27], "checkconverg": 23, "ddu": 23, "iterationcount": 23, "residualhistori": 23, "similar": [23, 26], "decid": 23, "whether": 23, "continu": 23, "previou": [23, 27], "wise": 23, "checkdivergingsolut": 23, "incrementresidualhistori": 23, "maxgrowingit": 23, "growth": [23, 25], "computeel": 23, "evalut": 23, "computespatialaveragedflux": 23, "averag": 23, "usual": [23, 30, 31, 32], "dictioari": 23, "conta": 23, "extrapolatelastincr": 23, "prevtimestep": 23, "lastincrements": 23, "linearsolv": 23, "b": [23, 31], "spare": 23, "printresidualoutliernod": 23, "residualoutli": 23, "have": [23, 25, 26], "largest": 23, "outlier": 23, "solveincr": 23, "u_n": [23, 24], "newton": 23, "raphson": 23, "un": 23, "old": 23, "grow": 23, "until": [23, 30], "public": 23, "stepnumb": 23, "outputmanagerbas": 23, "stiffn": 23, "sy": [23, 31], "cython": [23, 29, 31, 32], "version": [23, 31, 32], "speed": 23, "un1": 23, "propos": 23, "approach": [23, 33], "jir\u00e1sek": 23, "ba\u017eant": 23, "2001": 23, "replac": 23, "newtonraphson": 23, "henc": 23, "subsequ": [23, 24, 25], "commun": 23, "parent": 23, "tell": [23, 26], "dlambda": 23, "account": 23, "activestepact": 23, "righttop": 24, "dload1": 24, "dload2": 24, "constant": 24, "forcevector": 24, "delta": 24, "amplitud": 24, "progress": 24, "interv": 24, "bodyforce3d": 24, "forcex": 24, "forcei": 24, "forcez": 24, "bforc": 24, "traction": 24, "must": [24, 31], "loadel": 24, "95": 24, "90": 24, "surfaceload": 24, "p1": 24, "sig_x": 24, "sig_i": 24, "sig_z": 24, "h1": 24, "s11": 24, "s22": 24, "s33": 24, "h2": 24, "xlater": 24, "zlater": 24, "150": 24, "disptop": 24, "rfbottom": 24, "geo": 24, "dltop": 24, "nistarclength": 24, "dof1": 24, "dof2": 24, "crack": 24, "open": 24, "indirectdisplacementcontrol": 24, "nistparclen": 24, "9": [24, 31, 32], "gc3d8": 24, "gcdp": 24, "concret": [24, 33], "fcy": 24, "fcu": 24, "fbu": 24, "ftu": 24, "df": 24, "ah": 24, "35": 24, "bh": 24, "ch": 24, "dh": 24, "As": 24, "softmod": 24, "m": [24, 33], "omegamax": 24, "derivativemethod": 24, "dtthresholdelasticstiff": 24, "closestn1": 24, "idc1": 24, "closestn2": 24, "60": 24, "idc2": 24, "100000": 24, "omegaini": 24, "alphadweak": 24, "uniform": 24, "startinc": 24, "arclengthcontrol": 24, "stopcondit": 24, "i1pmax": 24, "cvector1": 24, "cvector2": 24, "leftx": 24, "lefti": 24, "leftz": 24, "nonlocal_damag": 24, "nonloc": 24, "alphad": 24, "i1p": 24, "alphadmax": 24, "gen_centerslicex": 24, "rf1": 24, "tunnel": 24, "center": 24, "autot": 24, "bound": 24, "contractionnset": 24, "exportcvector": 24, "themselv": 24, "someth": 24, "predefin": 24, "const": 24, "initalizi": 24, "abas": 24, "overrid": 24, "fieldput": 24, "applyatincrementstart": 24, "applyatstepend": 24, "successfulli": 24, "applyatstepstart": 24, "updatestepact": 24, "One": 25, "more": [25, 30], "consecut": 25, "distinct": 25, "runtim": 25, "inherit": 25, "startim": 25, "discardandchangeincr": [25, 27], "gettimestep": 25, "preventincrementincreas": [25, 27], "critic": [25, 27, 29], "after": 25, "next": [25, 27], "reduc": 25, "durcat": 25, "maxgrowit": 25, "discard": 25, "maxincrements": 25, "maxim": 25, "fraction": 25, "maxnumberincr": [25, 27], "minincrements": 25, "minim": 25, "startincrements": 25, "inputfilepars": 26, "human": 26, "readabl": 26, "supplement": 26, "indent": 26, "blank": 26, "effect": 26, "option1": 26, "option2": 26, "another_valu": 26, "comment": 26, "again": 26, "another_keyword": 26, "fe": 26, "currentkeyword": 26, "existingfiledict": 26, "pars": 26, "its": 26, "content": 26, "caseinsensitivedict": 26, "nond": 26, "languag": 26, "rst": 26, "conform": 26, "veri": [27, 30], "handi": 27, "fundament": 27, "csrgener": 27, "cdef": 27, "matric": 27, "offer": 27, "without": 27, "reanalyz": 27, "contrast": 27, "conveni": 27, "systemmatrix": 27, "updatecsr": 27, "elementresultcollector": 27, "perman": 27, "pointer": 27, "resultvector": 27, "getcurrentresult": 27, "assembli": 27, "caller": 27, "respons": 27, "desir": 27, "resultst": 27, "timestepp": 27, "adaptivetimestepp": 27, "currenttim": 27, "startincr": 27, "maxincr": 27, "minincr": 27, "scalefactor": 27, "chang": 27, "between": 27, "factor": 27, "generatetimestep": 27, "bad": 27, "latter": 28, "ti": 28, "placehold": 28, "presenc": 28, "adress": 28, "hash": 28, "unlik": 28, "ani": 28, "reason": 28, "cumul": 28, "aim": [29, 30], "easi": [29, 30], "understand": [29, 33], "routin": 29, "modular": 29, "extend": [29, 33], "power": 29, "direct": 29, "light": 30, "weight": 30, "platform": 30, "independ": 30, "By": [30, 31], "constitut": [30, 31], "learn": 30, "environ": [30, 31], "tool": 30, "coupl": 30, "problem": 30, "flexibl": 30, "techniqu": 30, "often": 30, "difficult": 30, "matur": 30, "mpi": 30, "up": 30, "medium": 30, "want": 30, "compet": 30, "moos": 30, "compat": 30, "less": 30, "suitabl": 30, "meet": 30, "product": 30, "hpc": 30, "simpli": [30, 31], "found": 30, "folder": [30, 31], "search": 30, "page": 30, "eigen": [31, 32], "potenti": 31, "fastor": 31, "you": 31, "setup": 31, "alreadi": 31, "minor": 31, "modif": 31, "compil": [31, 32], "prior": 31, "To": 31, "pip": 31, "cd": 31, "your_input_fil": 31, "run_tests_edelweissf": 31, "recreat": 31, "know": 31, "what": 31, "do": 31, "altern": 31, "inplac": 31, "build_ext": 31, "recompil": 31, "assum": [31, 33], "quickli": 31, "linux": [31, 32], "mamba": 31, "curl": 31, "o": 31, "github": 31, "conda": [31, 32], "forg": 31, "miniforg": 31, "releas": 31, "download": 31, "mambaforg": 31, "x86_64": 31, "sh": 31, "bash": 31, "mambaforge3": 31, "ewroot": 31, "bin": 31, "exit": 31, "restart": 31, "shell": 31, "pwd": 31, "git": 31, "clone": 31, "packag": [31, 32], "txt": 31, "branch": 31, "gitlab": 31, "libeigen": 31, "mkdir": 31, "cmake": [31, 32], "dbuild_test": 31, "off": 31, "dinclude_install_dir": 31, "prefix": 31, "dcmake_install_prefix": 31, "autodiff": 31, "v1": 31, "dautodiff_build_test": 31, "dautodiff_build_python": 31, "dautodiff_build_exampl": 31, "dautodiff_build_doc": 31, "romer": 31, "recurs": 31, "materialmodelingtoolbox": 31, "11": 31, "sphinx": [31, 32], "doc": 31, "html": 31, "recent": 32, "anaconda": 32, "Then": 32, "docutil": 32, "16": 32, "gfortran": 32, "numpydoc": 32, "petsc4pi": 32, "pymump": 32, "pytest": 32, "prettyt": 32, "suitespars": 32, "sphinx_rtd_them": 32, "sympi": 32, "free": 32, "binari": 32, "instal": 32, "header": 32, "so": 32, "standalaon": 32, "algebra": 32, "were": 33, "fulli": 33, "partial": 33, "obtain": 33, "abrari": 33, "vajari": 33, "arunachala": 33, "linder": 33, "better": 33, "mechan": 33, "borehol": 33, "breakout": 33, "gradient": 33, "enhanc": 33, "micropolar": 33, "continuum": 33, "geotechn": 33, "105064": 33, "oct": 33, "2022": 33, "doi": 33, "1016": 33, "compgeo": 33, "regueiro": 33, "quasi": 33, "brittl": 33, "failur": 33, "cohes": 33, "friction": 33, "vol": 33, "254": 33, "255": 33, "111841": 33, "nov": 33, "ijsolstr": 33, "hofstett": 33, "plastic": 33, "creep": 33, "243": 33, "111541": 33, "regular": 33, "rock": 33, "scienc": 33, "1004": 33, "2018": 33, "3390": 33, "app8061004": 33, "gamnitz": 33, "239": 33, "106332": 33, "2020": 33, "compstruc": 33, "pamm": 33, "18": 33, "e201800054": 33, "1002": 33, "201800054": 33}, "objects": {"edelweissfe.analyticalfields.base": [[1, 0, 0, "-", "analyticalfieldbase"]], "edelweissfe.analyticalfields.base.analyticalfieldbase": [[1, 1, 1, "", "AnalyticalField"]], "edelweissfe.analyticalfields.base.analyticalfieldbase.AnalyticalField": [[1, 2, 1, "", "evaluateAtCoordinates"]], "edelweissfe.analyticalfields": [[1, 0, 0, "-", "randomscalar"], [1, 0, 0, "-", "scalarexpression"]], "edelweissfe.config": [[1, 0, 0, "-", "analyticalfields"], [2, 0, 0, "-", "constraints"], [4, 0, 0, "-", "elementlibrary"], [8, 0, 0, "-", "generators"], [16, 0, 0, "-", "outputmanagers"], [18, 0, 0, "-", "phenomena"], [21, 0, 0, "-", "sections"], [23, 0, 0, "-", "solvers"], [24, 0, 0, "-", "stepactions"]], "edelweissfe.config.elementlibrary": [[4, 3, 1, "", "getElementClass"]], "edelweissfe.config.solvers": [[23, 3, 1, "", "getSolverByName"]], "edelweissfe.constraints.base": [[2, 0, 0, "-", "constraintbase"]], "edelweissfe.constraints.base.constraintbase": [[2, 1, 1, "", "ConstraintBase"]], "edelweissfe.constraints.base.constraintbase.ConstraintBase": [[2, 2, 1, "", "applyConstraint"], [2, 2, 1, "", "assignAdditionalScalarVariables"], [2, 4, 1, "", "fieldsOnNodes"], [2, 2, 1, "", "getNumberOfAdditionalNeededScalarVariables"], [2, 4, 1, "", "nDof"], [2, 4, 1, "", "nodes"]], "edelweissfe.constraints": [[2, 0, 0, "-", "equalvaluelagrangian"], [2, 0, 0, "-", "equalvaluepenalty"], [2, 0, 0, "-", "linearizedrigidbody"], [2, 0, 0, "-", "penaltyindirectcontrol"], [2, 0, 0, "-", "rigidbody"]], "edelweissfe.drivers": [[10, 0, 0, "-", "inputfiledrivensimulation"]], "edelweissfe.drivers.inputfiledrivensimulation": [[10, 3, 1, "", "finiteElementSimulation"]], "edelweissfe.elements.base": [[4, 0, 0, "-", "baseelement"]], "edelweissfe.elements.base.baseelement": [[4, 1, 1, "", "BaseElement"]], "edelweissfe.elements.base.baseelement.BaseElement": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 4, 1, "", "dofIndicesPermutation"], [4, 4, 1, "", "elNumber"], [4, 4, 1, "", "ensightType"], [4, 4, 1, "", "fields"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 2, 1, "", "initializeElement"], [4, 4, 1, "", "nDof"], [4, 4, 1, "", "nNodes"], [4, 4, 1, "", "nodes"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"]], "edelweissfe.elements.marmotelement.element": [[4, 1, 1, "", "MarmotElementWrapper"]], "edelweissfe.elements.marmotelement.element.MarmotElementWrapper": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 2, 1, "", "initializeElement"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"]], "edelweissfe.elements.marmotsingleqpelement.element": [[4, 1, 1, "", "MarmotMaterialWrappingElement"]], "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement": [[4, 2, 1, "", "acceptLastState"], [4, 2, 1, "", "computeBodyForce"], [4, 2, 1, "", "computeDistributedLoad"], [4, 2, 1, "", "computeYourself"], [4, 4, 1, "", "dofIndicesPermutation"], [4, 4, 1, "", "elNumber"], [4, 4, 1, "", "ensightType"], [4, 4, 1, "", "fields"], [4, 2, 1, "", "getCoordinatesAtCenter"], [4, 2, 1, "", "getCoordinatesAtQuadraturePoints"], [4, 2, 1, "", "getNumberOfQuadraturePoints"], [4, 2, 1, "", "getResultArray"], [4, 2, 1, "", "initializeElement"], [4, 4, 1, "", "nDof"], [4, 4, 1, "", "nNodes"], [4, 4, 1, "", "nodes"], [4, 2, 1, "", "resetToLastValidState"], [4, 2, 1, "", "setInitialCondition"], [4, 2, 1, "", "setMaterial"], [4, 2, 1, "", "setNodes"], [4, 2, 1, "", "setProperties"]], "edelweissfe.fields": [[7, 0, 0, "-", "nodefield"]], "edelweissfe.fields.nodefield": [[7, 1, 1, "", "NodeField"], [7, 1, 1, "", "NodeFieldSubset"]], "edelweissfe.fields.nodefield.NodeField": [[7, 2, 1, "", "copyEntriesFromOther"], [7, 2, 1, "", "createFieldValueEntry"], [7, 2, 1, "", "subset"]], "edelweissfe.fields.nodefield.NodeFieldSubset": [[7, 2, 1, "", "createFieldValueEntry"], [7, 2, 1, "", "subset"]], "edelweissfe.generators": [[14, 0, 0, "-", "abqmodelconstructor"], [8, 0, 0, "-", "boxgen"], [8, 0, 0, "-", "cubit"], [8, 0, 0, "-", "executepythoncode"], [8, 0, 0, "-", "findclosestnode"], [8, 0, 0, "-", "planerectquad"]], "edelweissfe.journal": [[11, 0, 0, "-", "journal"]], "edelweissfe.journal.journal": [[11, 1, 1, "", "Journal"]], "edelweissfe.journal.journal.Journal": [[11, 2, 1, "", "errorMessage"], [11, 2, 1, "", "message"], [11, 2, 1, "", "printSeperationLine"], [11, 2, 1, "", "printTable"], [11, 2, 1, "", "setNewLineWidth"], [11, 2, 1, "", "setVerbose"], [11, 2, 1, "", "squelch"]], "edelweissfe.models": [[15, 0, 0, "-", "femodel"]], "edelweissfe.models.femodel": [[15, 1, 1, "", "FEModel"]], "edelweissfe.models.femodel.FEModel": [[15, 5, 1, "", "additionalParameters"], [15, 2, 1, "", "advanceToTime"], [15, 5, 1, "", "analyticalFields"], [15, 5, 1, "", "constraints"], [15, 5, 1, "", "domainSize"], [15, 5, 1, "", "elementSets"], [15, 5, 1, "", "elements"], [15, 5, 1, "", "materials"], [15, 5, 1, "", "nodeFields"], [15, 5, 1, "", "nodeSets"], [15, 5, 1, "", "nodes"], [15, 2, 1, "", "prepareYourself"], [15, 5, 1, "", "scalarVariables"], [15, 5, 1, "", "sections"], [15, 5, 1, "", "surfaces"], [15, 5, 1, "", "time"]], "edelweissfe.numerics.csrgenerator": [[27, 1, 1, "", "CSRGenerator"]], "edelweissfe.numerics.csrgenerator.CSRGenerator": [[27, 2, 1, "", "updateCSR"]], "edelweissfe.numerics": [[3, 0, 0, "-", "dofmanager"]], "edelweissfe.numerics.dofmanager": [[3, 1, 1, "", "DofManager"], [3, 1, 1, "", "DofVector"], [3, 1, 1, "", "VIJSystemMatrix"]], "edelweissfe.numerics.dofmanager.DofManager": [[3, 2, 1, "", "constructDofVector"], [3, 2, 1, "", "constructVIJSystemMatrix"], [3, 2, 1, "", "getNodeForIndexInDofVector"], [3, 2, 1, "", "writeDofVectorToNodeField"], [3, 2, 1, "", "writeNodeFieldToDofVector"]], "edelweissfe.outputmanagers": [[16, 0, 0, "-", "computetimemonitor"], [16, 0, 0, "-", "conditionalstop"], [16, 0, 0, "-", "ensight"], [16, 0, 0, "-", "fractureenergyintegrator"], [16, 0, 0, "-", "meshdatatofile"], [16, 0, 0, "-", "meshplot"], [16, 0, 0, "-", "monitor"], [16, 0, 0, "-", "plotalongpath"], [16, 0, 0, "-", "statusfile"]], "edelweissfe.points": [[20, 0, 0, "-", "node"]], "edelweissfe.points.node": [[20, 1, 1, "", "Node"]], "edelweissfe.sets": [[22, 0, 0, "-", "elementset"], [22, 0, 0, "-", "nodeset"], [22, 0, 0, "-", "orderedset"]], "edelweissfe.sets.elementset": [[22, 1, 1, "", "ElementSet"]], "edelweissfe.sets.nodeset": [[22, 1, 1, "", "NodeSet"]], "edelweissfe.sets.orderedset": [[22, 1, 1, "", "ImmutableOrderedSet"], [22, 1, 1, "", "OrderedSet"]], "edelweissfe.sets.orderedset.ImmutableOrderedSet": [[22, 2, 1, "", "add"]], "edelweissfe.sets.orderedset.OrderedSet": [[22, 2, 1, "", "add"], [22, 2, 1, "", "checkObjectType"], [22, 2, 1, "", "forceIter"]], "edelweissfe.solvers": [[23, 0, 0, "-", "nonlinearimplicitstatic"], [23, 0, 0, "-", "nonlinearimplicitstaticparallelarclength"], [23, 0, 0, "-", "nonlinearimplicitstaticparallelmk2"]], "edelweissfe.solvers.nonlinearimplicitstatic": [[23, 1, 1, "", "NIST"]], "edelweissfe.solvers.nonlinearimplicitstatic.NIST": [[23, 2, 1, "", "applyDirichlet"], [23, 2, 1, "", "applyDirichletK"], [23, 2, 1, "", "applyStepActionsAtIncrementStart"], [23, 2, 1, "", "applyStepActionsAtStepEnd"], [23, 2, 1, "", "applyStepActionsAtStepStart"], [23, 2, 1, "", "assembleConstraints"], [23, 2, 1, "", "assembleLoads"], [23, 2, 1, "", "assembleStiffnessCSR"], [23, 2, 1, "", "checkConvergence"], [23, 2, 1, "", "checkDivergingSolution"], [23, 2, 1, "", "computeBodyForces"], [23, 2, 1, "", "computeDistributedLoads"], [23, 2, 1, "", "computeElements"], [23, 2, 1, "", "computeSpatialAveragedFluxes"], [23, 2, 1, "", "extrapolateLastIncrement"], [23, 2, 1, "", "linearSolve"], [23, 2, 1, "", "printResidualOutlierNodes"], [23, 2, 1, "", "solveIncrement"], [23, 2, 1, "", "solveStep"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength": [[23, 1, 1, "", "NISTPArcLength"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength": [[23, 2, 1, "", "applyStepActionsAtStepEnd"], [23, 2, 1, "", "extrapolateLastIncrement"], [23, 2, 1, "", "solveIncrement"], [23, 2, 1, "", "solveStep"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2": [[23, 1, 1, "", "NISTParallel"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel": [[23, 2, 1, "", "applyDirichletK"], [23, 2, 1, "", "computeElements"], [23, 2, 1, "", "solveStep"]], "edelweissfe.stepactions.base": [[24, 0, 0, "-", "stepactionbase"]], "edelweissfe.stepactions.base.stepactionbase": [[24, 1, 1, "", "StepActionBase"]], "edelweissfe.stepactions.base.stepactionbase.StepActionBase": [[24, 2, 1, "", "applyAtIncrementStart"], [24, 2, 1, "", "applyAtStepEnd"], [24, 2, 1, "", "applyAtStepStart"], [24, 2, 1, "", "updateStepAction"]], "edelweissfe.stepactions": [[24, 0, 0, "-", "bodyforce"], [24, 0, 0, "-", "dirichlet"], [24, 0, 0, "-", "distributedload"], [24, 0, 0, "-", "geostatic"], [24, 0, 0, "-", "indirectcontractioncontrol"], [24, 0, 0, "-", "indirectcontrol"], [24, 0, 0, "-", "initializematerial"], [24, 0, 0, "-", "modelupdate"], [24, 0, 0, "-", "nodeforces"], [24, 0, 0, "-", "setfield"], [24, 0, 0, "-", "setinitialconditions"]], "edelweissfe.steps": [[25, 0, 0, "-", "adaptivestep"]], "edelweissfe.steps.adaptivestep": [[25, 1, 1, "", "AdaptiveStep"]], "edelweissfe.steps.adaptivestep.AdaptiveStep": [[25, 5, 1, "", "criticalIter"], [25, 5, 1, "", "length"], [25, 5, 1, "", "maxGrowIter"], [25, 5, 1, "", "maxIncrementSize"], [25, 5, 1, "", "maxIter"], [25, 5, 1, "", "maxNumberIncrements"], [25, 5, 1, "", "minIncrementSize"], [25, 5, 1, "", "number"], [25, 2, 1, "", "solve"], [25, 5, 1, "", "startIncrementSize"]], "edelweissfe.steps.base": [[25, 0, 0, "-", "stepbase"]], "edelweissfe.steps.base.stepbase": [[25, 1, 1, "", "StepBase"]], "edelweissfe.steps.base.stepbase.StepBase": [[25, 2, 1, "", "solve"]], "edelweissfe.timesteppers.adaptivetimestepper": [[27, 1, 1, "", "AdaptiveTimeStepper"]], "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper": [[27, 2, 1, "", "discardAndChangeIncrement"], [27, 2, 1, "", "generateTimeStep"], [27, 2, 1, "", "preventIncrementIncrease"]], "edelweissfe.utils.elementresultcollector": [[27, 1, 1, "", "ElementResultCollector"]], "edelweissfe.utils.elementresultcollector.ElementResultCollector": [[27, 2, 1, "", "getCurrentResults"], [27, 2, 1, "", "update"]], "edelweissfe.utils": [[5, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "fieldoutput"], [26, 0, 0, "-", "inputfileparser"], [19, 0, 0, "-", "plotter"]], "edelweissfe.utils.exceptions": [[5, 6, 1, "", "ConditionalStop"], [5, 6, 1, "", "CutbackRequest"], [5, 6, 1, "", "DivergingSolution"], [5, 6, 1, "", "InputExecption"], [5, 6, 1, "", "ReachedMaxIncrements"], [5, 6, 1, "", "ReachedMaxIterations"], [5, 6, 1, "", "ReachedMinIncrementSize"], [5, 6, 1, "", "StepFailed"], [5, 6, 1, "", "WrongDomain"]], "edelweissfe.utils.fieldoutput": [[6, 1, 1, "", "ElementFieldOutput"], [6, 1, 1, "", "ExpressionFieldOutput"], [6, 1, 1, "", "FieldOutputController"], [6, 1, 1, "", "NodeFieldOutput"], [6, 1, 1, "", "_FieldOutputBase"]], "edelweissfe.utils.fieldoutput.ElementFieldOutput": [[6, 2, 1, "", "setResults"], [6, 2, 1, "", "updateResults"]], "edelweissfe.utils.fieldoutput.ExpressionFieldOutput": [[6, 2, 1, "", "updateResults"]], "edelweissfe.utils.fieldoutput.FieldOutputController": [[6, 2, 1, "", "addExpressionFieldOutput"], [6, 2, 1, "", "addPerElementFieldOutput"], [6, 2, 1, "", "addPerNodeFieldOutput"], [6, 2, 1, "", "finalizeIncrement"], [6, 2, 1, "", "finalizeJob"], [6, 2, 1, "", "finalizeStep"], [6, 2, 1, "", "initializeStep"]], "edelweissfe.utils.fieldoutput.NodeFieldOutput": [[6, 2, 1, "", "updateResults"]], "edelweissfe.utils.fieldoutput._FieldOutputBase": [[6, 2, 1, "", "finalizeIncrement"], [6, 2, 1, "", "getLastResult"], [6, 2, 1, "", "getResultHistory"], [6, 2, 1, "", "getTimeHistory"], [6, 2, 1, "", "initializeJob"], [6, 2, 1, "", "setResults"], [6, 2, 1, "", "writeLastResult"]], "edelweissfe.utils.inputfileparser": [[26, 3, 1, "", "parseInputFile"], [26, 3, 1, "", "printKeywords"], [26, 3, 1, "", "printKeywordsRST"]], "edelweissfe.utils.plotter": [[19, 1, 1, "", "Plotter"]], "edelweissfe.utils.plotter.Plotter": [[19, 2, 1, "", "configurePlotter"], [19, 2, 1, "", "exportFigure"], [19, 2, 1, "", "exportPlots"], [19, 2, 1, "", "finalize"], [19, 2, 1, "", "getAx"], [19, 2, 1, "", "getFig"], [19, 2, 1, "", "plotXYData"], [19, 2, 1, "", "show"]], "edelweissfe.variables": [[28, 0, 0, "-", "fieldvariable"], [28, 0, 0, "-", "scalarvariable"]], "edelweissfe.variables.fieldvariable": [[28, 1, 1, "", "FieldVariable"]], "edelweissfe.variables.scalarvariable": [[28, 1, 1, "", "ScalarVariable"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"contributor": 0, "analyt": [1, 12, 26], "field": [1, 6, 7, 12, 24, 26], "scalarexpress": 1, "defin": [1, 12, 26], "express": [1, 16], "option": [1, 2, 6, 8, 12, 16, 19, 24, 26], "randomscalar": 1, "A": [1, 7, 8, 15, 25], "random": 1, "implement": [1, 2, 4, 24], "your": [1, 2, 4, 12, 24, 26], "own": [1, 2, 4, 24], "constraint": [2, 12, 26], "equalvaluelagrangian": 2, "constrain": 2, "nodal": 2, "valu": [2, 24], "equal": 2, "equalvaluepenalti": 2, "linearizedrigidbodi": 2, "linear": 2, "rigid": 2, "bodi": 2, "2d": [2, 8], "rigidbodi": 2, "geometr": 2, "exact": 2, "3d": [2, 8], "penaltyindirectcontrol": 2, "penalti": 2, "base": 2, "indirect": [2, 24], "control": [2, 24], "dof": 3, "manag": 3, "element": [4, 12, 14, 15, 24, 26, 27], "provid": 4, "marmot": [4, 31], "marmotsingleqpel": 4, "except": 5, "output": [6, 12, 26], "nodefield": 7, "physic": [7, 18], "node": [7, 8, 12, 24, 26], "gener": [8, 12, 16, 26], "boxgen": 8, "box": 8, "mesh": [8, 14, 16], "planerectquad": 8, "plane": 8, "rectangular": 8, "cubit": 8, "findclosestnod": 8, "find": 8, "closest": 8, "executepythoncod": 8, "script": 8, "model": [8, 12, 15, 24, 26], "us": [8, 12, 26], "python": 8, "document": 9, "inputfil": 10, "driven": 10, "simul": [10, 16, 25, 30], "journal": 11, "analyticalfield": [12, 26], "an": [12, 26], "configureplot": [12, 19, 26], "custom": [12, 26], "figur": [12, 26], "ax": [12, 26], "definit": [12, 13, 26], "": [12, 26], "elset": [12, 26], "set": [12, 22, 24, 26], "exportplot": [12, 19, 26], "export": [12, 16, 26], "fieldoutput": [12, 26], "which": [12, 26], "i": [12, 26], "outputmanag": [12, 16, 26], "includ": [12, 26], "load": [12, 24, 26], "extra": [12, 26], "inp": [12, 26], "file": [12, 16, 26, 30], "fragment": [12, 26], "rel": [12, 26], "path": [12, 26], "current": [12, 23, 26], "job": [12, 26], "analysi": [12, 26], "materi": [12, 13, 24, 26], "modelgener": [12, 26], "from": [12, 26, 27], "modul": [12, 26], "nset": [12, 26], "parameteridentif": [12, 26], "identifi": [12, 26], "paramet": [12, 26], "given": [12, 26], "x": [12, 26], "y": [12, 26], "data": [12, 16, 26], "section": [12, 21, 26], "step": [12, 24, 25, 26, 27, 31], "surfac": [12, 24, 26], "updateconfigur": [12, 26], "updat": [12, 24, 26], "configur": [12, 26, 31], "creat": 14, "finit": [14, 15], "femodel": 15, "classic": [15, 25], "ensight": 16, "gold": 16, "format": [16, 27], "monitor": 16, "quantiti": 16, "termin": 16, "meshplot": 16, "matplotlib": 16, "fractureenergyintegr": 16, "determin": 16, "fractur": 16, "energi": 16, "plotalongpath": 16, "plot": [16, 19], "result": [16, 27], "along": 16, "line": 16, "conditionalstop": 16, "condit": [16, 24], "stop": 16, "becom": 16, "true": 16, "statusfil": 16, "write": 16, "statu": 16, "meshdatatofil": 16, "computetimemonitor": 16, "print": 16, "comput": 16, "time": [16, 27], "per": 16, "increment": 16, "parallel": [17, 23], "phenomena": 18, "point": 20, "solver": 23, "avail": 23, "nist": 23, "nonlinear": 23, "implicit": 23, "static": 23, "nistparallelformarmotel": 23, "nistparclength": 23, "arc": 23, "length": 23, "action": 24, "bodyforc": 24, "dirichlet": 24, "standard": 24, "bc": 24, "distributedload": 24, "distribut": 24, "geostat": 24, "stress": 24, "state": 24, "indirectcontrol": 24, "displac": 24, "indirectcontractioncontrol": 24, "contract": 24, "ring": 24, "initializemateri": 24, "initi": 24, "modelupd": 24, "nodeforc": 24, "concentr": 24, "forc": 24, "setfield": 24, "prescrib": 24, "setinitialcondit": 24, "adaptivestep": 25, "adp": 25, "transient": 25, "input": [26, 30], "syntax": 26, "keyword": 26, "util": 27, "matrix": 27, "convers": 27, "coo": 27, "spars": 27, "csr": 27, "gather": 27, "effici": 27, "adapt": 27, "variabl": 28, "featur": 29, "welcom": 30, "edelweissf": [30, 31], "execut": 30, "exampl": 30, "indic": 30, "tabl": 30, "instal": 31, "build": 31, "tldr": 31, "prerequisit": 32, "public": 33}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributors": [[0, "contributors"]], "Analytical fields": [[1, "module-edelweissfe.config.analyticalfields"]], "scalarexpression - Field defined by expression": [[1, "scalarexpression-field-defined-by-expression"]], "Options": [[1, "id1"], [1, "id3"], [2, "id7"], [2, "id9"]], "randomscalar - A random field": [[1, "randomscalar-a-random-field"]], "Implementing your own fields": [[1, "implementing-your-own-fields"]], "Constraints": [[2, "module-edelweissfe.config.constraints"]], "equalvaluelagrangian - Constrain nodal values to equal values": [[2, "equalvaluelagrangian-constrain-nodal-values-to-equal-values"]], "Options:": [[2, "id1"], [2, "id3"], [2, "id5"], [6, "id17"], [8, "id3"], [8, "id5"], [8, "id7"], [8, "id9"], [8, "id10"], [16, "id2"], [16, "id4"], [16, "id5"], [16, "id7"], [16, "id8"], [16, "id10"], [16, "id12"], [16, "id14"], [16, "id16"], [24, "id1"], [24, "id3"], [24, "id4"], [24, "id6"], [24, "id8"], [24, "id10"], [24, "id11"], [24, "id12"], [24, "id14"], [24, "id15"]], "equalvaluepenalty - Constrain nodal values to equal values": [[2, "equalvaluepenalty-constrain-nodal-values-to-equal-values"]], "linearizedrigidbody - Linearized rigid body constraints in 2D": [[2, "linearizedrigidbody-linearized-rigid-body-constraints-in-2d"]], "rigidbody - Geometrically exact rigid body constraints in 3D": [[2, "rigidbody-geometrically-exact-rigid-body-constraints-in-3d"]], "penaltyindirectcontrol - Penalty based indirect control": [[2, "penaltyindirectcontrol-penalty-based-indirect-control"]], "Implementing your own constraints": [[2, "implementing-your-own-constraints"]], "DOF manager": [[3, "dof-manager"]], "Elements": [[4, "elements"]], "Provider marmot": [[4, "provider-marmot"]], "Provider marmotsingleqpelement": [[4, "provider-marmotsingleqpelement"]], "Implementing your own elements": [[4, "implementing-your-own-elements"]], "Exceptions": [[5, "exceptions"]], "Field outputs": [[6, "field-outputs"]], "Fields": [[7, "fields"]], "NodeField - A physical field on nodes": [[7, "module-edelweissfe.fields.nodefield"]], "Generators": [[8, "generators"]], "boxgen - A 3D box mesh generator": [[8, "boxgen-a-3d-box-mesh-generator"]], "planerectquad - A 2D plane rectangular mesh generator": [[8, "planerectquad-a-2d-plane-rectangular-mesh-generator"]], "cubit - A cubit mesh generator": [[8, "cubit-a-cubit-mesh-generator"]], "findclosestnode - Find the closest node": [[8, "findclosestnode-find-the-closest-node"]], "executepythoncode - Script model generation using Python": [[8, "executepythoncode-script-model-generation-using-python"]], "Documentation": [[9, "documentation"]], "Inputfile driven simulations": [[10, "inputfile-driven-simulations"]], "Journal": [[11, "journal"]], "*analyticalfield : define an analytical field": [[12, "id1"], [26, "id1"]], "*configureplots : customize the figures and axes": [[12, "id2"], [26, "id2"]], "*constraint : define a constraint": [[12, "id3"], [26, "id3"]], "*element : definition of element(s)": [[12, "id4"], [26, "id4"]], "*elset : definition of an element set": [[12, "id5"], [26, "id5"]], "*exportplots : export your figures": [[12, "id6"], [26, "id6"]], "*fieldoutput : define fieldoutput, which is used by outputmanagers": [[12, "id7"], [26, "id7"]], "*include : (optional) load extra .inp file (fragment), use relative path to current .inp": [[12, "id8"], [26, "id8"]], "*job : definition of an analysis job": [[12, "id9"], [26, "id9"]], "*material : definition of a material": [[12, "id10"], [13, "id1"], [26, "id10"]], "*modelgenerator : define a model generator, loaded from a module": [[12, "id11"], [26, "id11"]], "*node : definition of nodes": [[12, "id12"], [26, "id12"]], "*nset : definition of an element set": [[12, "id13"], [26, "id13"]], "*output : define an output module": [[12, "id14"], [26, "id14"]], "*parameteridentification : identify material parameter for given x and y data": [[12, "id15"], [26, "id15"]], "*section : definition of an section": [[12, "id16"], [26, "id16"]], "*step : definition of job steps": [[12, "id17"], [26, "id17"]], "*surface : definition of surface set": [[12, "id18"], [26, "id18"]], "*updateconfiguration : update an configuration": [[12, "id19"], [26, "id19"]], "Materials": [[13, "materials"]], "Creating finite element meshes": [[14, "creating-finite-element-meshes"]], "Models": [[15, "models"]], "FEModel - A classical finite element model": [[15, "module-edelweissfe.models.femodel"]], "Outputmanagers": [[16, "module-edelweissfe.config.outputmanagers"]], "ensight - Export to Ensight Gold format": [[16, "module-edelweissfe.outputmanagers.ensight"]], "monitor - Monitor quantities in the terminal": [[16, "module-edelweissfe.outputmanagers.monitor"]], "meshplot - Export to matplotlib": [[16, "module-edelweissfe.outputmanagers.meshplot"]], "fractureenergyintegrator - Determine the fracture energy": [[16, "module-edelweissfe.outputmanagers.fractureenergyintegrator"]], "plotalongpath - Plot a result along a line": [[16, "module-edelweissfe.outputmanagers.plotalongpath"]], "conditionalstop - Conditional stop if expression becomes true": [[16, "module-edelweissfe.outputmanagers.conditionalstop"]], "statusfile - Write the status of the simulation to a file": [[16, "module-edelweissfe.outputmanagers.statusfile"]], "meshdatatofile - Write the (generated) mesh data to a file": [[16, "module-edelweissfe.outputmanagers.meshdatatofile"]], "computetimemonitor - Print and write compute times per increment": [[16, "module-edelweissfe.outputmanagers.computetimemonitor"]], "Parallelization": [[17, "parallelization"]], "Physical phenomena": [[18, "physical-phenomena"]], "Plotting": [[19, "plotting"]], "Options ``*configurePlots``:": [[19, "id1"]], "Options ``*exportPlots``:": [[19, "id2"]], "Points": [[20, "points"]], "Sections": [[21, "sections"]], "Sets": [[22, "sets"]], "Solvers": [[23, "module-edelweissfe.config.solvers"]], "Currently available:": [[23, "id1"]], "NIST - Nonlinear Implicit Static": [[23, "module-edelweissfe.solvers.nonlinearimplicitstatic"]], "NISTParallelForMarmotElements - Nonlinear Implicit Static (parallel)": [[23, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelmk2"]], "NISTPArcLength - Nonlinear Implicit Static - Arc length": [[23, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelarclength"]], "Step actions": [[24, "module-edelweissfe.config.stepactions"]], "bodyforce - Bodyforce loads": [[24, "bodyforce-bodyforce-loads"]], "dirichlet - Standard dirichlet BC": [[24, "dirichlet-standard-dirichlet-bc"]], "distributedload - Distributed surface loads": [[24, "distributedload-distributed-surface-loads"]], "geostatic - Geostatic stress states": [[24, "geostatic-geostatic-stress-states"]], "indirectcontrol - Indirect displacement control": [[24, "indirectcontrol-indirect-displacement-control"]], "indirectcontractioncontrol - Indirect displacement \u2013 contraction ring control": [[24, "indirectcontractioncontrol-indirect-displacement-contraction-ring-control"]], "initializematerial - Initialize materials": [[24, "initializematerial-initialize-materials"]], "modelupdate - Update the model": [[24, "modelupdate-update-the-model"]], "nodeforces - Concentrated node forces": [[24, "nodeforces-concentrated-node-forces"]], "setfield - Set a field to a prescribed value": [[24, "setfield-set-a-field-to-a-prescribed-value"]], "setinitialconditions - Set initial conditions to elements": [[24, "setinitialconditions-set-initial-conditions-to-elements"]], "Implementing your own step actions": [[24, "implementing-your-own-step-actions"]], "Steps": [[25, "module-edelweissfe.steps.base.stepbase"]], "AdaptiveStep - A classical adpative step for transient simulations": [[25, "module-edelweissfe.steps.adaptivestep"]], "Input file syntax": [[26, "input-file-syntax"]], "Keywords": [[26, "keywords"]], "Utilities": [[27, "utilities"]], "Matrix conversion from COO sparse format to CSR format": [[27, "matrix-conversion-from-coo-sparse-format-to-csr-format"]], "Gathering efficiently of element results": [[27, "gathering-efficiently-of-element-results"]], "Adaptive time stepping": [[27, "adaptive-time-stepping"]], "Variables": [[28, "variables"]], "Features": [[29, "features"]], "Welcome to EdelweissFE": [[30, "welcome-to-edelweissfe"]], "Execute a simulation": [[30, "execute-a-simulation"]], "Example input file": [[30, "example-input-file"]], "Indices and tables": [[30, "indices-and-tables"]], "Installation": [[31, "installation"]], "Marmot": [[31, "marmot"]], "Configuration": [[31, "configuration"]], "Building EdelweissFE": [[31, "building-edelweissfe"]], "TLDR": [[31, "tldr"]], "Installation steps": [[31, "installation-steps"]], "Prerequisites": [[32, "prerequisites"]], "Publications": [[33, "publications"]]}, "indexentries": {"analyticalfield (class in edelweissfe.analyticalfields.base.analyticalfieldbase)": [[1, "edelweissfe.analyticalfields.base.analyticalfieldbase.AnalyticalField"]], "edelweissfe.analyticalfields.base.analyticalfieldbase": [[1, "module-edelweissfe.analyticalfields.base.analyticalfieldbase"]], "edelweissfe.analyticalfields.randomscalar": [[1, "module-edelweissfe.analyticalfields.randomscalar"]], "edelweissfe.analyticalfields.scalarexpression": [[1, "module-edelweissfe.analyticalfields.scalarexpression"]], "edelweissfe.config.analyticalfields": [[1, "module-edelweissfe.config.analyticalfields"]], "evaluateatcoordinates() (edelweissfe.analyticalfields.base.analyticalfieldbase.analyticalfield method)": [[1, "edelweissfe.analyticalfields.base.analyticalfieldbase.AnalyticalField.evaluateAtCoordinates"]], "module": [[1, "module-edelweissfe.analyticalfields.base.analyticalfieldbase"], [1, "module-edelweissfe.analyticalfields.randomscalar"], [1, "module-edelweissfe.analyticalfields.scalarexpression"], [1, "module-edelweissfe.config.analyticalfields"], [2, "module-edelweissfe.config.constraints"], [2, "module-edelweissfe.constraints.base.constraintbase"], [2, "module-edelweissfe.constraints.equalvaluelagrangian"], [2, "module-edelweissfe.constraints.equalvaluepenalty"], [2, "module-edelweissfe.constraints.linearizedrigidbody"], [2, "module-edelweissfe.constraints.penaltyindirectcontrol"], [2, "module-edelweissfe.constraints.rigidbody"], [3, "module-edelweissfe.numerics.dofmanager"], [4, "module-edelweissfe.config.elementlibrary"], [4, "module-edelweissfe.elements.base.baseelement"], [5, "module-edelweissfe.utils.exceptions"], [6, "module-edelweissfe.utils.fieldoutput"], [7, "module-edelweissfe.fields.nodefield"], [8, "module-edelweissfe.config.generators"], [8, "module-edelweissfe.generators.boxgen"], [8, "module-edelweissfe.generators.cubit"], [8, "module-edelweissfe.generators.executepythoncode"], [8, "module-edelweissfe.generators.findclosestnode"], [8, "module-edelweissfe.generators.planerectquad"], [10, "module-edelweissfe.drivers.inputfiledrivensimulation"], [11, "module-edelweissfe.journal.journal"], [14, "module-edelweissfe.generators.abqmodelconstructor"], [15, "module-edelweissfe.models.femodel"], [16, "module-edelweissfe.config.outputmanagers"], [16, "module-edelweissfe.outputmanagers.computetimemonitor"], [16, "module-edelweissfe.outputmanagers.conditionalstop"], [16, "module-edelweissfe.outputmanagers.ensight"], [16, "module-edelweissfe.outputmanagers.fractureenergyintegrator"], [16, "module-edelweissfe.outputmanagers.meshdatatofile"], [16, "module-edelweissfe.outputmanagers.meshplot"], [16, "module-edelweissfe.outputmanagers.monitor"], [16, "module-edelweissfe.outputmanagers.plotalongpath"], [16, "module-edelweissfe.outputmanagers.statusfile"], [18, "module-edelweissfe.config.phenomena"], [19, "module-edelweissfe.utils.plotter"], [20, "module-edelweissfe.points.node"], [21, "module-edelweissfe.config.sections"], [22, "module-edelweissfe.sets.elementset"], [22, "module-edelweissfe.sets.nodeset"], [22, "module-edelweissfe.sets.orderedset"], [23, "module-edelweissfe.config.solvers"], [23, "module-edelweissfe.solvers.nonlinearimplicitstatic"], [23, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelarclength"], [23, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelmk2"], [24, "module-edelweissfe.config.stepactions"], [24, "module-edelweissfe.stepactions.base.stepactionbase"], [24, "module-edelweissfe.stepactions.bodyforce"], [24, "module-edelweissfe.stepactions.dirichlet"], [24, "module-edelweissfe.stepactions.distributedload"], [24, "module-edelweissfe.stepactions.geostatic"], [24, "module-edelweissfe.stepactions.indirectcontractioncontrol"], [24, "module-edelweissfe.stepactions.indirectcontrol"], [24, "module-edelweissfe.stepactions.initializematerial"], [24, "module-edelweissfe.stepactions.modelupdate"], [24, "module-edelweissfe.stepactions.nodeforces"], [24, "module-edelweissfe.stepactions.setfield"], [24, "module-edelweissfe.stepactions.setinitialconditions"], [25, "module-edelweissfe.steps.adaptivestep"], [25, "module-edelweissfe.steps.base.stepbase"], [26, "module-edelweissfe.utils.inputfileparser"], [28, "module-edelweissfe.variables.fieldvariable"], [28, "module-edelweissfe.variables.scalarvariable"]], "constraintbase (class in edelweissfe.constraints.base.constraintbase)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase"]], "applyconstraint() (edelweissfe.constraints.base.constraintbase.constraintbase method)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.applyConstraint"]], "assignadditionalscalarvariables() (edelweissfe.constraints.base.constraintbase.constraintbase method)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.assignAdditionalScalarVariables"]], "edelweissfe.config.constraints": [[2, "module-edelweissfe.config.constraints"]], "edelweissfe.constraints.base.constraintbase": [[2, "module-edelweissfe.constraints.base.constraintbase"]], "edelweissfe.constraints.equalvaluelagrangian": [[2, "module-edelweissfe.constraints.equalvaluelagrangian"]], "edelweissfe.constraints.equalvaluepenalty": [[2, "module-edelweissfe.constraints.equalvaluepenalty"]], "edelweissfe.constraints.linearizedrigidbody": [[2, "module-edelweissfe.constraints.linearizedrigidbody"]], "edelweissfe.constraints.penaltyindirectcontrol": [[2, "module-edelweissfe.constraints.penaltyindirectcontrol"]], "edelweissfe.constraints.rigidbody": [[2, "module-edelweissfe.constraints.rigidbody"]], "fieldsonnodes (edelweissfe.constraints.base.constraintbase.constraintbase property)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.fieldsOnNodes"]], "getnumberofadditionalneededscalarvariables() (edelweissfe.constraints.base.constraintbase.constraintbase method)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.getNumberOfAdditionalNeededScalarVariables"]], "ndof (edelweissfe.constraints.base.constraintbase.constraintbase property)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.nDof"]], "nodes (edelweissfe.constraints.base.constraintbase.constraintbase property)": [[2, "edelweissfe.constraints.base.constraintbase.ConstraintBase.nodes"]], "dofmanager (class in edelweissfe.numerics.dofmanager)": [[3, "edelweissfe.numerics.dofmanager.DofManager"]], "dofvector (class in edelweissfe.numerics.dofmanager)": [[3, "edelweissfe.numerics.dofmanager.DofVector"]], "vijsystemmatrix (class in edelweissfe.numerics.dofmanager)": [[3, "edelweissfe.numerics.dofmanager.VIJSystemMatrix"]], "constructdofvector() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.constructDofVector"]], "constructvijsystemmatrix() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.constructVIJSystemMatrix"]], "edelweissfe.numerics.dofmanager": [[3, "module-edelweissfe.numerics.dofmanager"]], "getnodeforindexindofvector() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.getNodeForIndexInDofVector"]], "writedofvectortonodefield() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.writeDofVectorToNodeField"]], "writenodefieldtodofvector() (edelweissfe.numerics.dofmanager.dofmanager method)": [[3, "edelweissfe.numerics.dofmanager.DofManager.writeNodeFieldToDofVector"]], "baseelement (class in edelweissfe.elements.base.baseelement)": [[4, "edelweissfe.elements.base.baseelement.BaseElement"]], "marmotelementwrapper (class in edelweissfe.elements.marmotelement.element)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper"]], "marmotmaterialwrappingelement (class in edelweissfe.elements.marmotsingleqpelement.element)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement"]], "acceptlaststate() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.acceptLastState"]], "acceptlaststate() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.acceptLastState"]], "acceptlaststate() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.acceptLastState"]], "computebodyforce() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.computeBodyForce"]], "computebodyforce() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.computeBodyForce"]], "computebodyforce() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.computeBodyForce"]], "computedistributedload() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.computeDistributedLoad"]], "computedistributedload() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.computeDistributedLoad"]], "computedistributedload() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.computeDistributedLoad"]], "computeyourself() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.computeYourself"]], "computeyourself() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.computeYourself"]], "computeyourself() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.computeYourself"]], "dofindicespermutation (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.dofIndicesPermutation"]], "dofindicespermutation (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.dofIndicesPermutation"]], "edelweissfe.config.elementlibrary": [[4, "module-edelweissfe.config.elementlibrary"]], "edelweissfe.elements.base.baseelement": [[4, "module-edelweissfe.elements.base.baseelement"]], "elnumber (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.elNumber"]], "elnumber (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.elNumber"]], "ensighttype (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.ensightType"]], "ensighttype (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.ensightType"]], "fields (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.fields"]], "fields (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.fields"]], "getcoordinatesatcenter() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getCoordinatesAtCenter"]], "getcoordinatesatcenter() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getCoordinatesAtCenter"]], "getcoordinatesatcenter() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getCoordinatesAtCenter"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getCoordinatesAtQuadraturePoints"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getCoordinatesAtQuadraturePoints"]], "getcoordinatesatquadraturepoints() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getCoordinatesAtQuadraturePoints"]], "getelementclass() (in module edelweissfe.config.elementlibrary)": [[4, "edelweissfe.config.elementlibrary.getElementClass"]], "getnumberofquadraturepoints() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getNumberOfQuadraturePoints"]], "getnumberofquadraturepoints() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getNumberOfQuadraturePoints"]], "getnumberofquadraturepoints() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getNumberOfQuadraturePoints"]], "getresultarray() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.getResultArray"]], "getresultarray() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.getResultArray"]], "getresultarray() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.getResultArray"]], "initializeelement() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.initializeElement"]], "initializeelement() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.initializeElement"]], "initializeelement() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.initializeElement"]], "ndof (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.nDof"]], "ndof (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.nDof"]], "nnodes (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.nNodes"]], "nnodes (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.nNodes"]], "nodes (edelweissfe.elements.base.baseelement.baseelement property)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.nodes"]], "nodes (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement property)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.nodes"]], "resettolastvalidstate() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.resetToLastValidState"]], "resettolastvalidstate() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.resetToLastValidState"]], "resettolastvalidstate() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.resetToLastValidState"]], "setinitialcondition() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setInitialCondition"]], "setinitialcondition() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setInitialCondition"]], "setinitialcondition() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setInitialCondition"]], "setmaterial() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setMaterial"]], "setmaterial() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setMaterial"]], "setmaterial() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setMaterial"]], "setnodes() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setNodes"]], "setnodes() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setNodes"]], "setnodes() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setNodes"]], "setproperties() (edelweissfe.elements.base.baseelement.baseelement method)": [[4, "edelweissfe.elements.base.baseelement.BaseElement.setProperties"]], "setproperties() (edelweissfe.elements.marmotelement.element.marmotelementwrapper method)": [[4, "edelweissfe.elements.marmotelement.element.MarmotElementWrapper.setProperties"]], "setproperties() (edelweissfe.elements.marmotsingleqpelement.element.marmotmaterialwrappingelement method)": [[4, "edelweissfe.elements.marmotsingleqpelement.element.MarmotMaterialWrappingElement.setProperties"]], "conditionalstop": [[5, "edelweissfe.utils.exceptions.ConditionalStop"]], "cutbackrequest": [[5, "edelweissfe.utils.exceptions.CutbackRequest"]], "divergingsolution": [[5, "edelweissfe.utils.exceptions.DivergingSolution"]], "inputexecption": [[5, "edelweissfe.utils.exceptions.InputExecption"]], "reachedmaxincrements": [[5, "edelweissfe.utils.exceptions.ReachedMaxIncrements"]], "reachedmaxiterations": [[5, "edelweissfe.utils.exceptions.ReachedMaxIterations"]], "reachedminincrementsize": [[5, "edelweissfe.utils.exceptions.ReachedMinIncrementSize"]], "stepfailed": [[5, "edelweissfe.utils.exceptions.StepFailed"]], "wrongdomain": [[5, "edelweissfe.utils.exceptions.WrongDomain"]], "edelweissfe.utils.exceptions": [[5, "module-edelweissfe.utils.exceptions"]], "elementfieldoutput (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.ElementFieldOutput"]], "expressionfieldoutput (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.ExpressionFieldOutput"]], "fieldoutputcontroller (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController"]], "nodefieldoutput (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput.NodeFieldOutput"]], "_fieldoutputbase (class in edelweissfe.utils.fieldoutput)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase"]], "addexpressionfieldoutput() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.addExpressionFieldOutput"]], "addperelementfieldoutput() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.addPerElementFieldOutput"]], "addpernodefieldoutput() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.addPerNodeFieldOutput"]], "edelweissfe.utils.fieldoutput": [[6, "module-edelweissfe.utils.fieldoutput"]], "finalizeincrement() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.finalizeIncrement"]], "finalizeincrement() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.finalizeIncrement"]], "finalizejob() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.finalizeJob"]], "finalizestep() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.finalizeStep"]], "getlastresult() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.getLastResult"]], "getresulthistory() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.getResultHistory"]], "gettimehistory() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.getTimeHistory"]], "initializejob() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.initializeJob"]], "initializestep() (edelweissfe.utils.fieldoutput.fieldoutputcontroller method)": [[6, "edelweissfe.utils.fieldoutput.FieldOutputController.initializeStep"]], "setresults() (edelweissfe.utils.fieldoutput.elementfieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.ElementFieldOutput.setResults"]], "setresults() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.setResults"]], "updateresults() (edelweissfe.utils.fieldoutput.elementfieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.ElementFieldOutput.updateResults"]], "updateresults() (edelweissfe.utils.fieldoutput.expressionfieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.ExpressionFieldOutput.updateResults"]], "updateresults() (edelweissfe.utils.fieldoutput.nodefieldoutput method)": [[6, "edelweissfe.utils.fieldoutput.NodeFieldOutput.updateResults"]], "writelastresult() (edelweissfe.utils.fieldoutput._fieldoutputbase method)": [[6, "edelweissfe.utils.fieldoutput._FieldOutputBase.writeLastResult"]], "nodefield (class in edelweissfe.fields.nodefield)": [[7, "edelweissfe.fields.nodefield.NodeField"]], "nodefieldsubset (class in edelweissfe.fields.nodefield)": [[7, "edelweissfe.fields.nodefield.NodeFieldSubset"]], "copyentriesfromother() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.copyEntriesFromOther"]], "createfieldvalueentry() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.createFieldValueEntry"]], "createfieldvalueentry() (edelweissfe.fields.nodefield.nodefieldsubset method)": [[7, "edelweissfe.fields.nodefield.NodeFieldSubset.createFieldValueEntry"]], "edelweissfe.fields.nodefield": [[7, "module-edelweissfe.fields.nodefield"]], "subset() (edelweissfe.fields.nodefield.nodefield method)": [[7, "edelweissfe.fields.nodefield.NodeField.subset"]], "subset() (edelweissfe.fields.nodefield.nodefieldsubset method)": [[7, "edelweissfe.fields.nodefield.NodeFieldSubset.subset"]], "edelweissfe.config.generators": [[8, "module-edelweissfe.config.generators"]], "edelweissfe.generators.boxgen": [[8, "module-edelweissfe.generators.boxgen"]], "edelweissfe.generators.cubit": [[8, "module-edelweissfe.generators.cubit"]], "edelweissfe.generators.executepythoncode": [[8, "module-edelweissfe.generators.executepythoncode"]], "edelweissfe.generators.findclosestnode": [[8, "module-edelweissfe.generators.findclosestnode"]], "edelweissfe.generators.planerectquad": [[8, "module-edelweissfe.generators.planerectquad"]], "edelweissfe.drivers.inputfiledrivensimulation": [[10, "module-edelweissfe.drivers.inputfiledrivensimulation"]], "finiteelementsimulation() (in module edelweissfe.drivers.inputfiledrivensimulation)": [[10, "edelweissfe.drivers.inputfiledrivensimulation.finiteElementSimulation"]], "journal (class in edelweissfe.journal.journal)": [[11, "edelweissfe.journal.journal.Journal"]], "edelweissfe.journal.journal": [[11, "module-edelweissfe.journal.journal"]], "errormessage() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.errorMessage"]], "message() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.message"]], "printseperationline() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.printSeperationLine"]], "printtable() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.printTable"]], "setnewlinewidth() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.setNewLineWidth"]], "setverbose() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.setVerbose"]], "squelch() (edelweissfe.journal.journal.journal method)": [[11, "edelweissfe.journal.journal.Journal.squelch"]], "edelweissfe.generators.abqmodelconstructor": [[14, "module-edelweissfe.generators.abqmodelconstructor"]], "femodel (class in edelweissfe.models.femodel)": [[15, "edelweissfe.models.femodel.FEModel"]], "additionalparameters (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.additionalParameters"]], "advancetotime() (edelweissfe.models.femodel.femodel method)": [[15, "edelweissfe.models.femodel.FEModel.advanceToTime"]], "analyticalfields (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.analyticalFields"]], "constraints (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.constraints"]], "domainsize (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.domainSize"]], "edelweissfe.models.femodel": [[15, "module-edelweissfe.models.femodel"]], "elementsets (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.elementSets"]], "elements (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.elements"]], "materials (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.materials"]], "nodefields (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.nodeFields"]], "nodesets (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.nodeSets"]], "nodes (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.nodes"]], "prepareyourself() (edelweissfe.models.femodel.femodel method)": [[15, "edelweissfe.models.femodel.FEModel.prepareYourself"]], "scalarvariables (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.scalarVariables"]], "sections (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.sections"]], "surfaces (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.surfaces"]], "time (edelweissfe.models.femodel.femodel attribute)": [[15, "edelweissfe.models.femodel.FEModel.time"]], "edelweissfe.config.outputmanagers": [[16, "module-edelweissfe.config.outputmanagers"]], "edelweissfe.outputmanagers.computetimemonitor": [[16, "module-edelweissfe.outputmanagers.computetimemonitor"]], "edelweissfe.outputmanagers.conditionalstop": [[16, "module-edelweissfe.outputmanagers.conditionalstop"]], "edelweissfe.outputmanagers.ensight": [[16, "module-edelweissfe.outputmanagers.ensight"]], "edelweissfe.outputmanagers.fractureenergyintegrator": [[16, "module-edelweissfe.outputmanagers.fractureenergyintegrator"]], "edelweissfe.outputmanagers.meshdatatofile": [[16, "module-edelweissfe.outputmanagers.meshdatatofile"]], "edelweissfe.outputmanagers.meshplot": [[16, "module-edelweissfe.outputmanagers.meshplot"]], "edelweissfe.outputmanagers.monitor": [[16, "module-edelweissfe.outputmanagers.monitor"]], "edelweissfe.outputmanagers.plotalongpath": [[16, "module-edelweissfe.outputmanagers.plotalongpath"]], "edelweissfe.outputmanagers.statusfile": [[16, "module-edelweissfe.outputmanagers.statusfile"]], "edelweissfe.config.phenomena": [[18, "module-edelweissfe.config.phenomena"]], "plotter (class in edelweissfe.utils.plotter)": [[19, "edelweissfe.utils.plotter.Plotter"]], "configureplotter() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.configurePlotter"]], "edelweissfe.utils.plotter": [[19, "module-edelweissfe.utils.plotter"]], "exportfigure() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.exportFigure"]], "exportplots() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.exportPlots"]], "finalize() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.finalize"]], "getax() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.getAx"]], "getfig() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.getFig"]], "plotxydata() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.plotXYData"]], "show() (edelweissfe.utils.plotter.plotter method)": [[19, "edelweissfe.utils.plotter.Plotter.show"]], "node (class in edelweissfe.points.node)": [[20, "edelweissfe.points.node.Node"]], "edelweissfe.points.node": [[20, "module-edelweissfe.points.node"]], "edelweissfe.config.sections": [[21, "module-edelweissfe.config.sections"]], "elementset (class in edelweissfe.sets.elementset)": [[22, "edelweissfe.sets.elementset.ElementSet"]], "immutableorderedset (class in edelweissfe.sets.orderedset)": [[22, "edelweissfe.sets.orderedset.ImmutableOrderedSet"]], "nodeset (class in edelweissfe.sets.nodeset)": [[22, "edelweissfe.sets.nodeset.NodeSet"]], "orderedset (class in edelweissfe.sets.orderedset)": [[22, "edelweissfe.sets.orderedset.OrderedSet"]], "add() (edelweissfe.sets.orderedset.immutableorderedset method)": [[22, "edelweissfe.sets.orderedset.ImmutableOrderedSet.add"]], "add() (edelweissfe.sets.orderedset.orderedset method)": [[22, "edelweissfe.sets.orderedset.OrderedSet.add"]], "checkobjecttype() (edelweissfe.sets.orderedset.orderedset method)": [[22, "edelweissfe.sets.orderedset.OrderedSet.checkObjectType"]], "edelweissfe.sets.elementset": [[22, "module-edelweissfe.sets.elementset"]], "edelweissfe.sets.nodeset": [[22, "module-edelweissfe.sets.nodeset"]], "edelweissfe.sets.orderedset": [[22, "module-edelweissfe.sets.orderedset"]], "forceiter() (edelweissfe.sets.orderedset.orderedset method)": [[22, "edelweissfe.sets.orderedset.OrderedSet.forceIter"]], "nist (class in edelweissfe.solvers.nonlinearimplicitstatic)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST"]], "nistparclength (class in edelweissfe.solvers.nonlinearimplicitstaticparallelarclength)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength"]], "nistparallel (class in edelweissfe.solvers.nonlinearimplicitstaticparallelmk2)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel"]], "applydirichlet() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyDirichlet"]], "applydirichletk() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyDirichletK"]], "applydirichletk() (edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.nistparallel method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel.applyDirichletK"]], "applystepactionsatincrementstart() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyStepActionsAtIncrementStart"]], "applystepactionsatstepend() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyStepActionsAtStepEnd"]], "applystepactionsatstepend() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.applyStepActionsAtStepEnd"]], "applystepactionsatstepstart() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.applyStepActionsAtStepStart"]], "assembleconstraints() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.assembleConstraints"]], "assembleloads() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.assembleLoads"]], "assemblestiffnesscsr() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.assembleStiffnessCSR"]], "checkconvergence() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.checkConvergence"]], "checkdivergingsolution() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.checkDivergingSolution"]], "computebodyforces() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeBodyForces"]], "computedistributedloads() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeDistributedLoads"]], "computeelements() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeElements"]], "computeelements() (edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.nistparallel method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel.computeElements"]], "computespatialaveragedfluxes() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.computeSpatialAveragedFluxes"]], "edelweissfe.config.solvers": [[23, "module-edelweissfe.config.solvers"]], "edelweissfe.solvers.nonlinearimplicitstatic": [[23, "module-edelweissfe.solvers.nonlinearimplicitstatic"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength": [[23, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelarclength"]], "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2": [[23, "module-edelweissfe.solvers.nonlinearimplicitstaticparallelmk2"]], "extrapolatelastincrement() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.extrapolateLastIncrement"]], "extrapolatelastincrement() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.extrapolateLastIncrement"]], "getsolverbyname() (in module edelweissfe.config.solvers)": [[23, "edelweissfe.config.solvers.getSolverByName"]], "linearsolve() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.linearSolve"]], "printresidualoutliernodes() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.printResidualOutlierNodes"]], "solveincrement() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.solveIncrement"]], "solveincrement() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.solveIncrement"]], "solvestep() (edelweissfe.solvers.nonlinearimplicitstatic.nist method)": [[23, "edelweissfe.solvers.nonlinearimplicitstatic.NIST.solveStep"]], "solvestep() (edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.nistparclength method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelarclength.NISTPArcLength.solveStep"]], "solvestep() (edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.nistparallel method)": [[23, "edelweissfe.solvers.nonlinearimplicitstaticparallelmk2.NISTParallel.solveStep"]], "stepactionbase (class in edelweissfe.stepactions.base.stepactionbase)": [[24, "edelweissfe.stepactions.base.stepactionbase.StepActionBase"]], "applyatincrementstart() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[24, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.applyAtIncrementStart"]], "applyatstepend() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[24, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.applyAtStepEnd"]], "applyatstepstart() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[24, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.applyAtStepStart"]], "edelweissfe.config.stepactions": [[24, "module-edelweissfe.config.stepactions"]], "edelweissfe.stepactions.base.stepactionbase": [[24, "module-edelweissfe.stepactions.base.stepactionbase"]], "edelweissfe.stepactions.bodyforce": [[24, "module-edelweissfe.stepactions.bodyforce"]], "edelweissfe.stepactions.dirichlet": [[24, "module-edelweissfe.stepactions.dirichlet"]], "edelweissfe.stepactions.distributedload": [[24, "module-edelweissfe.stepactions.distributedload"]], "edelweissfe.stepactions.geostatic": [[24, "module-edelweissfe.stepactions.geostatic"]], "edelweissfe.stepactions.indirectcontractioncontrol": [[24, "module-edelweissfe.stepactions.indirectcontractioncontrol"]], "edelweissfe.stepactions.indirectcontrol": [[24, "module-edelweissfe.stepactions.indirectcontrol"]], "edelweissfe.stepactions.initializematerial": [[24, "module-edelweissfe.stepactions.initializematerial"]], "edelweissfe.stepactions.modelupdate": [[24, "module-edelweissfe.stepactions.modelupdate"]], "edelweissfe.stepactions.nodeforces": [[24, "module-edelweissfe.stepactions.nodeforces"]], "edelweissfe.stepactions.setfield": [[24, "module-edelweissfe.stepactions.setfield"]], "edelweissfe.stepactions.setinitialconditions": [[24, "module-edelweissfe.stepactions.setinitialconditions"]], "updatestepaction() (edelweissfe.stepactions.base.stepactionbase.stepactionbase method)": [[24, "edelweissfe.stepactions.base.stepactionbase.StepActionBase.updateStepAction"]], "adaptivestep (class in edelweissfe.steps.adaptivestep)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep"]], "stepbase (class in edelweissfe.steps.base.stepbase)": [[25, "edelweissfe.steps.base.stepbase.StepBase"]], "criticaliter (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.criticalIter"]], "edelweissfe.steps.adaptivestep": [[25, "module-edelweissfe.steps.adaptivestep"]], "edelweissfe.steps.base.stepbase": [[25, "module-edelweissfe.steps.base.stepbase"]], "length (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.length"]], "maxgrowiter (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxGrowIter"]], "maxincrementsize (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxIncrementSize"]], "maxiter (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxIter"]], "maxnumberincrements (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.maxNumberIncrements"]], "minincrementsize (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.minIncrementSize"]], "number (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.number"]], "solve() (edelweissfe.steps.adaptivestep.adaptivestep method)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.solve"]], "solve() (edelweissfe.steps.base.stepbase.stepbase method)": [[25, "edelweissfe.steps.base.stepbase.StepBase.solve"]], "startincrementsize (edelweissfe.steps.adaptivestep.adaptivestep attribute)": [[25, "edelweissfe.steps.adaptivestep.AdaptiveStep.startIncrementSize"]], "edelweissfe.utils.inputfileparser": [[26, "module-edelweissfe.utils.inputfileparser"]], "parseinputfile() (in module edelweissfe.utils.inputfileparser)": [[26, "edelweissfe.utils.inputfileparser.parseInputFile"]], "printkeywords() (in module edelweissfe.utils.inputfileparser)": [[26, "edelweissfe.utils.inputfileparser.printKeywords"]], "printkeywordsrst() (in module edelweissfe.utils.inputfileparser)": [[26, "edelweissfe.utils.inputfileparser.printKeywordsRST"]], "adaptivetimestepper (class in edelweissfe.timesteppers.adaptivetimestepper)": [[27, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper"]], "csrgenerator (class in edelweissfe.numerics.csrgenerator)": [[27, "edelweissfe.numerics.csrgenerator.CSRGenerator"]], "elementresultcollector (class in edelweissfe.utils.elementresultcollector)": [[27, "edelweissfe.utils.elementresultcollector.ElementResultCollector"]], "discardandchangeincrement() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[27, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.discardAndChangeIncrement"]], "generatetimestep() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[27, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.generateTimeStep"]], "getcurrentresults() (edelweissfe.utils.elementresultcollector.elementresultcollector method)": [[27, "edelweissfe.utils.elementresultcollector.ElementResultCollector.getCurrentResults"]], "preventincrementincrease() (edelweissfe.timesteppers.adaptivetimestepper.adaptivetimestepper method)": [[27, "edelweissfe.timesteppers.adaptivetimestepper.AdaptiveTimeStepper.preventIncrementIncrease"]], "update() (edelweissfe.utils.elementresultcollector.elementresultcollector method)": [[27, "edelweissfe.utils.elementresultcollector.ElementResultCollector.update"]], "updatecsr() (edelweissfe.numerics.csrgenerator.csrgenerator method)": [[27, "edelweissfe.numerics.csrgenerator.CSRGenerator.updateCSR"]], "fieldvariable (class in edelweissfe.variables.fieldvariable)": [[28, "edelweissfe.variables.fieldvariable.FieldVariable"]], "scalarvariable (class in edelweissfe.variables.scalarvariable)": [[28, "edelweissfe.variables.scalarvariable.ScalarVariable"]], "edelweissfe.variables.fieldvariable": [[28, "module-edelweissfe.variables.fieldvariable"]], "edelweissfe.variables.scalarvariable": [[28, "module-edelweissfe.variables.scalarvariable"]]}})